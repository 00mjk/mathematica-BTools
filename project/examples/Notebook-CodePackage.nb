Notebook[{

Cell[CellGroupData[{
Cell["Code Section", "CodeSection",
 CellChangeTimes->{{3.7279001669605627`*^9, 
  3.7279001687193203`*^9}},ExpressionUUID->"9fc975d8-ebd6-412e-9540-\
8371955f64c0"],

Cell[BoxData["CodeInput"], "CodeInput",
 CellChangeTimes->{{3.727900175302854*^9, 
  3.7279001801617117`*^9}},ExpressionUUID->"d2fa94a5-4a7e-49b1-b24e-\
35f24673d489"],

Cell["This won\[CloseCurlyQuote]t be exported to package markdown", "Text",
 CellChangeTimes->{{3.7279001840469627`*^9, 
  3.727900196327437*^9}},ExpressionUUID->"dd795ab5-4d39-4560-a46b-\
5de1a1ea2212"],

Cell["\<\
\[LeftCeiling]
\tBut press Shift-Enter and this will
\[RightFloor]\
\>", "Text",
 Evaluatable->True,
 CellChangeTimes->{{3.7279001840469627`*^9, 
  3.727900216531636*^9}},ExpressionUUID->"0bf29f0b-1c64-4f2e-ab74-\
87388c409428"],

Cell[BoxData[
 RowBox[{
  RowBox[{"myFunc", "[", "]"}], ":=", "\n", "\t", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", "\n", "\t", "\t", "randomFunction"}], "\n", "\t",
    "\t", "]"}]}]], "CodeInput",
 CellChangeTimes->{{3.727900249050412*^9, 
  3.727900277024097*^9}},ExpressionUUID->"88a3fc99-cd7b-4f6b-9524-\
3e8733279e74"],

Cell[TextData[{
 "Block indentation is done with Command-Shift-], dedentation is done with \
Command-Shift-[, and toggling between ",
 Cell[BoxData[
  FormBox["\\n", TraditionalForm]], "Input",
  FormatType->"TraditionalForm",ExpressionUUID->
  "53e40363-7fab-4dc3-9a97-c2527a1305cc"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox[
     RowBox[{
      StyleBox["\\",
       FontWeight->"Bold"], "["}]], "IndentingNewLine", "\[InvisibleSpace]", 
    "]"}], TraditionalForm]], "Input",
  FormatType->"TraditionalForm",ExpressionUUID->
  "29fa9b41-de9a-4b3f-af40-9b64283431d7"]
}], "Text",
 CellChangeTimes->{{3.727900286109104*^9, 
  3.7279003989377327`*^9}},ExpressionUUID->"9cf061a3-b2e5-43b9-a23e-\
22b40af3626f"],

Cell[BoxData[
 RowBox[{"\t\t\t", 
  RowBox[{
   RowBox[{"myFunc", "[", "]"}], ":=", "\n", "\t", "\t", "\t", "\t", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\n", "\t", "\t", "\t", "\t", "\t", 
     "randomFunction"}], "\n", "\t", "\t", "\t", "\t", "\t", 
    "]"}]}]}]], "CodeInput",
 CellChangeTimes->{{3.727900249050412*^9, 3.7279002822209673`*^9}, {
  3.7279003397169933`*^9, 
  3.727900345226679*^9}},ExpressionUUID->"cd59019d-d2dd-493d-8270-\
a7272cbf044a"],

Cell[CellGroupData[{

Cell["Subsection", "CodeSubsection",
 CellChangeTimes->{{3.727900407490136*^9, 
  3.727900434090651*^9}},ExpressionUUID->"c1abb0cf-2a0d-4ef0-9864-\
fe322f2e1f58"],

Cell["All the basic section styles are supported", "Text",
 CellChangeTimes->{{3.727900414474029*^9, 
  3.72790042201057*^9}},ExpressionUUID->"c2774a5d-b371-4820-b2d9-\
8e2519d71e7e"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Subsubsection\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,
 CellChangeTimes->{{3.727900426753344*^9, 
  3.727900437146604*^9}},ExpressionUUID->"3ac90597-7387-44fc-92c5-\
64709bdd49ae"],

Cell["Shift-Enter will toggle markdown export in these cells", "Text",
 CellChangeTimes->{{3.727900441201277*^9, 
  3.727900465497466*^9}},ExpressionUUID->"780ed4d6-7777-4ba4-901f-\
d79fc98fbdf9"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell["", "SectionSeparator",ExpressionUUID->"02a8a0a6-6479-4617-80da-\
6eba6659729e"],

Cell[BoxData["Code"], "Input",
 CellChangeTimes->{{3.727900234612419*^9, 
  3.7279002350712337`*^9}},ExpressionUUID->"7f88a8ca-f4ee-4a6c-931b-\
dd1244345b1d"],

Cell["After a code separator, plain code is the default", "Text",
 CellChangeTimes->{{3.727900229206183*^9, 
  3.727900245149356*^9}},ExpressionUUID->"055a3a8b-aa64-453c-8d02-\
10523ae1c4cd"]
},
WindowSize->{808, 755},
WindowMargins->{{316, Automatic}, {Automatic, 50}},
FrontEndVersion->"11.2 for Mac OS X x86 (32-bit, 64-bit Kernel) (September \
10, 2017)",
StyleDefinitions->FrontEnd`FileName[{"BTools"}, "CodePackage.nb", 
  CharacterEncoding -> "UTF-8"]
]

