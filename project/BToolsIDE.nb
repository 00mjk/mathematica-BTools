Notebook[{

Cell[CellGroupData[{
Cell["MarkdownParser", "CodeSection",
 CellChangeTimes->{{3.7126189403663397`*^9, 3.7126189449249487`*^9}, {
  3.7225267577846813`*^9, 
  3.72252676001336*^9}},ExpressionUUID->"d8bf730e-4d35-4246-b909-\
2bf9580489d4"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"MarkdownToXML", "::", "usage"}], "=", "\n", "\t", 
   "\"\<Converts markdown to XML\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"MarkdownToNotebook", "::", "usage"}], "=", "\n", "\t", 
   "\"\<Converts markdown to Notebook\>\""}], 
  ";"}]}], "CodeInput",ExpressionUUID->"0076352a-80f4-4f94-aecb-cb39343b3351"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Begin", "[", "\"\<`Private`\>\"", "]"}], 
  ";"}]], "InputSection",ExpressionUUID->"da160545-cb1e-4f3f-bde9-\
78a3f868b066"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]MarkdownToXML\[RightFloor]", "CodeSubsection",
 Evaluatable->True,ExpressionUUID->"71d5cc73-a5e4-4706-bd2e-c91794de1a69"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]markdownToXMLElement\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"42abb2b4-636b-4c77-889b-6b02bc5cf114"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Meta\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,
 CellChangeTimes->{{3.7125915870629597`*^9, 
  3.712591587606221*^9}},ExpressionUUID->"b1fe3483-b2d6-40aa-9de8-\
ae64a7681eea"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"markdownToXMLElement", "[", 
    RowBox[{"\"\<Meta\>\"", ",", " ", "bits_"}], "]"}], ":=", "\n", "  ", 
   RowBox[{"XMLElement", "[", 
    RowBox[{"\"\<meta\>\"", ",", "\n", "    ", 
     RowBox[{"Normal", "@", "\n", "      ", 
      RowBox[{"AssociationThread", "[", "\n", "        ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<name\>\"", ",", " ", "\"\<content\>\""}], "}"}], ",", 
        "\n", "  ", "      ", "bits"}], "\n", "  ", "      ", "]"}]}], ",", 
     "\n", "    ", 
     RowBox[{"{", "}"}]}], "\n", "    ", "]"}]}], 
  ";"}]], "CodeInput",ExpressionUUID->"08386ef9-a7f3-4532-bd1c-50d68cd49b8e"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]FenceBlock\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"f98c0754-079d-4e51-a83b-a96642bb1113"],

Cell[BoxData[
 RowBox[{
  RowBox[{"markdownToXMLElement", "[", "\n", "  ", 
   RowBox[{"\"\<FenceBlock\>\"", ",", "\n", "  ", 
    RowBox[{"{", 
     RowBox[{"lang_", ",", " ", "code_"}], "}"}]}], "\n", "  ", "]"}], ":=", 
  "\n", "  ", 
  RowBox[{"XMLElement", "[", 
   RowBox[{"\"\<pre\>\"", ",", "\n", "    ", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"!", 
       RowBox[{"StringMatchQ", "[", 
        RowBox[{"lang", ",", " ", "Whitespace"}], "]"}]}], ",", "\n", 
      "      ", 
      RowBox[{"{", "\n", "        ", 
       RowBox[{"\"\<class\>\"", "\[Rule]", "\n", "          ", 
        RowBox[{"TemplateApply", "[", "\n", "            ", 
         RowBox[{
         "\"\<lang-`lang` highlight-source-`lang`\>\"", ",", "\n", 
          "            ", 
          RowBox[{"<|", "\n", "              ", 
           RowBox[{"\"\<lang\>\"", "->", 
            RowBox[{"StringTrim", "[", "lang", "]"}]}], "\n", 
           "              ", "|>"}]}], "\n", "            ", "]"}]}], "\n", 
       "        ", "}"}], ",", "\n", "      ", 
      RowBox[{"{", "}"}]}], "\n", "      ", "]"}], ",", "\n", "    ", 
    RowBox[{"{", "\n", "      ", 
     RowBox[{"XMLElement", "[", 
      RowBox[{"\"\<code\>\"", ",", "\n", "        ", 
       RowBox[{"{", "}"}], ",", "\n", "        ", 
       RowBox[{"{", "\n", "          ", 
        RowBox[{"\"\<\\n\>\"", "<>", "code"}], "\n", "          ", "}"}]}], 
      "\n", "        ", "]"}], "\n", "      ", "}"}]}], "\n", "    ", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"6f76bfb7-a593-4d7a-bc13-322e823c9022"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]CodeBlock\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,
 CellChangeTimes->{{3.712584832841477*^9, 
  3.712584834368746*^9}},ExpressionUUID->"75a38628-9ac6-4c2e-9e0f-\
9118c5ac5d8f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"markdownToXMLElement", "[", 
   RowBox[{"\"\<CodeBlock\>\"", ",", " ", "text_"}], "]"}], ":=", "\n", "  ", 
  
  RowBox[{"XMLElement", "[", 
   RowBox[{"\"\<pre\>\"", ",", "\n", "    ", 
    RowBox[{"{", "}"}], ",", "\n", "    ", 
    RowBox[{"{", "\n", "      ", 
     RowBox[{"XMLElement", "[", 
      RowBox[{"\"\<code\>\"", ",", " ", 
       RowBox[{"{", "}"}], ",", " ", 
       RowBox[{"{", "text", "}"}]}], "]"}], "\n", "      ", "}"}]}], "\n", 
   "    ", "]"}]}]], \
"CodeInput",ExpressionUUID->"c79d194b-6f1e-4d03-a51a-8a182d73bf14"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]QuoteBlock\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,
 CellChangeTimes->{{3.712584832841477*^9, 3.712584834368746*^9}, {
  3.712932759248433*^9, 
  3.7129327599677887`*^9}},ExpressionUUID->"0c6f9615-fabd-46d6-9bf7-\
8c2cbc9b809a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"markdownToXMLElement", "[", 
   RowBox[{"\"\<QuoteBlock\>\"", ",", " ", "xml_"}], "]"}], ":=", "\n", "\t", 
  
  RowBox[{"XMLElement", "[", 
   RowBox[{"\"\<blockquote\>\"", ",", " ", 
    RowBox[{"{", "}"}], ",", " ", 
    RowBox[{"Flatten", "@", 
     RowBox[{"List", "@", "xml"}]}]}], 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"7fa4ff36-26bd-4085-b3b0-c95bbecc92fb"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Header\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,
 CellChangeTimes->{{3.7125895295632277`*^9, 
  3.712589533027046*^9}},ExpressionUUID->"6d5a5c0f-dbcf-4982-965c-\
fdbf2182c213"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"markdownToXMLElement", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<Header\>\"", ",", " ", "n_"}], "}"}], ",", " ", "xml_"}], 
    "]"}], ":=", "\n", "  ", 
   RowBox[{"XMLElement", "[", 
    RowBox[{
     RowBox[{"\"\<h\>\"", "<>", 
      RowBox[{"ToString", "[", "n", "]"}]}], ",", " ", 
     RowBox[{"{", "}"}], ",", " ", 
     RowBox[{"Flatten", "@", 
      RowBox[{"List", "@", "xml"}]}]}], "]"}]}], 
  ";"}]], "CodeInput",ExpressionUUID->"adc80836-b19b-4a20-9571-82ad1d237389"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Item\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,
 CellChangeTimes->{{3.7125976546337557`*^9, 
  3.7125976550493393`*^9}},ExpressionUUID->"50fa92e9-4477-4e28-9ee1-\
af13759ea8b6"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"markdownToXMLElement", "[", 
    RowBox[{"\"\<OrderedList\>\"", ",", " ", "items_"}], "]"}], ":=", "\n", 
   "  ", 
   RowBox[{"XMLElement", "[", 
    RowBox[{"\"\<ol\>\"", ",", " ", 
     RowBox[{"{", "}"}], ",", " ", "items"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"markdownToXMLElement", "[", 
    RowBox[{"\"\<UnorderedList\>\"", ",", " ", "items_"}], "]"}], ":=", "\n", 
   "  ", 
   RowBox[{"XMLElement", "[", 
    RowBox[{"\"\<ul\>\"", ",", " ", 
     RowBox[{"{", "}"}], ",", " ", "items"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"markdownToXMLElement", "[", 
    RowBox[{"\"\<UnorderedList\>\"", ",", " ", "items_"}], "]"}], ":=", "\n", 
   "  ", 
   RowBox[{"XMLElement", "[", 
    RowBox[{"\"\<ul\>\"", ",", " ", 
     RowBox[{"{", "}"}], ",", " ", "items"}], "]"}]}], ";"}], "\n", 
 RowBox[{" ", 
  RowBox[{
   RowBox[{
    RowBox[{"markdownToXMLElement", "[", 
     RowBox[{"\"\<Item\>\"", ",", " ", "item_"}], "]"}], ":=", "\n", "  ", 
    RowBox[{"XMLElement", "[", 
     RowBox[{"\"\<li\>\"", ",", " ", 
      RowBox[{"{", "}"}], ",", " ", "item"}], "]"}]}], ";"}], 
  " "}]}], "CodeInput",ExpressionUUID->"98e2ec1e-ec2e-48ad-aad6-d50ffa7f1164"]\

}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]ItalBold\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"c42f0927-ceeb-41db-94d6-a2c131aa12d7"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"markdownToXMLElement", "[", 
    RowBox[{"\"\<Italic\>\"", ",", " ", "items_"}], "]"}], ":=", "\n", "  ", 
   RowBox[{"XMLElement", "[", 
    RowBox[{"\"\<em\>\"", ",", " ", 
     RowBox[{"{", "}"}], ",", " ", "items"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"markdownToXMLElement", "[", 
    RowBox[{"\"\<Bold\>\"", ",", " ", "items_"}], "]"}], ":=", "\n", "  ", 
   RowBox[{"XMLElement", "[", 
    RowBox[{"\"\<strong\>\"", ",", " ", 
     RowBox[{"{", "}"}], ",", " ", "items"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"markdownToXMLElement", "[", 
    RowBox[{"\"\<ItalicBold\>\"", ",", " ", "items_"}], "]"}], ":=", "\n", 
   "  ", 
   RowBox[{"XMLElement", "[", 
    RowBox[{"\"\<em\>\"", ",", " ", 
     RowBox[{"{", "}"}], ",", " ", 
     RowBox[{"XMLElement", "[", 
      RowBox[{"\"\<strong\>\"", ",", " ", 
       RowBox[{"{", "}"}], ",", " ", "items"}], "]"}]}], "]"}]}], 
  ";"}]}], "CodeInput",ExpressionUUID->"8a85fde3-e2c4-42ac-b5e1-50185235e566"]\

}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Delimiter\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,
 CellChangeTimes->{{3.712590814499344*^9, 
  3.712590815722493*^9}},ExpressionUUID->"f93664e7-7f5f-48d8-b827-\
ca2ce1b51159"],

Cell[BoxData[
 RowBox[{
  RowBox[{"markdownToXMLElement", "[", 
   RowBox[{"\"\<Delimiter\>\"", ",", " ", "_"}], "]"}], ":=", "\n", "\t", 
  RowBox[{"XMLElement", "[", 
   RowBox[{"\"\<hr\>\"", ",", " ", 
    RowBox[{"{", "}"}], ",", " ", 
    RowBox[{"{", "}"}]}], 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"df847347-af8f-499d-9a20-227dad31ab63"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]CodeLine\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"852bab1f-c7e1-425a-8d56-35a8d9a8b140"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"markdownToXMLElement", "[", 
    RowBox[{"\"\<Code\>\"", ",", " ", "text_"}], "]"}], ":=", "\n", "\t", 
   RowBox[{"XMLElement", "[", 
    RowBox[{"\"\<code\>\"", ",", 
     RowBox[{"{", "}"}], ",", " ", 
     RowBox[{"{", "text", "}"}]}], "]"}]}], 
  ";"}]], "CodeInput",ExpressionUUID->"44119608-48da-4f0a-a5cb-a10db282c924"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]XML\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"a8099415-687b-4cca-8b3b-1db33912f590"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"markdownToXMLElement", "[", 
    RowBox[{"\"\<XML\>\"", ",", " ", "xml_"}], "]"}], ":=", "\n", "  ", 
   "xml"}], ";"}]], \
"CodeInput",ExpressionUUID->"4bc965e1-b550-464b-bcfc-bc17f03191d1"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Hyperlink\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,
 CellChangeTimes->{{3.7125852658153553`*^9, 
  3.712585267156897*^9}},ExpressionUUID->"9ccef09a-b2c6-4af8-b429-\
0421423d0769"],

Cell[BoxData[
 RowBox[{
  RowBox[{"markdownToXMLElement", "[", 
   RowBox[{"\"\<Link\>\"", ",", " ", 
    RowBox[{"{", 
     RowBox[{"link_", ",", " ", "body_"}], "}"}]}], "]"}], ":=", "\n", "  ", 
  RowBox[{"XMLElement", "[", 
   RowBox[{"\"\<a\>\"", ",", " ", 
    RowBox[{"{", 
     RowBox[{"\"\<href\>\"", "->", "link"}], "}"}], ",", " ", "body"}], 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"f21fdb64-38db-4f7b-90fd-77bb6694c607"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Img\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"336b8db1-fb6d-4841-bb43-25e47cca2936"],

Cell[BoxData[
 RowBox[{
  RowBox[{"markdownToXMLElement", "[", 
   RowBox[{"\"\<Image\>\"", ",", " ", 
    RowBox[{"{", 
     RowBox[{"src_", ",", " ", "alt_"}], "}"}]}], "]"}], ":=", "\n", "\t", 
  RowBox[{"XMLElement", "[", 
   RowBox[{"\"\<img\>\"", ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<src\>\"", "\[Rule]", "src"}], ",", " ", 
      RowBox[{"\"\<alt\>\"", "\[Rule]", "alt"}]}], "}"}], ",", " ", 
    RowBox[{"{", "}"}]}], 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"b1d16cd7-c2c4-4c88-89a2-016b3109c9f9"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]TextForms\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"05db959b-a57d-4400-826b-4e5bde3d5847"],

Cell[BoxData[
 RowBox[{
  RowBox[{"$MarkdownToXMLTextForms", "=", "\n", "\t", 
   RowBox[{"{", "\n", "\t\t", "\"\<MathLine\>\"", "\n", "\t\t", "}"}]}], 
  ";"}]], "CodeInput",ExpressionUUID->"80709504-55f5-47f1-b640-ebdb3af155a8"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"markdownToXMLElement", "[", 
    RowBox[{
     RowBox[{"Alternatives", "@@", "$MarkdownToXMLTextForms"}], ",", " ", 
     "text_String"}], "]"}], ":=", "\n", "\t", "text"}], 
  ";"}]], "CodeInput",ExpressionUUID->"b0a82b3c-a498-451d-9710-5b2ad19c23cf"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Text\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"a4733bd9-bd52-4851-9410-e1928ada2c53"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"markdownToXMLElement", "[", 
    RowBox[{"\"\<Text\>\"", ",", " ", "x_XMLElement"}], "]"}], ":=", "x"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"markdownToXMLElement", "[", 
   RowBox[{"\"\<Text\>\"", ",", " ", "e_"}], "]"}], ":=", 
  RowBox[{"XMLElement", "[", 
   RowBox[{"\"\<p\>\"", ",", " ", 
    RowBox[{"{", "}"}], ",", " ", 
    RowBox[{"Flatten", "@", 
     RowBox[{"{", "e", "}"}]}]}], 
   "]"}]}]}], \
"CodeInput",ExpressionUUID->"21030fd3-5eba-4d01-bc2e-96a12f2e8e2f"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Fallback\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,
 CellChangeTimes->{{3.712585411362853*^9, 
  3.712585412778001*^9}},ExpressionUUID->"943fb2a4-2af6-4e0e-bdb5-\
0aa313b2c4f2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"markdownToXMLElement", "[", 
   RowBox[{"t_", ",", " ", "text_String"}], "]"}], ":=", "\n", "\t", 
  RowBox[{"XMLElement", "[", 
   RowBox[{"t", ",", " ", 
    RowBox[{"{", "}"}], ",", " ", 
    RowBox[{"{", "text", "}"}]}], 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"cd5bf045-34d0-435b-abbb-ec2b7b6edf6f"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]MarkdownToXML\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"0f66c561-0972-4427-ac06-19d20d837b24"],

Cell[BoxData[
 RowBox[{"MarkdownToXML", "//", 
  "Clear"}]], \
"CodeInput",ExpressionUUID->"0c968085-bb06-4fa2-9d49-6c0ffba38ae6"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "MarkdownToXML", "]"}], "=", "\n", "  ", 
   RowBox[{
    RowBox[{"DeleteDuplicatesBy", "[", "First", "]"}], "@", "\n", "    ", 
    RowBox[{"Join", "[", "\n", "      ", 
     RowBox[{
      RowBox[{"{", "\n", "        ", 
       RowBox[{
        RowBox[{"\"\<HeaderElements\>\"", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
          "\"\<meta\>\"", ",", " ", "\"\<style\>\"", ",", " ", "\"\<link\>\"",
            ",", " ", "\"\<title\>\""}], "}"}]}], ",", "\n", "        ", 
        RowBox[{
        "\"\<PostProcessor\>\"", "\[Rule]", "markdownToXMLElement"}]}], "\n", 
       "        ", "}"}], ",", "\n", "  ", "    ", 
      RowBox[{"Options", "[", "MarkdownParse", "]"}]}], "\n", "      ", 
     "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"MarkdownToXML", "[", 
    RowBox[{"s_String", ",", " ", 
     RowBox[{"ops", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", "\n", "  ", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", "\n", "      ", 
      RowBox[{"he", "=", 
       RowBox[{"OptionValue", "[", "\"\<HeaderElements\>\"", "]"}]}], "\n", 
      "      ", "}"}], ",", "\n", "    ", 
     RowBox[{"Replace", "[", "\n", "      ", 
      RowBox[{
       RowBox[{"GatherBy", "[", "\n", "        ", 
        RowBox[{
         RowBox[{"MarkdownParse", "[", "\n", "          ", 
          RowBox[{"s", ",", "\n", "          ", 
           RowBox[{"FilterRules", "[", "\n", "            ", 
            RowBox[{
             RowBox[{"{", "\n", "              ", 
              RowBox[{"ops", ",", "\n", "              ", 
               RowBox[{"Options", "[", "MarkdownToXML", "]"}]}], "\n", 
              "              ", "}"}], ",", "\n", "            ", 
             RowBox[{"Options", "[", "MarkdownParse", "]"}]}], "\n", 
            "            ", "]"}]}], "\n", "          ", "]"}], ",", "\n", 
         "        ", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"base", "=", 
             RowBox[{"StringMatchQ", "[", 
              RowBox[{"Alternatives", "@@", "he"}], "]"}]}], "}"}], ",", "\n",
            "          ", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Head", "[", "#", "]"}], "\[Equal]", "XMLElement"}], "&&", 
             RowBox[{
              RowBox[{"Length", "[", "#", "]"}], ">", "0"}], "&&", 
             RowBox[{"base", "@", 
              RowBox[{"First", "[", "#", "]"}]}]}], "&"}]}], "\n", 
          "          ", "]"}]}], "\n", "        ", "]"}], ",", "\n", "      ", 
       RowBox[{"{", "\n", "        ", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"h_", ",", "b_"}], "}"}], ":>", "\n", "          ", 
          RowBox[{"XMLElement", "[", 
           RowBox[{"\"\<html\>\"", ",", "\n", "            ", 
            RowBox[{"{", "}"}], ",", "\n", "            ", 
            RowBox[{"{", "\n", "              ", 
             RowBox[{
              RowBox[{"XMLElement", "[", 
               RowBox[{"\"\<head\>\"", ",", " ", 
                RowBox[{"{", "}"}], ",", " ", 
                RowBox[{"DeleteDuplicates", "@", "h"}]}], "]"}], ",", "\n", 
              "              ", 
              RowBox[{"XMLElement", "[", 
               RowBox[{"\"\<body\>\"", ",", " ", 
                RowBox[{"{", "}"}], ",", " ", "b"}], "]"}]}], "\n", 
             "              ", "}"}]}], "\n", "            ", "]"}]}], ",", 
         "\n", "        ", 
         RowBox[{
          RowBox[{"{", "b_", "}"}], ":>", "\n", "          ", 
          RowBox[{"XMLElement", "[", 
           RowBox[{"\"\<html\>\"", ",", "\n", "            ", 
            RowBox[{"{", "}"}], ",", "\n", "            ", 
            RowBox[{"{", "\n", "              ", 
             RowBox[{"XMLElement", "[", 
              RowBox[{"\"\<body\>\"", ",", 
               RowBox[{"{", "}"}], ",", "b"}], "]"}], "\n", "              ", 
             "}"}]}], "\n", "            ", "]"}]}]}], "\n", "        ", 
        "}"}]}], "]"}]}], "\n", "    ", "]"}]}], 
  ";"}]}], "CodeInput",ExpressionUUID->"8b78a906-f35e-46f6-ae4d-b2d32976947b"]\

}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]MarkdownToNotebook\[RightFloor]", "CodeSubsection",
 Evaluatable->True,ExpressionUUID->"590487ea-33bd-4411-82c1-dff0e5e3ea2a"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]markdownToCell\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"38b1880e-c310-416f-a22c-1aab1ab6f375"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]helpers\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"1b6d1d4b-5664-4417-9e93-9d714eb06f62"],

Cell[BoxData[{
 RowBox[{"prepCellData", "//", "Clear"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"prepCellData", "[", "s_String", "]"}], ":=", "s"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"prepCellData", "[", 
    RowBox[{"{", "s_String", "}"}], "]"}], ":=", "s"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"prepCellData", "[", "e_", "]"}], ":=", 
   RowBox[{"TextData", "[", "e", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"prepCell", "//", "Clear"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"prepCell", "[", 
    RowBox[{"{", 
     RowBox[{"l", ":", 
      RowBox[{"Except", "[", "_List", "]"}]}], "}"}], "]"}], ":=", "l"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"prepCell", "[", "l_List", "]"}], ":=", 
   RowBox[{"Cell", "[", 
    RowBox[{"TextData", "[", "l", "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"prepCell", "[", "e_", "]"}], ":=", "e"}], 
  ";"}]}], "CodeInput",ExpressionUUID->"f872ca99-59d3-4acf-9cd3-9b5e0544a10a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"getCodeBoxes", "[", "code_", "]"}], ":=", "\n", "  ", 
   RowBox[{"MathLink`CallFrontEnd", "[", 
    RowBox[{"FrontEnd`ReparseBoxStructurePacket", "[", "code", "]"}], "]"}]}],
   ";"}]], "CodeInput",ExpressionUUID->"5dfd4df1-931c-4ee3-85bb-a898cc6b185c"]\

}, Open  ]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Meta\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,
 CellChangeTimes->{{3.7125915870629597`*^9, 
  3.712591587606221*^9}},ExpressionUUID->"262dab14-1e74-43c1-9dcf-\
90392bead5ad"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"markdownToCell", "[", 
    RowBox[{"\"\<Meta\>\"", ",", " ", 
     RowBox[{"{", 
      RowBox[{"name_", ",", " ", "content_"}], "}"}]}], "]"}], ":=", "\n", 
   "  ", 
   RowBox[{"Cell", "[", 
    RowBox[{
     RowBox[{"prepCellData", "@", "content"}], ",", " ", "\"\<Metadata\>\"", 
     ",", " ", "\"\<Markdown\>\"", ",", " ", 
     RowBox[{"TaggingRules", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Field\>\"", "\[Rule]", "name"}], "}"}]}]}], "]"}]}], 
  ";"}]], "CodeInput",ExpressionUUID->"e6d6da28-86af-4557-b53b-3cba21680f71"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]FenceBlock\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"5277d047-0bbe-4ce1-904b-a8899b81f62d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"markdownToCell", "[", "\n", "  ", 
    RowBox[{"\"\<FenceBlock\>\"", ",", "\n", "  ", 
     RowBox[{"{", 
      RowBox[{"lang_", ",", " ", "code_"}], "}"}]}], "\n", "  ", "]"}], ":=", 
   "\n", "  ", 
   RowBox[{"Cell", "[", 
    RowBox[{
     RowBox[{"BoxData", "@", 
      RowBox[{"getCodeBoxes", "[", "code", "]"}]}], ",", "\n", "    ", 
     "\"\<Code\>\"", ",", "\n", "    ", "\"\<FencedCode\>\"", ",", "\n", 
     "    ", "\"\<Markdown\>\"", ",", "\n", "    ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"!", 
        RowBox[{"StringMatchQ", "[", 
         RowBox[{"lang", ",", " ", "Whitespace"}], "]"}]}], ",", "\n", 
       "      ", 
       RowBox[{"TaggingRules", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<Language\>\"", "->", "lang"}], "}"}]}], ",", "\n", 
       "      ", 
       RowBox[{"Sequence", "@@", 
        RowBox[{"{", "}"}]}]}], "\n", "      ", "]"}]}], "\n", "    ", 
    "]"}]}], ";"}]], \
"CodeInput",ExpressionUUID->"ae2a58ce-40d9-4a13-ae8b-903ce9ba7ea7"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]CodeBlock\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,
 CellChangeTimes->{{3.712584832841477*^9, 
  3.712584834368746*^9}},ExpressionUUID->"ef7a6b76-44cf-4dc2-bfa9-\
0aa09754714e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"markdownToCell", "[", 
   RowBox[{"\"\<CodeBlock\>\"", ",", " ", "text_"}], "]"}], ":=", "\n", "  ", 
  
  RowBox[{"Cell", "[", 
   RowBox[{
    RowBox[{"BoxData", "@", 
     RowBox[{"getCodeBoxes", "[", "text", "]"}]}], ",", " ", "\"\<Code\>\"", 
    ",", " ", "\"\<Markdown\>\""}], 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"1f3b1e41-d914-40f7-8805-d2f63d106c65"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]QuoteBlock\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,
 CellChangeTimes->{{3.712584832841477*^9, 3.712584834368746*^9}, {
  3.712932759248433*^9, 
  3.7129327599677887`*^9}},ExpressionUUID->"7de6dc87-34da-4fb0-b217-\
544b3703ae2f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"markdownToCell", "[", 
   RowBox[{"\"\<QuoteBlock\>\"", ",", " ", "text_"}], "]"}], ":=", "\n", "\t", 
  RowBox[{"Cell", "[", 
   RowBox[{
    RowBox[{"prepCellData", "[", "text", "]"}], ",", " ", "\"\<Text\>\"", ",",
     " ", "\"\<Quote\>\"", ",", " ", "\"\<Markdown\>\""}], 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"4ae47e36-02e7-4aa1-8df4-8e9aca17005f"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Header\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,
 CellChangeTimes->{{3.7125895295632277`*^9, 
  3.712589533027046*^9}},ExpressionUUID->"4e56fde9-bd2c-4090-b2f9-\
07e966064d02"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"markdownToCell", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<Header\>\"", ",", " ", "n_"}], "}"}], ",", " ", "text_"}], 
    "]"}], ":=", "\n", "  ", 
   RowBox[{"Cell", "[", 
    RowBox[{
     RowBox[{"prepCellData", "[", "text", "]"}], ",", " ", 
     RowBox[{"Nest", "[", 
      RowBox[{
       RowBox[{"StringReplace", "[", 
        RowBox[{"\"\<S\>\"", "\[Rule]", "\"\<Subs\>\""}], "]"}], ",", " ", 
       "\"\<Section\>\"", ",", " ", 
       RowBox[{"n", "-", "1"}]}], "]"}], ",", " ", "\"\<Markdown\>\""}], 
    "]"}]}], ";"}]], \
"CodeInput",ExpressionUUID->"c715ec63-e95e-45a3-9d31-eb4445da393d"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Item\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,
 CellChangeTimes->{{3.7125976546337557`*^9, 
  3.7125976550493393`*^9}},ExpressionUUID->"da392ad9-b4a3-4202-89dc-\
5e05abecc20f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"markdownToCell", "[", 
    RowBox[{"\"\<OrderedList\>\"", ",", " ", "items_"}], "]"}], ":=", "\n", 
   "  ", 
   RowBox[{"Cell", "@", 
    RowBox[{"CellGroupData", "@", "\n", "    ", 
     RowBox[{"Flatten", "@", 
      RowBox[{"{", "\n", "      ", 
       RowBox[{"items", "/.", 
        RowBox[{
         RowBox[{"Cell", "[", 
          RowBox[{"a___", ",", " ", "\"\<Item\>\"", ",", " ", "b___"}], "]"}],
          "\[RuleDelayed]", 
         RowBox[{"Cell", "[", 
          RowBox[{"a", ",", " ", "\"\<ItemNumbered\>\"", ",", " ", "b"}], 
          "]"}]}]}], "\n", "      ", "}"}]}]}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"markdownToCell", "[", 
    RowBox[{"\"\<UnorderedList\>\"", ",", " ", "items_"}], "]"}], ":=", "\n", 
   "  ", 
   RowBox[{"Cell", "@", 
    RowBox[{"CellGroupData", "@", "\n", "    ", 
     RowBox[{"Flatten", "@", 
      RowBox[{"{", "items", "}"}]}]}]}]}], ";"}], "\n", 
 RowBox[{" ", 
  RowBox[{
   RowBox[{
    RowBox[{"markdownToCell", "[", 
     RowBox[{"\"\<Item\>\"", ",", " ", "item_"}], "]"}], ":=", "\n", "  ", 
    RowBox[{"Cell", "[", 
     RowBox[{
      RowBox[{"prepCellData", "[", "item", "]"}], ",", " ", "\"\<Item\>\"", 
      ",", " ", "\"\<Markdown\>\""}], "]"}]}], ";"}], 
  " "}]}], "CodeInput",ExpressionUUID->"c88bc7fb-a5ab-4267-9183-b7b064a64c20"]\

}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]ItalBold\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"0ea1d6a0-6119-42d7-a972-cb9c633911d3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"markdownToCell", "[", 
    RowBox[{"\"\<Italic\>\"", ",", " ", "items_"}], "]"}], ":=", "\n", "  ", 
   RowBox[{"StyleBox", "[", 
    RowBox[{
     RowBox[{"prepCell", "@", "items"}], ",", " ", 
     RowBox[{"FontSlant", "\[Rule]", "\"\<Italic\>\""}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"markdownToCell", "[", 
    RowBox[{"\"\<Bold\>\"", ",", " ", "items_"}], "]"}], ":=", "\n", "  ", 
   RowBox[{"StyleBox", "[", 
    RowBox[{
     RowBox[{"prepCell", "@", "items"}], ",", " ", 
     RowBox[{"FontWeight", "\[Rule]", "\"\<Bold\>\""}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"markdownToCell", "[", 
    RowBox[{"\"\<ItalicBold\>\"", ",", " ", "items_"}], "]"}], ":=", "\n", 
   "  ", 
   RowBox[{"StyleBox", "[", 
    RowBox[{
     RowBox[{"prepCell", "@", "items"}], ",", " ", 
     RowBox[{"FontSlant", "\[Rule]", "\"\<Italic\>\""}], ",", " ", 
     RowBox[{"FontWeight", "\[Rule]", "\"\<Bold\>\""}]}], "]"}]}], 
  ";"}]}], "CodeInput",ExpressionUUID->"5c79e747-fd89-48ea-88f5-6c95b1728386"]\

}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Delimiter\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,
 CellChangeTimes->{{3.712590814499344*^9, 
  3.712590815722493*^9}},ExpressionUUID->"8c70f0e8-a569-4060-81af-\
04f2dcc869cb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"markdownToCell", "[", 
   RowBox[{"\"\<Delimiter\>\"", ",", " ", "_"}], "]"}], ":=", "\n", "\t", 
  RowBox[{"Cell", "[", 
   RowBox[{
   "\"\<\>\"", ",", " ", "\"\<PageBreak\>\"", ",", " ", "\"\<Delimiter\>\"", 
    ",", " ", "\"\<Markdown\>\"", ",", "\n", "\t  ", 
    RowBox[{"PageBreakAbove", "\[Rule]", "False"}], ",", "\n", "\t  ", 
    RowBox[{"PageBreakBelow", "\[Rule]", "False"}], ",", "\n", "\t  ", 
    RowBox[{"PageBreakWithin", "\[Rule]", "False"}]}], "\n", "\t  ", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"e041ab91-5949-41da-85b0-9fbff11745af"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]CodeLine\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"61e47a39-5510-4a83-b31e-007e98a5ad42"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"markdownToCell", "[", 
    RowBox[{"\"\<Code\>\"", ",", " ", "text_"}], "]"}], ":=", "\n", "\t", 
   RowBox[{"Cell", "[", 
    RowBox[{
     RowBox[{"BoxData", "@", 
      RowBox[{"getCodeBoxes", "[", "text", "]"}]}], ",", " ", "\"\<Input\>\"",
      ",", " ", "\"\<Markdown\>\""}], "]"}]}], 
  ";"}]], "CodeInput",ExpressionUUID->"9d4bf3b5-9ac3-44c5-b72d-bf8425620154"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]XML\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"4c24452a-9310-4e7b-a8d8-030b686229da"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"markdownToCell", "[", 
    RowBox[{"\"\<XML\>\"", ",", " ", "xml_"}], "]"}], ":=", "\n", "  ", 
   RowBox[{"Cell", "[", 
    RowBox[{
     RowBox[{"ExportString", "[", 
      RowBox[{"xml", ",", " ", "\"\<XML\>\""}], "]"}], ",", " ", 
     "\"\<Text\>\"", ",", " ", "\"\<XML\>\"", ",", " ", "\"\<Markdown\>\""}], 
    "]"}]}], ";"}]], \
"CodeInput",ExpressionUUID->"1a91bc24-a8c1-47f2-a1cd-aaeb4a3efdae"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Hyperlink\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,
 CellChangeTimes->{{3.7125852658153553`*^9, 
  3.712585267156897*^9}},ExpressionUUID->"9fb13842-910e-4aa6-9c46-\
ebe10c95c3f2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"markdownToCell", "[", 
   RowBox[{"\"\<Link\>\"", ",", " ", 
    RowBox[{"{", 
     RowBox[{"link_", ",", " ", "body_"}], "}"}]}], "]"}], ":=", "\n", "  ", 
  RowBox[{"ButtonBox", "[", 
   RowBox[{
    RowBox[{"prepCell", "[", "body", "]"}], ",", " ", 
    RowBox[{"BaseStyle", "\[Rule]", "\"\<Hyperlink\>\""}], ",", " ", 
    RowBox[{"ButtonData", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"URL", "[", "link", "]"}], ",", " ", "None"}], "}"}]}]}], 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"72db5e30-82bf-40d3-9b7d-01b82521cccb"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Img\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"3d31c4bd-64b4-4cfa-9bca-46a7a6df3e95"],

Cell[BoxData[
 RowBox[{
  RowBox[{"markdownToCell", "[", 
   RowBox[{"\"\<Image\>\"", ",", " ", 
    RowBox[{"{", 
     RowBox[{"src_", ",", " ", "alt_"}], "}"}]}], "]"}], ":=", "\n", "\t", 
  RowBox[{"TemplateBox", "[", "\n", "\t  ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"src", ",", " ", "alt", ",", " ", 
      RowBox[{"ToBoxes", "[", "alt", "]"}]}], "}"}], ",", "\n", "\t  ", 
    "\"\<LinkedImage\>\"", ",", "\n", "\t  ", 
    RowBox[{"DisplayFunction", ":>", "\n", "\t    ", 
     RowBox[{"Function", "[", "\n", "\t      ", 
      RowBox[{"TooltipBox", "[", "\n", "    \t    ", 
       RowBox[{
        RowBox[{"DynamicBox", "[", "\n", "  ", "  ", "  \t    ", 
         RowBox[{
          RowBox[{"ToBoxes", "@", 
           RowBox[{"Refresh", "[", 
            RowBox[{
             RowBox[{"Import", "[", "#", "]"}], ",", " ", "None"}], "]"}]}], 
          ",", "\n", "  ", "  ", "  ", "\t    ", 
          RowBox[{"SingleEvaluation", "\[Rule]", "True"}]}], "\n", "  ", "  ",
          "  ", "\t    ", "]"}], ",", "\n", "    \t    ", "#3"}], "\n", 
       "    \t    ", "]"}], "\n", "    \t  ", "]"}]}]}], "\n", "    ", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"5fe4fca4-688f-4e8c-850c-4b16961f210d"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]TextForms\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"acc18581-fd3b-422d-ad87-fd8120485565"],

Cell[BoxData[
 RowBox[{
  RowBox[{"markdownToCell", "[", 
   RowBox[{"\"\<MathLine\>\"", ",", " ", "text_String"}], "]"}], ":=", "\n", 
  "  ", 
  RowBox[{
   RowBox[{"ImportString", "[", 
    RowBox[{"text", ",", " ", "\"\<LaTeX\>\""}], "]"}], "[", 
   RowBox[{"[", "1", "]"}], 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"5719f61d-1b01-41c7-b501-cfd1fbfc48db"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Text\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"482c614c-c1ae-401b-91f7-115e1279df11"],

Cell[BoxData[
 RowBox[{
  RowBox[{"markdownToCell", "[", 
   RowBox[{"\"\<Text\>\"", ",", " ", "e_"}], "]"}], ":=", "\n", "  ", 
  RowBox[{"Cell", "[", 
   RowBox[{
    RowBox[{"prepCellData", "[", "e", "]"}], ",", " ", "\"\<Text\>\"", ",", 
    " ", "\"\<Markdown\>\""}], 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"6a782e0d-8f4c-44fb-94c2-abf6252589e2"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Fallback\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"6afe6869-033e-40dd-9255-d46ebaf7a827"],

Cell[BoxData[
 RowBox[{
  RowBox[{"markdownToCell", "[", 
   RowBox[{"t_", ",", " ", "text_String"}], "]"}], ":=", "\n", "\t", 
  RowBox[{"Cell", "[", 
   RowBox[{
   "text", ",", " ", "\"\<Text\>\"", ",", " ", "t", ",", " ", 
    "\"\<Markdown\>\""}], 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"1455fb12-30dd-42a8-a612-f0d59f590bff"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]MarkdownToNotebook\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"89a0667c-5d5c-4d7d-84c2-97cab247b554"],

Cell[BoxData[
 RowBox[{"MarkdownToNotebook", "//", 
  "Clear"}]], \
"CodeInput",ExpressionUUID->"a3dd2c5f-5858-41ca-8f6f-1734d04ad029"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "MarkdownToNotebook", "]"}], "=", "\n", "  ", 
   RowBox[{"Normal", "@", "\n", "    ", 
    RowBox[{"ReplacePart", "[", "\n", "      ", 
     RowBox[{
      RowBox[{"Association", "@", 
       RowBox[{"Options", "[", "MarkdownParse", "]"}]}], ",", "\n", "  ", 
      "    ", 
      RowBox[{"\"\<PostProcessor\>\"", "\[Rule]", "markdownToCell"}]}], "\n", 
     "      ", "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"MarkdownToNotebook", "[", 
    RowBox[{"s_String", ",", " ", 
     RowBox[{"ops", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", "\n", "  ", 
   RowBox[{"Notebook", "[", "\n", "    ", 
    RowBox[{"Flatten", "@", 
     RowBox[{"List", "@", 
      RowBox[{"MarkdownParse", "[", "\n", "      ", 
       RowBox[{"s", ",", "\n", "      ", 
        RowBox[{"FilterRules", "[", "\n", "  ", "      ", 
         RowBox[{
          RowBox[{"{", "\n", "  ", "        ", 
           RowBox[{"ops", ",", "\n", "          ", 
            RowBox[{"Options", "[", "MarkdownToNotebook", "]"}]}], "\n", 
           "          ", "}"}], ",", "\n", "  ", "      ", 
          RowBox[{"Options", "[", "MarkdownParse", "]"}]}], "\n", "        ", 
         "]"}]}], "\n", "      ", "]"}]}]}], "\n", "   ", "]"}]}], 
  ";"}]}], "CodeInput",ExpressionUUID->"c85ff59a-c759-4b13-ad05-d1b94b89de06"]\

}, Open  ]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"End", "[", "]"}], 
  ";"}]], "InputSection",ExpressionUUID->"3cb94ae1-5257-4f6e-97f7-\
85c20e74c6e3"]
}, Open  ]],

Cell["", "SectionSeparator",ExpressionUUID->"611bb9fb-68fd-48d4-9442-\
371120060def"]
},
NotebookEventActions->{{"MenuCommand", "Save"} :> 
  EasyIDE`Notebooks`Manipulation`IDESave[
    EvaluationNotebook[]], PassEventsDown -> True, EvaluationOrder -> After},
WindowSize->{808, 755},
WindowMargins->{{105, Automatic}, {Automatic, 13}},
WindowTitle->"EasyIDE: BTools",
TaggingRules->{
 "EasyIDE" -> {
   "Project" -> {
     "Directory" -> 
      "/Users/Mark/Documents/Wolfram Mathematica/Applications/BTools/"}, 
    "Tabs" -> {
     "SiteBuilder" -> {
       "File" -> 
        "/Users/Mark/Documents/Wolfram \
Mathematica/Applications/BTools/Packages/Web/SiteBuilder.nb"}, 
      "NotebookToMarkdown" -> {
       "File" -> 
        "/Users/Mark/Documents/Wolfram \
Mathematica/Applications/BTools/Packages/Web/NotebookToMarkdown.nb"}, 
      "NotebookMarkdownInternals" -> {
       "File" -> 
        "/Users/Mark/Documents/Wolfram \
Mathematica/Applications/BTools/Packages/Web/Markdown/\
NotebookMarkdownInternals.nb"}, 
      "MarkdownParsers" -> {
       "File" -> 
        "/Users/Mark/Documents/Wolfram \
Mathematica/Applications/BTools/Packages/Web/MarkdownParsers.nb"}, 
      "MarkdownParse" -> {
       "File" -> 
        "/Users/Mark/Documents/Wolfram \
Mathematica/Applications/BTools/Packages/Web/Markdown/MarkdownParse.nb"}}, 
    "FileViewer" -> {"Visible" -> False}, "Toolbars" -> {"Column" -> GridBox[{{
          GridBox[{{
             GridBox[{{
                StyleBox[
                 ButtonBox[
                 "\"Load Package\"", ButtonFunction :> 
                  EasyIDE`Plugins`CodePackageToolbar`loadPackage[], 
                  Appearance -> Inherited, Evaluator -> Automatic, Method -> 
                  "Preemptive"], "ToolbarElement"], 
                StyleBox[
                 ButtonBox[
                 "\"Open Package\"", ButtonFunction :> 
                  EasyIDE`Plugins`CodePackageToolbar`openPackage[], 
                  Appearance -> Inherited, Evaluator -> Automatic, Method -> 
                  "Preemptive"], "ToolbarElement"], 
                StyleBox[
                 ActionMenuBox[
                  ButtonBox[
                  "\"Insert\"", ButtonFunction :> {}, Evaluator -> None, 
                   BaseStyle -> "PluginMenu", Appearance -> Inherited, 
                   FrameMargins -> {{10, 10}, {0, 0}}, 
                   ImageSize -> {Automatic, 28}, Method -> "Preemptive"], {
                  "\"Package\"" :> FrontEndExecute[
                    FrontEnd`NotebookWrite[
                    FrontEnd`InputNotebook[], {
                    Cell["Package Name", "CodeSection"], 
                    Cell[
                    "\[LeftCeiling]\n  Package description\n\[RightFloor]", 
                    "Text", Evaluatable -> True], 
                    Cell[
                    BoxData[
                    RowBox[{
                    RowBox[{"Begin", "[", "\"`Private`\"", "]"}], ";"}]], 
                    "InputSection"], 
                    Cell[
                    BoxData[
                    RowBox[{
                    RowBox[{"End", "[", "]"}], ";"}]], "InputSection"], 
                    Cell["", "SectionSeparator"]}]]}, Appearance -> None, 
                  MenuAppearance -> "Dropdown"], "ToolbarElement"]}}, 
              BaseStyle -> "ToolbarElementRow"], 
             ButtonBox[
             "", BaseStyle -> "ToolbarCloseButton", ButtonData -> 
              "CodePackage"]}}, BaseStyle -> "ToolbarCell"]}}, BaseStyle -> 
        "Toolbars"], "Tags" -> {"CodePackage"}, 
      "Cells" -> {"Package" -> None, "CodePackage" -> GridBox[{{
            GridBox[{{
               StyleBox[
                ButtonBox[
                "\"Load Package\"", ButtonFunction :> 
                 EasyIDE`Plugins`CodePackageToolbar`loadPackage[], Appearance -> 
                 Inherited, Evaluator -> Automatic, Method -> "Preemptive"], 
                "ToolbarElement"], 
               StyleBox[
                ButtonBox[
                "\"Open Package\"", ButtonFunction :> 
                 EasyIDE`Plugins`CodePackageToolbar`openPackage[], Appearance -> 
                 Inherited, Evaluator -> Automatic, Method -> "Preemptive"], 
                "ToolbarElement"], 
               StyleBox[
                ActionMenuBox[
                 ButtonBox[
                 "\"Insert\"", ButtonFunction :> {}, Evaluator -> None, 
                  BaseStyle -> "PluginMenu", Appearance -> Inherited, 
                  FrameMargins -> {{10, 10}, {0, 0}}, 
                  ImageSize -> {Automatic, 28}, Method -> "Preemptive"], {
                 "\"Package\"" :> FrontEndExecute[
                    FrontEnd`NotebookWrite[
                    FrontEnd`InputNotebook[], {
                    Cell["Package Name", "CodeSection"], 
                    Cell[
                    "\[LeftCeiling]\n  Package description\n\[RightFloor]", 
                    "Text", Evaluatable -> True], 
                    Cell[
                    BoxData[
                    RowBox[{
                    RowBox[{"Begin", "[", "\"`Private`\"", "]"}], ";"}]], 
                    "InputSection"], 
                    Cell[
                    BoxData[
                    RowBox[{
                    RowBox[{"End", "[", "]"}], ";"}]], "InputSection"], 
                    Cell["", "SectionSeparator"]}]]}, Appearance -> None, 
                 MenuAppearance -> "Dropdown"], "ToolbarElement"]}}, 
             BaseStyle -> "ToolbarElementRow"], 
            ButtonBox[
            "", BaseStyle -> "ToolbarCloseButton", ButtonData -> 
             "CodePackage"]}}, BaseStyle -> "ToolbarCell"]}}, "ActiveTab" -> 
    "MarkdownParsers", "StyleSheet" -> 
    FrontEnd`FileName[{"EasyIDE", "Extensions", "LightMode"}, 
      "CodePackage.nb"], "FileToolbar" -> "CodePackage", 
    "Options" -> {
     WindowSize -> {808, 755}, 
      WindowMargins -> {{198, Automatic}, {Automatic, 40}}, FrontEndVersion -> 
      "11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, 2018)", 
      StyleDefinitions -> 
      FrontEnd`FileName[{"BTools"}, "CodePackage.nb", CharacterEncoding -> 
        "UTF-8"]}, "AutoGeneratePackage" -> True, "SavingAction" -> None, 
    "MainStyleName" -> "LightMode"}, "IndentCharacter" -> "  ", 
  "UUIDButtons" -> {
   "Active" -> {"Button-218b63f2-ff44-42ce-90ef-7f03f91452c9" -> False}}},
DynamicUpdating->Automatic,
FrontEndVersion->"12.0 for Mac OS X x86 (64-bit) (April 8, 2019)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> 
     FrontEnd`FileName[{"EasyIDE", "Extensions", "LightMode"}, 
       "CodePackage.nb"]]]}, Visible -> False, 
  TaggingRules -> {"EasyIDE" -> {"FileViewer" -> {"Visible" -> False}}}, 
  FrontEndVersion -> "12.0 for Mac OS X x86 (64-bit) (April 8, 2019)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"]
]

