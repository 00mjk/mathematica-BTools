Notebook[{

Cell[CellGroupData[{
Cell["MarkdownParser", "CodeSection",
 CellChangeTimes->{{3.7126189403663397`*^9, 3.7126189449249487`*^9}, {
  3.7225267577846813`*^9, 
  3.72252676001336*^9}},ExpressionUUID->"5be497d2-273b-461f-b44d-\
4df394ad6aed"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"MarkdownToXML", "::", "usage"}], "=", "\n", "\t", 
   "\"\<Converts markdown to XML\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"MarkdownToNotebook", "::", "usage"}], "=", "\n", "\t", 
   "\"\<Converts markdown to Notebook\>\""}], 
  ";"}]}], "CodeInput",ExpressionUUID->"d6738037-8dee-4bfe-9231-df7ea459d9ea"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Begin", "[", "\"\<`Private`\>\"", "]"}], 
  ";"}]], "InputSection",ExpressionUUID->"fe65119a-8178-4bdd-9369-\
ed12bf0928a0"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Utils\[RightFloor]", "CodeSubsection",
 Evaluatable->True,ExpressionUUID->"f4d0ab10-715f-4c32-9989-87e1c3232123"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"mdPostWrap", "//", "Clear"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"mdPostWrap", "[", 
    RowBox[{"processor_", ",", " ", "fallback_"}], "]"}], "[", "args___", 
   "]"}], ":=", "\n", "  ", 
  RowBox[{"Replace", "[", 
   RowBox[{
    RowBox[{"processor", "[", "args", "]"}], ",", " ", "\n", "    ", 
    RowBox[{"{", "\n", "      ", 
     RowBox[{
      RowBox[{
       RowBox[{"Automatic", "|", 
        RowBox[{"HoldPattern", "[", "_processor", "]"}]}], ":>", "\n", 
       "        ", 
       RowBox[{"fallback", "[", "args", "]"}]}], ",", "\n", "      ", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Automatic", "|", "processor"}], ")"}], "[", 
        RowBox[{"a_", ",", " ", "b_"}], "]"}], "\[RuleDelayed]", "\n", 
       "        ", 
       RowBox[{"fallback", "[", 
        RowBox[{"a", ",", " ", 
         RowBox[{"Replace", "[", 
          RowBox[{"b", ",", " ", 
           RowBox[{
            RowBox[{"Automatic", "[", 
             RowBox[{"c_", ",", " ", "d_"}], "]"}], "\[RuleDelayed]", 
            RowBox[{"fallback", "[", 
             RowBox[{"c", ",", " ", "d"}], "]"}]}], ",", " ", "1"}], "]"}]}], 
        "]"}]}]}], "\n", "      ", "}"}]}], "\n", "    ", 
   "]"}]}]}], \
"CodeInput",ExpressionUUID->"57d3c86e-921d-48a6-9641-ffed8fab1a71"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]MarkdownToXML\[RightFloor]", "CodeSubsection",
 Evaluatable->True,ExpressionUUID->"4e4d04d8-a3e2-428a-ba89-73b7262a2d68"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]markdownToXMLElement\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"9caf4670-e2a1-44ac-838f-a877700ac587"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Meta\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,
 CellChangeTimes->{{3.7125915870629597`*^9, 
  3.712591587606221*^9}},ExpressionUUID->"f4f1d4fb-0f95-440f-b9cb-\
bd0adeabf56d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"markdownToXMLElement", "[", 
    RowBox[{"\"\<Meta\>\"", ",", " ", "bits_"}], "]"}], ":=", "\n", "  ", 
   RowBox[{"XMLElement", "[", 
    RowBox[{"\"\<meta\>\"", ",", "\n", "    ", 
     RowBox[{"Normal", "@", "\n", "      ", 
      RowBox[{"AssociationThread", "[", "\n", "        ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<name\>\"", ",", " ", "\"\<content\>\""}], "}"}], ",", 
        "\n", "  ", "      ", "bits"}], "\n", "  ", "      ", "]"}]}], ",", 
     "\n", "    ", 
     RowBox[{"{", "}"}]}], "\n", "    ", "]"}]}], 
  ";"}]], "CodeInput",ExpressionUUID->"713aef4b-6a10-4f96-9a51-a8d153d113e3"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]FenceBlock\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"f86a117a-f320-453e-aac1-0ad27ef32fc3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"markdownToXMLElement", "[", "\n", "  ", 
   RowBox[{"\"\<FenceBlock\>\"", ",", "\n", "  ", 
    RowBox[{"{", 
     RowBox[{"lang_", ",", " ", "code_"}], "}"}]}], "\n", "  ", "]"}], ":=", 
  "\n", "  ", 
  RowBox[{"XMLElement", "[", 
   RowBox[{"\"\<pre\>\"", ",", "\n", "    ", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"!", 
       RowBox[{"StringMatchQ", "[", 
        RowBox[{"lang", ",", " ", "Whitespace"}], "]"}]}], ",", "\n", 
      "      ", 
      RowBox[{"{", "\n", "        ", 
       RowBox[{"\"\<class\>\"", "\[Rule]", "\n", "          ", 
        RowBox[{"TemplateApply", "[", "\n", "            ", 
         RowBox[{
         "\"\<lang-`lang` highlight-source-`lang`\>\"", ",", "\n", 
          "            ", 
          RowBox[{"<|", "\n", "              ", 
           RowBox[{"\"\<lang\>\"", "->", 
            RowBox[{"StringTrim", "[", "lang", "]"}]}], "\n", 
           "              ", "|>"}]}], "\n", "            ", "]"}]}], "\n", 
       "        ", "}"}], ",", "\n", "      ", 
      RowBox[{"{", "}"}]}], "\n", "      ", "]"}], ",", "\n", "    ", 
    RowBox[{"{", "\n", "      ", 
     RowBox[{"XMLElement", "[", 
      RowBox[{"\"\<code\>\"", ",", "\n", "        ", 
       RowBox[{"{", "}"}], ",", "\n", "        ", 
       RowBox[{"{", "\n", "          ", 
        RowBox[{"\"\<\\n\>\"", "<>", "code"}], "\n", "          ", "}"}]}], 
      "\n", "        ", "]"}], "\n", "      ", "}"}]}], "\n", "    ", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"efcc360a-5330-474a-b0cc-2f78f859a769"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]CodeBlock\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,
 CellChangeTimes->{{3.712584832841477*^9, 
  3.712584834368746*^9}},ExpressionUUID->"784008d7-5fb5-447c-b405-\
724c17657bad"],

Cell[BoxData[
 RowBox[{
  RowBox[{"markdownToXMLElement", "[", 
   RowBox[{"\"\<CodeBlock\>\"", ",", " ", "text_"}], "]"}], ":=", "\n", "  ", 
  
  RowBox[{"XMLElement", "[", 
   RowBox[{"\"\<pre\>\"", ",", "\n", "    ", 
    RowBox[{"{", "}"}], ",", "\n", "    ", 
    RowBox[{"{", "\n", "      ", 
     RowBox[{"XMLElement", "[", 
      RowBox[{"\"\<code\>\"", ",", " ", 
       RowBox[{"{", "}"}], ",", " ", 
       RowBox[{"{", "text", "}"}]}], "]"}], "\n", "      ", "}"}]}], "\n", 
   "    ", "]"}]}]], \
"CodeInput",ExpressionUUID->"98103d48-b75a-4286-9018-ee6d993efb53"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]QuoteBlock\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,
 CellChangeTimes->{{3.712584832841477*^9, 3.712584834368746*^9}, {
  3.712932759248433*^9, 
  3.7129327599677887`*^9}},ExpressionUUID->"31173449-0ed7-4cdd-a36c-\
57c97e8fb13b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"markdownToXMLElement", "[", 
   RowBox[{"\"\<QuoteBlock\>\"", ",", " ", "xml_"}], "]"}], ":=", "\n", "\t", 
  
  RowBox[{"XMLElement", "[", 
   RowBox[{"\"\<blockquote\>\"", ",", " ", 
    RowBox[{"{", "}"}], ",", " ", 
    RowBox[{"Flatten", "@", 
     RowBox[{"List", "@", "xml"}]}]}], 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"916c5832-14b4-4d4d-a4cd-5733f27769b2"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Header\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,
 CellChangeTimes->{{3.7125895295632277`*^9, 
  3.712589533027046*^9}},ExpressionUUID->"cdf6d26a-66d8-4f87-8341-\
7080a86df9ae"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"markdownToXMLElement", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<Header\>\"", ",", " ", "n_"}], "}"}], ",", " ", "xml_"}], 
    "]"}], ":=", "\n", "  ", 
   RowBox[{"XMLElement", "[", 
    RowBox[{
     RowBox[{"\"\<h\>\"", "<>", 
      RowBox[{"ToString", "[", "n", "]"}]}], ",", " ", 
     RowBox[{"{", "}"}], ",", " ", 
     RowBox[{"Flatten", "@", 
      RowBox[{"List", "@", "xml"}]}]}], "]"}]}], 
  ";"}]], "CodeInput",ExpressionUUID->"b797678a-02bf-47a2-a195-7a902442497b"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Item\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,
 CellChangeTimes->{{3.7125976546337557`*^9, 
  3.7125976550493393`*^9}},ExpressionUUID->"ea7455e9-bdc4-4564-a039-\
a7da726acbaa"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"markdownToXMLElement", "[", 
    RowBox[{"\"\<OrderedList\>\"", ",", " ", "items_"}], "]"}], ":=", "\n", 
   "  ", 
   RowBox[{"XMLElement", "[", 
    RowBox[{"\"\<ol\>\"", ",", " ", 
     RowBox[{"{", "}"}], ",", " ", 
     RowBox[{"Flatten", "@", 
      RowBox[{"{", "items", "}"}]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"markdownToXMLElement", "[", 
    RowBox[{"\"\<UnorderedList\>\"", ",", " ", "items_"}], "]"}], ":=", "\n", 
   "  ", 
   RowBox[{"XMLElement", "[", 
    RowBox[{"\"\<ul\>\"", ",", " ", 
     RowBox[{"{", "}"}], ",", " ", 
     RowBox[{"Flatten", "@", 
      RowBox[{"{", "items", "}"}]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"markdownToXMLElement", "[", 
    RowBox[{"\"\<UnorderedList\>\"", ",", " ", "items_"}], "]"}], ":=", "\n", 
   "  ", 
   RowBox[{"XMLElement", "[", 
    RowBox[{"\"\<ul\>\"", ",", " ", 
     RowBox[{"{", "}"}], ",", " ", 
     RowBox[{"Flatten", "@", 
      RowBox[{"{", "items", "}"}]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{" ", 
  RowBox[{
   RowBox[{
    RowBox[{"markdownToXMLElement", "[", 
     RowBox[{"\"\<Item\>\"", ",", " ", "item_"}], "]"}], ":=", "\n", "  ", 
    RowBox[{"XMLElement", "[", 
     RowBox[{"\"\<li\>\"", ",", " ", 
      RowBox[{"{", "}"}], ",", " ", 
      RowBox[{"Flatten", "@", 
       RowBox[{"{", "item", "}"}]}]}], "]"}]}], ";"}], 
  " "}]}], "CodeInput",ExpressionUUID->"c5123f46-edb1-420d-a6c5-2dd4a959e919"]\

}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]ItalBold\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"3088571b-4a2d-49f3-9163-02544435a5d0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"markdownToXMLElement", "[", 
    RowBox[{"\"\<Italic\>\"", ",", " ", "items_"}], "]"}], ":=", "\n", "  ", 
   RowBox[{"XMLElement", "[", 
    RowBox[{"\"\<em\>\"", ",", " ", 
     RowBox[{"{", "}"}], ",", " ", 
     RowBox[{"Flatten", "@", 
      RowBox[{"{", "items", "}"}]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"markdownToXMLElement", "[", 
    RowBox[{"\"\<Bold\>\"", ",", " ", "items_"}], "]"}], ":=", "\n", "  ", 
   RowBox[{"XMLElement", "[", 
    RowBox[{"\"\<strong\>\"", ",", " ", 
     RowBox[{"{", "}"}], ",", " ", 
     RowBox[{"Flatten", "@", 
      RowBox[{"{", "items", "}"}]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"markdownToXMLElement", "[", 
    RowBox[{"\"\<ItalicBold\>\"", ",", " ", "items_"}], "]"}], ":=", "\n", 
   "  ", 
   RowBox[{"XMLElement", "[", 
    RowBox[{"\"\<em\>\"", ",", " ", 
     RowBox[{"{", "}"}], ",", " ", "\n", "    ", 
     RowBox[{"{", 
      RowBox[{"XMLElement", "[", 
       RowBox[{"\"\<strong\>\"", ",", " ", 
        RowBox[{"{", "}"}], ",", " ", 
        RowBox[{"Flatten", "@", 
         RowBox[{"{", "items", "}"}]}]}], "]"}], "}"}]}], "]"}]}], 
  ";"}]}], "CodeInput",ExpressionUUID->"3d5981ae-d754-435a-b384-710ef7c51afc"]\

}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Delimiter\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,
 CellChangeTimes->{{3.712590814499344*^9, 
  3.712590815722493*^9}},ExpressionUUID->"59d041c7-7279-442e-8654-\
7d700b6ec584"],

Cell[BoxData[
 RowBox[{
  RowBox[{"markdownToXMLElement", "[", 
   RowBox[{"\"\<Delimiter\>\"", ",", " ", "_"}], "]"}], ":=", "\n", "\t", 
  RowBox[{"XMLElement", "[", 
   RowBox[{"\"\<hr\>\"", ",", " ", 
    RowBox[{"{", "}"}], ",", " ", 
    RowBox[{"{", "}"}]}], 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"b5a9e7a1-6b67-48cb-9849-84f5f4edb223"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]CodeLine\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"dbd2dfd6-54e6-44f1-94dc-605c7655dd49"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"markdownToXMLElement", "[", 
    RowBox[{"\"\<Code\>\"", ",", " ", "text_"}], "]"}], ":=", "\n", "\t", 
   RowBox[{"XMLElement", "[", 
    RowBox[{"\"\<code\>\"", ",", 
     RowBox[{"{", "}"}], ",", " ", 
     RowBox[{"{", "text", "}"}]}], "]"}]}], 
  ";"}]], "CodeInput",ExpressionUUID->"e4854ccc-4cf2-44f6-bebf-5892226fdaf9"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]XML\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"490b1e2b-9f61-4dd3-a56e-83a1f35d9f9f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"markdownToXMLElement", "[", 
    RowBox[{"\"\<XML\>\"", ",", " ", "xml_"}], "]"}], ":=", "\n", "  ", 
   "xml"}], ";"}]], \
"CodeInput",ExpressionUUID->"85f6f7e4-15fd-4af8-b8b4-e5a738464dd0"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Hyperlink\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,
 CellChangeTimes->{{3.7125852658153553`*^9, 
  3.712585267156897*^9}},ExpressionUUID->"5f309c5c-6e5b-470c-bbdb-\
f69c2a506f22"],

Cell[BoxData[
 RowBox[{
  RowBox[{"markdownToXMLElement", "[", 
   RowBox[{"\"\<Link\>\"", ",", " ", 
    RowBox[{"{", 
     RowBox[{"link_", ",", " ", "body_"}], "}"}]}], "]"}], ":=", "\n", "  ", 
  RowBox[{"XMLElement", "[", 
   RowBox[{"\"\<a\>\"", ",", " ", 
    RowBox[{"{", 
     RowBox[{"\"\<href\>\"", "->", "link"}], "}"}], ",", " ", 
    RowBox[{"Flatten", "@", 
     RowBox[{"{", "body", "}"}]}]}], 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"33a87c58-b1bd-4abd-8b88-5939bb442f8a"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Img\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"45d999be-4314-4396-a52a-7541e5bb36af"],

Cell[BoxData[
 RowBox[{
  RowBox[{"markdownToXMLElement", "[", 
   RowBox[{"\"\<Image\>\"", ",", " ", 
    RowBox[{"{", 
     RowBox[{"src_", ",", " ", "alt_"}], "}"}]}], "]"}], ":=", "\n", "\t", 
  RowBox[{"XMLElement", "[", 
   RowBox[{"\"\<img\>\"", ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<src\>\"", "\[Rule]", "src"}], ",", " ", 
      RowBox[{"\"\<alt\>\"", "\[Rule]", "alt"}]}], "}"}], ",", " ", 
    RowBox[{"{", "}"}]}], 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"fedef081-1a05-40bd-b173-a5f92f75c1c6"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]TextForms\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"0d3e4dd7-e14c-4a88-b127-cfd26a58c9fc"],

Cell[BoxData[
 RowBox[{
  RowBox[{"$MarkdownToXMLTextForms", "=", "\n", "\t", 
   RowBox[{"{", "\n", "\t\t", "\"\<MathLine\>\"", "\n", "\t\t", "}"}]}], 
  ";"}]], "CodeInput",ExpressionUUID->"aaa43146-f158-4cd7-a552-bca974b2c8b2"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"markdownToXMLElement", "[", 
    RowBox[{
     RowBox[{"Alternatives", "@@", "$MarkdownToXMLTextForms"}], ",", " ", 
     "text_String"}], "]"}], ":=", "\n", "\t", "text"}], 
  ";"}]], "CodeInput",ExpressionUUID->"fbaf3f89-3858-41da-b8ec-ffd57729051a"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Text\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"9c61b1f0-8f0a-4d27-ac92-200e26417da1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"markdownToXMLElement", "[", 
    RowBox[{"\"\<Text\>\"", ",", " ", "x_XMLElement"}], "]"}], ":=", "x"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"markdownToXMLElement", "[", 
   RowBox[{"\"\<Text\>\"", ",", " ", "e_"}], "]"}], ":=", 
  RowBox[{"XMLElement", "[", 
   RowBox[{"\"\<p\>\"", ",", " ", 
    RowBox[{"{", "}"}], ",", " ", 
    RowBox[{"Flatten", "@", 
     RowBox[{"{", "e", "}"}]}]}], 
   "]"}]}]}], \
"CodeInput",ExpressionUUID->"9e5da5ac-2d2b-4575-bf59-bb64e2123538"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Fallback\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,
 CellChangeTimes->{{3.712585411362853*^9, 
  3.712585412778001*^9}},ExpressionUUID->"1ba713bf-5524-4205-907e-\
29f4b2d97066"],

Cell[BoxData[
 RowBox[{
  RowBox[{"markdownToXMLElement", "[", 
   RowBox[{"t_", ",", " ", "text_String"}], "]"}], ":=", "\n", "\t", 
  RowBox[{"XMLElement", "[", 
   RowBox[{"t", ",", " ", 
    RowBox[{"{", "}"}], ",", " ", 
    RowBox[{"{", "text", "}"}]}], 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"309e3539-5c58-47f6-bd51-9176eaaaf188"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]MarkdownToXML\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"fe8f2427-8a61-4c99-b106-18356dab814b"],

Cell[BoxData[
 RowBox[{"MarkdownToXML", "//", 
  "Clear"}]], \
"CodeInput",ExpressionUUID->"f747bfd7-b823-41c2-bc08-92e0acc59755"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "MarkdownToXML", "]"}], "=", "\n", "  ", 
   RowBox[{
    RowBox[{"DeleteDuplicatesBy", "[", "First", "]"}], "@", "\n", "    ", 
    RowBox[{"Join", "[", "\n", "      ", 
     RowBox[{
      RowBox[{"{", "\n", "        ", 
       RowBox[{
        RowBox[{"\"\<HeaderElements\>\"", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
          "\"\<meta\>\"", ",", " ", "\"\<style\>\"", ",", " ", "\"\<link\>\"",
            ",", " ", "\"\<title\>\""}], "}"}]}], ",", "\n", "        ", 
        RowBox[{"\"\<PostProcessor\>\"", "\[Rule]", "Automatic"}]}], "\n", 
       "        ", "}"}], ",", "\n", "      ", 
      RowBox[{"Options", "[", "MarkdownParse", "]"}]}], "\n", "      ", 
     "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"MarkdownToXML", "[", 
    RowBox[{"s_String", ",", " ", 
     RowBox[{"ops", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", "\n", "  ", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", "\n", "      ", 
      RowBox[{"he", "=", 
       RowBox[{"OptionValue", "[", "\"\<HeaderElements\>\"", "]"}]}], "\n", 
      "      ", "}"}], ",", "\n", "    ", 
     RowBox[{"Replace", "[", "\n", "      ", 
      RowBox[{
       RowBox[{"GatherBy", "[", "\n", "        ", 
        RowBox[{
         RowBox[{"MarkdownParse", "[", "\n", "          ", 
          RowBox[{"s", ",", "\n", "          ", 
           RowBox[{"FilterRules", "[", "\n", "            ", 
            RowBox[{
             RowBox[{"{", "\n", "              ", 
              RowBox[{
               RowBox[{
               "\"\<PostProcessor\>\"", "\[Rule]", "\n", "                ", 
                RowBox[{"mdPostWrap", "[", 
                 RowBox[{
                  RowBox[{"OptionValue", "[", "\"\<PostProcessor\>\"", "]"}], 
                  ",", " ", "markdownToXMLElement"}], "]"}]}], ",", "\n", 
               "              ", "ops", ",", "\n", "              ", 
               RowBox[{"Options", "[", "MarkdownToXML", "]"}]}], "\n", 
              "              ", "}"}], ",", "\n", "            ", 
             RowBox[{"Options", "[", "MarkdownParse", "]"}]}], "\n", 
            "            ", "]"}]}], "\n", "          ", "]"}], ",", "\n", 
         "        ", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"base", "=", 
             RowBox[{"StringMatchQ", "[", 
              RowBox[{"Alternatives", "@@", "he"}], "]"}]}], "}"}], ",", "\n",
            "          ", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Head", "[", "#", "]"}], "\[Equal]", "XMLElement"}], "&&", 
             RowBox[{
              RowBox[{"Length", "[", "#", "]"}], ">", "0"}], "&&", 
             RowBox[{"base", "@", 
              RowBox[{"First", "[", "#", "]"}]}]}], "&"}]}], "\n", 
          "          ", "]"}]}], "\n", "        ", "]"}], ",", "\n", "      ", 
       RowBox[{"{", "\n", "        ", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"h_", ",", "b_"}], "}"}], ":>", "\n", "          ", 
          RowBox[{"XMLElement", "[", 
           RowBox[{"\"\<html\>\"", ",", "\n", "            ", 
            RowBox[{"{", "}"}], ",", "\n", "            ", 
            RowBox[{"{", "\n", "              ", 
             RowBox[{
              RowBox[{"XMLElement", "[", 
               RowBox[{"\"\<head\>\"", ",", " ", 
                RowBox[{"{", "}"}], ",", " ", 
                RowBox[{"DeleteDuplicates", "@", "h"}]}], "]"}], ",", "\n", 
              "              ", 
              RowBox[{"XMLElement", "[", 
               RowBox[{"\"\<body\>\"", ",", " ", 
                RowBox[{"{", "}"}], ",", " ", "b"}], "]"}]}], "\n", 
             "              ", "}"}]}], "\n", "            ", "]"}]}], ",", 
         "\n", "        ", 
         RowBox[{
          RowBox[{"{", "b_", "}"}], ":>", "\n", "          ", 
          RowBox[{"XMLElement", "[", 
           RowBox[{"\"\<html\>\"", ",", "\n", "            ", 
            RowBox[{"{", "}"}], ",", "\n", "            ", 
            RowBox[{"{", "\n", "              ", 
             RowBox[{"XMLElement", "[", 
              RowBox[{"\"\<body\>\"", ",", 
               RowBox[{"{", "}"}], ",", "b"}], "]"}], "\n", "              ", 
             "}"}]}], "\n", "            ", "]"}]}]}], "\n", "        ", 
        "}"}]}], "]"}]}], "\n", "    ", "]"}]}], 
  ";"}]}], "CodeInput",ExpressionUUID->"e96156c9-fc66-4625-9e20-119e1a412c5d"]\

}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]MarkdownToNotebook\[RightFloor]", "CodeSubsection",
 Evaluatable->True,ExpressionUUID->"34d958e1-8b0d-4773-ad24-d3cd5b0bb72a"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]markdownToCell\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"9f41ef1b-10a1-431e-aa1f-52a790a65a79"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]helpers\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"1bcfa1dd-875a-45f5-a93a-a2d021663465"],

Cell[BoxData[
 RowBox[{
  RowBox[{"$textForms", "=", 
   RowBox[{
   "_String", "|", "_StyleBox", "|", "_ButtonBox", "|", "_Cell", "|", 
    "_TextData"}]}], 
  ";"}]], "CodeInput",ExpressionUUID->"46e749d1-d535-407f-a3ca-c6c7d857ad01"],

Cell[BoxData[{
 RowBox[{"prepCellData", "//", "Clear"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"prepCellData", "[", "s_String", "]"}], ":=", "s"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"prepCellData", "[", 
    RowBox[{"{", "s_String", "}"}], "]"}], ":=", "s"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"prepCellData", "[", 
    RowBox[{"l", ":", 
     RowBox[{"{", 
      RowBox[{"$textForms", "..."}], "}"}]}], "]"}], ":=", 
   RowBox[{"TextData", "[", "l", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"prepCellData", "[", "l_List", "]"}], ":=", 
   RowBox[{"prepCellData", "[", 
    RowBox[{"prepCellData", "/@", "l"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"prepCellData", "[", "b_BoxData", "]"}], ":=", 
   RowBox[{"Cell", "[", "b", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"prepCellData", "[", 
    RowBox[{"e", ":", "$textForms"}], "]"}], ":=", "e"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"prepCellData", "[", 
    RowBox[{"e", ":", 
     RowBox[{"Except", "[", "$textForms", "]"}]}], "]"}], ":=", 
   RowBox[{"BoxData", "[", "e", "]"}]}], 
  ";"}]}], "CodeInput",ExpressionUUID->"367baa1b-f38d-4300-96aa-34c005a08618"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"prepCell", "//", "Clear"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"prepCell", "[", 
    RowBox[{"{", 
     RowBox[{"l", ":", 
      RowBox[{"Except", "[", "_List", "]"}]}], "}"}], "]"}], ":=", "l"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"prepCell", "[", 
    RowBox[{"l", ":", 
     RowBox[{"{", 
      RowBox[{"$textForms", ".."}], "}"}]}], "]"}], ":=", 
   RowBox[{"Cell", "[", 
    RowBox[{"TextData", "[", "l", "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"prepCell", "[", 
    RowBox[{"l", ":", "_List"}], "]"}], ":=", 
   RowBox[{"prepCell", "[", 
    RowBox[{"prepCell", "/@", "l"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"prepCell", "[", 
    RowBox[{"e", ":", "$textForms"}], "]"}], ":=", "e"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"prepCell", "[", 
    RowBox[{"e", ":", 
     RowBox[{"Except", "[", "_List", "]"}]}], "]"}], ":=", 
   RowBox[{"Cell", "[", 
    RowBox[{"BoxData", "@", "e"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"prepCell", "[", "e_", "]"}], ":=", "e"}], 
  ";"}]}], "CodeInput",ExpressionUUID->"c315d537-f14e-440d-bf6c-a4118bdc08f5"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"getCodeBoxes", "[", "code_", "]"}], ":=", "\n", "  ", 
   RowBox[{"MathLink`CallFrontEnd", "[", 
    RowBox[{"FrontEnd`ReparseBoxStructurePacket", "[", "code", "]"}], "]"}]}],
   ";"}]], "CodeInput",ExpressionUUID->"ae1c33b5-abc1-463c-8368-8ac43926bec9"]\

}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Meta\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,
 CellChangeTimes->{{3.7125915870629597`*^9, 
  3.712591587606221*^9}},ExpressionUUID->"435bfb99-777a-4b56-b381-\
d0fc9b6142ff"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"markdownToCell", "[", 
    RowBox[{"\"\<Meta\>\"", ",", " ", 
     RowBox[{"{", 
      RowBox[{"name_", ",", " ", "content_"}], "}"}]}], "]"}], ":=", "\n", 
   "  ", 
   RowBox[{"Cell", "[", 
    RowBox[{
     RowBox[{"prepCellData", "@", "content"}], ",", " ", "\"\<Metadata\>\"", 
     ",", " ", "\"\<Markdown\>\"", ",", " ", 
     RowBox[{"TaggingRules", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Field\>\"", "\[Rule]", "name"}], "}"}]}]}], "]"}]}], 
  ";"}]], "CodeInput",ExpressionUUID->"b4960203-7c81-48fc-960f-a617ef7a9e9d"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]FenceBlock\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"ef0f5fc8-1a51-450d-8692-f860e150e2bf"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"markdownToCell", "[", "\n", "  ", 
    RowBox[{"\"\<FenceBlock\>\"", ",", "\n", "  ", 
     RowBox[{"{", 
      RowBox[{"lang_", ",", " ", "code_"}], "}"}]}], "\n", "  ", "]"}], ":=", 
   "\n", "  ", 
   RowBox[{"Cell", "[", 
    RowBox[{
     RowBox[{"BoxData", "@", 
      RowBox[{"getCodeBoxes", "[", "code", "]"}]}], ",", "\n", "    ", 
     "\"\<Code\>\"", ",", "\n", "    ", "\"\<FencedCode\>\"", ",", "\n", 
     "    ", "\"\<Markdown\>\"", ",", "\n", "    ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"!", 
        RowBox[{"StringMatchQ", "[", 
         RowBox[{"lang", ",", " ", "Whitespace"}], "]"}]}], ",", "\n", 
       "      ", 
       RowBox[{"TaggingRules", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<Language\>\"", "->", "lang"}], "}"}]}], ",", "\n", 
       "      ", 
       RowBox[{"Sequence", "@@", 
        RowBox[{"{", "}"}]}]}], "\n", "      ", "]"}]}], "\n", "    ", 
    "]"}]}], ";"}]], \
"CodeInput",ExpressionUUID->"55bc9aa0-edbf-4630-a8b5-30ebf0374233"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]CodeBlock\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,
 CellChangeTimes->{{3.712584832841477*^9, 
  3.712584834368746*^9}},ExpressionUUID->"f313bdae-e788-4139-9f62-\
55706ec9da9c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"markdownToCell", "[", 
   RowBox[{"\"\<CodeBlock\>\"", ",", " ", "text_"}], "]"}], ":=", "\n", "  ", 
  
  RowBox[{"Cell", "[", 
   RowBox[{
    RowBox[{"BoxData", "@", 
     RowBox[{"getCodeBoxes", "[", "text", "]"}]}], ",", " ", "\"\<Code\>\"", 
    ",", " ", "\"\<Markdown\>\""}], 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"72748fd7-c4f9-4914-93d6-7405f170a41f"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]QuoteBlock\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,
 CellChangeTimes->{{3.712584832841477*^9, 3.712584834368746*^9}, {
  3.712932759248433*^9, 
  3.7129327599677887`*^9}},ExpressionUUID->"d07012a3-4a5d-402c-a1ee-\
4a285dfee58c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"markdownToCell", "[", 
   RowBox[{"\"\<QuoteBlock\>\"", ",", " ", "text_"}], "]"}], ":=", "\n", "\t", 
  RowBox[{"Cell", "[", 
   RowBox[{
    RowBox[{"prepCellData", "[", "text", "]"}], ",", " ", "\"\<Quote\>\"", 
    ",", " ", "\"\<Text\>\"", ",", " ", "\"\<Markdown\>\""}], 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"814df27f-85d8-4763-bdf0-b6e5e7aaeca5"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Header\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,
 CellChangeTimes->{{3.7125895295632277`*^9, 
  3.712589533027046*^9}},ExpressionUUID->"733561dc-bfa0-44d7-8a34-\
6c578af00b40"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"markdownToCell", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<Header\>\"", ",", " ", "n_"}], "}"}], ",", " ", "text_"}], 
    "]"}], ":=", "\n", "  ", 
   RowBox[{"Cell", "[", 
    RowBox[{
     RowBox[{"prepCellData", "[", "text", "]"}], ",", " ", 
     RowBox[{"Nest", "[", 
      RowBox[{
       RowBox[{"StringReplace", "[", 
        RowBox[{"\"\<S\>\"", "\[Rule]", "\"\<Subs\>\""}], "]"}], ",", " ", 
       "\"\<Section\>\"", ",", " ", 
       RowBox[{"n", "-", "1"}]}], "]"}], ",", " ", "\"\<Markdown\>\""}], 
    "]"}]}], ";"}]], \
"CodeInput",ExpressionUUID->"78939192-4423-4125-9bbf-5034658320e0"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Item\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,
 CellChangeTimes->{{3.7125976546337557`*^9, 
  3.7125976550493393`*^9}},ExpressionUUID->"d662d741-ddde-4183-876c-\
3ba0f5dffe01"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"markdownToCell", "[", 
    RowBox[{"\"\<OrderedList\>\"", ",", " ", "items_"}], "]"}], ":=", "\n", 
   "  ", 
   RowBox[{"Cell", "@", 
    RowBox[{"CellGroupData", "@", "\n", "    ", 
     RowBox[{"Flatten", "@", 
      RowBox[{"{", "\n", "      ", 
       RowBox[{"items", "/.", 
        RowBox[{
         RowBox[{"Cell", "[", 
          RowBox[{"a___", ",", " ", "\"\<Item\>\"", ",", " ", "b___"}], "]"}],
          "\[RuleDelayed]", 
         RowBox[{"Cell", "[", 
          RowBox[{"a", ",", " ", "\"\<ItemNumbered\>\"", ",", " ", "b"}], 
          "]"}]}]}], "\n", "      ", "}"}]}]}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"markdownToCell", "[", 
    RowBox[{"\"\<UnorderedList\>\"", ",", " ", "items_"}], "]"}], ":=", "\n", 
   "  ", 
   RowBox[{"Cell", "@", 
    RowBox[{"CellGroupData", "@", "\n", "    ", 
     RowBox[{"Flatten", "@", 
      RowBox[{"{", "items", "}"}]}]}]}]}], ";"}], "\n", 
 RowBox[{" ", 
  RowBox[{
   RowBox[{
    RowBox[{"markdownToCell", "[", 
     RowBox[{"\"\<Item\>\"", ",", " ", "item_"}], "]"}], ":=", "\n", "  ", 
    RowBox[{"Cell", "[", 
     RowBox[{
      RowBox[{"prepCellData", "[", "item", "]"}], ",", " ", "\"\<Item\>\"", 
      ",", " ", "\"\<Markdown\>\""}], "]"}]}], ";"}], 
  " "}]}], "CodeInput",ExpressionUUID->"d2a30bb4-4340-4853-bc21-3873c5eff214"]\

}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]ItalBold\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"7a277d2d-52d1-477a-af37-dab7446cd452"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"markdownToCell", "[", 
    RowBox[{"\"\<Italic\>\"", ",", " ", "items_"}], "]"}], ":=", "\n", "  ", 
   RowBox[{"StyleBox", "[", 
    RowBox[{
     RowBox[{"prepCell", "@", "items"}], ",", " ", 
     RowBox[{"FontSlant", "\[Rule]", "\"\<Italic\>\""}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"markdownToCell", "[", 
    RowBox[{"\"\<Bold\>\"", ",", " ", "items_"}], "]"}], ":=", "\n", "  ", 
   RowBox[{"StyleBox", "[", 
    RowBox[{
     RowBox[{"prepCell", "@", "items"}], ",", " ", 
     RowBox[{"FontWeight", "\[Rule]", "\"\<Bold\>\""}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"markdownToCell", "[", 
    RowBox[{"\"\<ItalicBold\>\"", ",", " ", "items_"}], "]"}], ":=", "\n", 
   "  ", 
   RowBox[{"StyleBox", "[", 
    RowBox[{
     RowBox[{"prepCell", "@", "items"}], ",", " ", 
     RowBox[{"FontSlant", "\[Rule]", "\"\<Italic\>\""}], ",", " ", 
     RowBox[{"FontWeight", "\[Rule]", "\"\<Bold\>\""}]}], "]"}]}], 
  ";"}]}], "CodeInput",ExpressionUUID->"83389522-95c5-4b38-9be3-31c18c2f6654"]\

}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Delimiter\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,
 CellChangeTimes->{{3.712590814499344*^9, 
  3.712590815722493*^9}},ExpressionUUID->"74c786a5-e0ed-450d-a824-\
0f0471fb5ba0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"markdownToCell", "[", 
   RowBox[{"\"\<Delimiter\>\"", ",", " ", "_"}], "]"}], ":=", "\n", "\t", 
  RowBox[{"Cell", "[", 
   RowBox[{
   "\"\<\>\"", ",", " ", "\"\<Delimiter\>\"", ",", " ", "\"\<PageBreak\>\"", 
    ",", " ", "\"\<Markdown\>\"", ",", "\n", "\t  ", 
    RowBox[{"PageBreakAbove", "\[Rule]", "False"}], ",", "\n", "\t  ", 
    RowBox[{"PageBreakBelow", "\[Rule]", "False"}], ",", "\n", "\t  ", 
    RowBox[{"PageBreakWithin", "\[Rule]", "False"}]}], "\n", "\t  ", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"c321bbd8-d2cd-4c61-ac0e-cb54425a88c6"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]CodeLine\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"336d8652-10a6-4c61-b560-c64c4b308954"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"markdownToCell", "[", 
    RowBox[{"\"\<Code\>\"", ",", " ", "text_"}], "]"}], ":=", "\n", "\t", 
   RowBox[{"Cell", "[", 
    RowBox[{
     RowBox[{"BoxData", "@", 
      RowBox[{"getCodeBoxes", "[", "text", "]"}]}], ",", " ", "\"\<Input\>\"",
      ",", " ", "\"\<Markdown\>\""}], "]"}]}], 
  ";"}]], "CodeInput",ExpressionUUID->"5dccac8d-1d9f-46bc-a0b1-2159ff24e65c"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]XML\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"8a03433e-c5ba-4409-b749-dc295b8ad95f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"markdownToCell", "[", 
    RowBox[{"\"\<XML\>\"", ",", " ", "xml_"}], "]"}], ":=", "\n", "  ", 
   RowBox[{"Cell", "[", "\n", "    ", 
    RowBox[{
     RowBox[{"TextData", "@", 
      RowBox[{"ExportString", "[", 
       RowBox[{"xml", ",", " ", "\"\<HTMLFragment\>\""}], "]"}]}], ",", " ", 
     "\n", "    ", "\"\<RawMarkdown\>\"", ",", " ", "\"\<Text\>\"", ",", " ", 
     "\"\<Markdown\>\""}], "\n", "    ", "]"}]}], 
  ";"}]], "CodeInput",ExpressionUUID->"01bd8af9-94be-4d72-babb-e60a4fb6f305"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Hyperlink\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,
 CellChangeTimes->{{3.7125852658153553`*^9, 
  3.712585267156897*^9}},ExpressionUUID->"55e98631-2963-4a8e-9f84-\
2afb02fa41eb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"markdownToCell", "[", 
   RowBox[{"\"\<Link\>\"", ",", " ", 
    RowBox[{"{", 
     RowBox[{"link_", ",", " ", "body_"}], "}"}]}], "]"}], ":=", "\n", "  ", 
  RowBox[{"ButtonBox", "[", 
   RowBox[{
    RowBox[{"prepCell", "[", "body", "]"}], ",", " ", "\n", "    ", 
    RowBox[{"BaseStyle", "\[Rule]", "\"\<Hyperlink\>\""}], ",", " ", "\n", 
    "    ", 
    RowBox[{"ButtonData", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"URL", "[", 
        RowBox[{"Quiet", "@", 
         RowBox[{"StringTrim", "[", "link", "]"}]}], "]"}], ",", " ", 
       "None"}], "}"}]}]}], 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"11c5d83d-9be8-46a2-9ed6-5346d58798b4"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Img\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"91a09a67-d46b-4a94-8154-8439594adb6c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"markdownToCell", "[", 
   RowBox[{"\"\<Image\>\"", ",", " ", 
    RowBox[{"{", 
     RowBox[{"src_", ",", " ", "alt_"}], "}"}]}], "]"}], ":=", "\n", "\t", 
  RowBox[{"TemplateBox", "[", "\n", "\t  ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"src", ",", " ", "alt", ",", " ", 
      RowBox[{"ToBoxes", "[", "alt", "]"}]}], "}"}], ",", "\n", "\t  ", 
    "\"\<LinkedImage\>\"", ",", "\n", "\t  ", 
    RowBox[{"DisplayFunction", "->", "\n", "\t    ", 
     RowBox[{"Function", "[", "\n", "\t      ", 
      RowBox[{"TooltipBox", "[", "\n", "    \t    ", 
       RowBox[{
        RowBox[{"DynamicBox", "[", "\n", "  ", "  ", "  \t    ", 
         RowBox[{
          RowBox[{"ToBoxes", "@", 
           RowBox[{"Refresh", "[", 
            RowBox[{
             RowBox[{"Import", "[", 
              RowBox[{"StringTrim", "@", "#"}], "]"}], ",", " ", "None"}], 
            "]"}]}], ",", "\n", "  ", "  ", "  ", "\t    ", 
          RowBox[{"SingleEvaluation", "\[Rule]", "True"}]}], "\n", "  ", "  ",
          "  ", "\t    ", "]"}], ",", "\n", "    \t    ", "#3"}], "\n", 
       "    \t    ", "]"}], "\n", "    \t  ", "]"}]}]}], "\n", "    ", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"f70a18e0-88bc-442c-9f22-3a0a6820a5fc"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]TextForms\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"d3bacf18-27de-4960-a145-d1b59f92b926"],

Cell[BoxData[
 RowBox[{
  RowBox[{"markdownToCell", "[", 
   RowBox[{"\"\<MathLine\>\"", ",", " ", "text_String"}], "]"}], ":=", "\n", 
  "  ", 
  RowBox[{
   RowBox[{"ImportString", "[", 
    RowBox[{"text", ",", " ", "\"\<LaTeX\>\""}], "]"}], "[", 
   RowBox[{"[", "1", "]"}], 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"6da0c1d1-9686-4762-82c3-d96fe6e04971"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Text\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"8fb3ac22-cd93-430e-847d-adee21181df8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"markdownToCell", "[", 
    RowBox[{"\"\<Text\>\"", ",", " ", "e_String"}], "]"}], ":=", "\n", "  ", 
   RowBox[{"Cell", "[", 
    RowBox[{
     RowBox[{"prepCellData", "[", 
      RowBox[{"StringTrim", "[", "e", "]"}], "]"}], ",", " ", "\"\<Text\>\"", 
     ",", " ", "\"\<Markdown\>\""}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"markdownToCell", "[", 
    RowBox[{"\"\<Text\>\"", ",", " ", 
     RowBox[{"{", 
      RowBox[{"a_String", ",", " ", "r__", ",", " ", "b_String"}], "}"}]}], 
    "]"}], ":=", "\n", "  ", 
   RowBox[{"Cell", "[", 
    RowBox[{
     RowBox[{"prepCellData", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"StringTrim", "[", "a", "]"}], ",", " ", "r", ",", " ", 
        RowBox[{"StringTrim", "[", "b", "]"}]}], "}"}], "]"}], ",", " ", 
     "\"\<Text\>\"", ",", " ", "\"\<Markdown\>\""}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"markdownToCell", "[", 
    RowBox[{"\"\<Text\>\"", ",", " ", 
     RowBox[{"{", 
      RowBox[{"a_String", ",", " ", "r__"}], "}"}]}], "]"}], ":=", "\n", "  ", 
   RowBox[{"Cell", "[", 
    RowBox[{
     RowBox[{"prepCellData", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"StringTrim", "[", "a", "]"}], ",", " ", "r"}], "}"}], "]"}], 
     ",", " ", "\"\<Text\>\"", ",", " ", "\"\<Markdown\>\""}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"markdownToCell", "[", 
    RowBox[{"\"\<Text\>\"", ",", " ", 
     RowBox[{"{", 
      RowBox[{"r__", ",", " ", "b_String"}], "}"}]}], "]"}], ":=", "\n", "  ", 
   RowBox[{"Cell", "[", 
    RowBox[{
     RowBox[{"prepCellData", "[", 
      RowBox[{"{", 
       RowBox[{"r", ",", " ", 
        RowBox[{"StringTrim", "[", "b", "]"}]}], "}"}], "]"}], ",", " ", 
     "\"\<Text\>\"", ",", " ", "\"\<Markdown\>\""}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"markdownToCell", "[", 
    RowBox[{"\"\<Text\>\"", ",", " ", "e_"}], "]"}], ":=", "\n", "  ", 
   RowBox[{"Cell", "[", 
    RowBox[{
     RowBox[{"prepCellData", "@", "e"}], ",", " ", "\"\<Text\>\"", ",", " ", 
     "\"\<Markdown\>\""}], "]"}]}], 
  ";"}]}], "CodeInput",ExpressionUUID->"a0197487-3204-444b-97b8-03ccfcbb67a8"]\

}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Fallback\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"2780e4cb-ca9c-4692-ba7a-cff8378188af"],

Cell[BoxData[
 RowBox[{
  RowBox[{"markdownToCell", "[", 
   RowBox[{"t_", ",", " ", "text_String"}], "]"}], ":=", "\n", "\t", 
  RowBox[{"Cell", "[", 
   RowBox[{
   "text", ",", " ", "\"\<Text\>\"", ",", " ", "t", ",", " ", 
    "\"\<Markdown\>\""}], 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"a4c46bfb-0b7d-4289-a5dc-b6796f694d9a"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]MarkdownToNotebook\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"8d79bc5c-1c43-4ab2-87fa-82b5f8a1ab77"],

Cell[BoxData[
 RowBox[{"MarkdownToNotebook", "//", 
  "Clear"}]], \
"CodeInput",ExpressionUUID->"379cec13-d314-4288-90e2-57276f340521"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "MarkdownToNotebook", "]"}], "=", "\n", "  ", 
   RowBox[{"Join", "[", "\n", "    ", 
    RowBox[{
     RowBox[{"Normal", "@", "\n", "      ", 
      RowBox[{"ReplacePart", "[", "\n", "  ", "      ", 
       RowBox[{
        RowBox[{"Association", "@", 
         RowBox[{"Options", "[", "MarkdownParse", "]"}]}], ",", "\n", "  ", 
        "  ", "    ", 
        RowBox[{"\"\<PostProcessor\>\"", "\[Rule]", "Automatic"}]}], "\n", 
       "        ", "]"}]}], ",", "\n", "    ", 
     RowBox[{"Options", "[", "Notebook", "]"}]}], "\n", "    ", "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"MarkdownToNotebook", "[", 
    RowBox[{"s_String", ",", " ", 
     RowBox[{"ops", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", "\n", "  ", 
   RowBox[{"Notebook", "[", "\n", "    ", 
    RowBox[{
     RowBox[{"Flatten", "@", 
      RowBox[{"List", "@", 
       RowBox[{"MarkdownParse", "[", "\n", "      ", 
        RowBox[{"s", ",", "\n", "      ", 
         RowBox[{"FilterRules", "[", "\n", "        ", 
          RowBox[{
           RowBox[{"{", "\n", "          ", 
            RowBox[{
             RowBox[{"\"\<PostProcessor\>\"", "\[Rule]", "\n", "            ", 
              RowBox[{"mdPostWrap", "[", 
               RowBox[{
                RowBox[{"OptionValue", "[", "\"\<PostProcessor\>\"", "]"}], 
                ",", " ", "markdownToCell"}], "]"}]}], ",", "\n", 
             "          ", "ops"}], "\n", "          ", "}"}], ",", "\n", 
           "        ", 
           RowBox[{"Options", "[", "MarkdownParse", "]"}]}], "\n", "        ",
           "]"}]}], "\n", "      ", "]"}]}]}], ",", "\n", "   ", 
     RowBox[{"FilterRules", "[", 
      RowBox[{
       RowBox[{"{", "ops", "}"}], ",", " ", 
       RowBox[{"Options", "[", "Notebook", "]"}]}], "]"}]}], "\n", "   ", 
    "]"}]}], ";"}]}], \
"CodeInput",ExpressionUUID->"46005425-f6c0-44e6-bbec-e46d79e13d01"]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"End", "[", "]"}], 
  ";"}]], "InputSection",ExpressionUUID->"ec313d54-756c-41b0-9285-\
98de6dbb6a82"]
}, Open  ]],

Cell["", "SectionSeparator",ExpressionUUID->"fd88fd58-58b5-459e-ac5f-\
0beb7f161b97"]
},
NotebookEventActions->{{"MenuCommand", "Save"} :> 
  EasyIDE`Notebooks`Manipulation`IDESave[
    EvaluationNotebook[]], PassEventsDown -> True, EvaluationOrder -> After},
WindowSize->{808, 755},
WindowMargins->{{44, Automatic}, {Automatic, 0}},
WindowTitle->"EasyIDE: BTools",
TaggingRules->{
 "EasyIDE" -> {
   "Project" -> {
     "Directory" -> 
      "/Users/Mark/Documents/Wolfram Mathematica/Applications/BTools/"}, 
    "Tabs" -> {
     "MarkdownParsers" -> {
       "File" -> 
        "/Users/Mark/Documents/Wolfram \
Mathematica/Applications/BTools/Packages/Web/MarkdownParsers.nb"}, 
      "MarkdownParse" -> {
       "File" -> 
        "/Users/Mark/Documents/Wolfram \
Mathematica/Applications/BTools/Packages/Web/Markdown/MarkdownParse.nb"}, 
      "SiteBuilder" -> {
       "File" -> 
        "/Users/Mark/Documents/Wolfram \
Mathematica/Applications/BTools/Packages/Web/SiteBuilder.nb"}, 
      "CustomServiceConnection" -> {
       "File" -> 
        "/Users/Mark/Documents/Wolfram \
Mathematica/Applications/BTools/Packages/Frameworks/CustomServiceConnection.\
nb"}, "NotebookToMarkdown" -> {
       "File" -> 
        "/Users/Mark/Documents/Wolfram \
Mathematica/Applications/BTools/Packages/Web/NotebookToMarkdown.nb"}, 
      "NotebookMarkdownInternals" -> {
       "File" -> 
        "/Users/Mark/Documents/Wolfram \
Mathematica/Applications/BTools/Packages/Web/Markdown/\
NotebookMarkdownInternals.nb"}, 
      "FrontEndTools" -> {
       "File" -> 
        "/Users/Mark/Documents/Wolfram \
Mathematica/Applications/BTools/Packages/Developer/FrontEndTools.nb"}}, 
    "FileViewer" -> {"Visible" -> False}, "Toolbars" -> {"Column" -> GridBox[{{
          GridBox[{{
             GridBox[{{
                StyleBox[
                 ButtonBox[
                 "\"Load Package\"", ButtonFunction :> 
                  EasyIDE`Plugins`CodePackageToolbar`loadPackage[], 
                  Appearance -> Inherited, Evaluator -> Automatic, Method -> 
                  "Preemptive"], "ToolbarElement"], 
                StyleBox[
                 ButtonBox[
                 "\"Open Package\"", ButtonFunction :> 
                  EasyIDE`Plugins`CodePackageToolbar`openPackage[], 
                  Appearance -> Inherited, Evaluator -> Automatic, Method -> 
                  "Preemptive"], "ToolbarElement"], 
                StyleBox[
                 ActionMenuBox[
                  ButtonBox[
                  "\"Insert\"", ButtonFunction :> {}, Evaluator -> None, 
                   BaseStyle -> "PluginMenu", Appearance -> Inherited, 
                   FrameMargins -> {{10, 10}, {0, 0}}, 
                   ImageSize -> {Automatic, 28}, Method -> "Preemptive"], {
                  "\"Package\"" :> FrontEndExecute[
                    FrontEnd`NotebookWrite[
                    FrontEnd`InputNotebook[], {
                    Cell["Package Name", "CodeSection"], 
                    Cell[
                    "\[LeftCeiling]\n  Package description\n\[RightFloor]", 
                    "Text", Evaluatable -> True], 
                    Cell[
                    BoxData[
                    RowBox[{
                    RowBox[{"Begin", "[", "\"`Private`\"", "]"}], ";"}]], 
                    "InputSection"], 
                    Cell[
                    BoxData[
                    RowBox[{
                    RowBox[{"End", "[", "]"}], ";"}]], "InputSection"], 
                    Cell["", "SectionSeparator"]}]]}, Appearance -> None, 
                  MenuAppearance -> "Dropdown"], "ToolbarElement"]}}, 
              BaseStyle -> "ToolbarElementRow"], 
             ButtonBox[
             "", BaseStyle -> "ToolbarCloseButton", ButtonData -> 
              "CodePackage"]}}, BaseStyle -> "ToolbarCell"]}}, BaseStyle -> 
        "Toolbars"], "Tags" -> {"CodePackage"}, 
      "Cells" -> {"Package" -> None, "CodePackage" -> GridBox[{{
            GridBox[{{
               StyleBox[
                ButtonBox[
                "\"Load Package\"", ButtonFunction :> 
                 EasyIDE`Plugins`CodePackageToolbar`loadPackage[], Appearance -> 
                 Inherited, Evaluator -> Automatic, Method -> "Preemptive"], 
                "ToolbarElement"], 
               StyleBox[
                ButtonBox[
                "\"Open Package\"", ButtonFunction :> 
                 EasyIDE`Plugins`CodePackageToolbar`openPackage[], Appearance -> 
                 Inherited, Evaluator -> Automatic, Method -> "Preemptive"], 
                "ToolbarElement"], 
               StyleBox[
                ActionMenuBox[
                 ButtonBox[
                 "\"Insert\"", ButtonFunction :> {}, Evaluator -> None, 
                  BaseStyle -> "PluginMenu", Appearance -> Inherited, 
                  FrameMargins -> {{10, 10}, {0, 0}}, 
                  ImageSize -> {Automatic, 28}, Method -> "Preemptive"], {
                 "\"Package\"" :> FrontEndExecute[
                    FrontEnd`NotebookWrite[
                    FrontEnd`InputNotebook[], {
                    Cell["Package Name", "CodeSection"], 
                    Cell[
                    "\[LeftCeiling]\n  Package description\n\[RightFloor]", 
                    "Text", Evaluatable -> True], 
                    Cell[
                    BoxData[
                    RowBox[{
                    RowBox[{"Begin", "[", "\"`Private`\"", "]"}], ";"}]], 
                    "InputSection"], 
                    Cell[
                    BoxData[
                    RowBox[{
                    RowBox[{"End", "[", "]"}], ";"}]], "InputSection"], 
                    Cell["", "SectionSeparator"]}]]}, Appearance -> None, 
                 MenuAppearance -> "Dropdown"], "ToolbarElement"]}}, 
             BaseStyle -> "ToolbarElementRow"], 
            ButtonBox[
            "", BaseStyle -> "ToolbarCloseButton", ButtonData -> 
             "CodePackage"]}}, BaseStyle -> "ToolbarCell"]}}, "ActiveTab" -> 
    "MarkdownParsers", "StyleSheet" -> 
    FrontEnd`FileName[{"EasyIDE", "Extensions", "LightMode"}, 
      "CodePackage.nb"], "FileToolbar" -> "CodePackage", 
    "Options" -> {
     WindowSize -> {808, 755}, 
      WindowMargins -> {{198, Automatic}, {Automatic, 40}}, FrontEndVersion -> 
      "11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, 2018)", 
      StyleDefinitions -> 
      FrontEnd`FileName[{"BTools"}, "CodePackage.nb", CharacterEncoding -> 
        "UTF-8"]}, "AutoGeneratePackage" -> True, "SavingAction" -> None, 
    "MainStyleName" -> "LightMode"}, "IndentCharacter" -> "  ", 
  "UUIDButtons" -> {
   "Active" -> {"Button-218b63f2-ff44-42ce-90ef-7f03f91452c9" -> False}}},
DynamicUpdating->Automatic,
FrontEndVersion->"12.0 for Mac OS X x86 (64-bit) (April 8, 2019)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> 
     FrontEnd`FileName[{"EasyIDE", "Extensions", "LightMode"}, 
       "CodePackage.nb"]]]}, Visible -> False, 
  TaggingRules -> {"EasyIDE" -> {"FileViewer" -> {"Visible" -> False}}}, 
  FrontEndVersion -> "12.0 for Mac OS X x86 (64-bit) (April 8, 2019)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"]
]

