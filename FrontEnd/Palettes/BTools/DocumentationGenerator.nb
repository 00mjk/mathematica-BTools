(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     89099,       1793]
NotebookOptionsPosition[     88598,       1773]
NotebookOutlinePosition[     89085,       1793]
CellTagsIndexPosition[     89042,       1790]
WindowTitle->Doc Gen
WindowFrame->Palette*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 DynamicWrapperBox[
  PanelBox[
   TagBox[GridBox[{
      {
       PaneBox[
        TagBox[GridBox[{
           {
            DynamicBox[ToBoxes[
              Insert[
               ReplaceAll[
                Insert[
                 Row[{
                   Button[
                   "Open Project", Null, 
                    Appearance -> ("Default" -> Image[CompressedData["
1:eJzN1LEKglAYhuFDNTQ0dAEt3UVrY6vRBRSZtBhoEF2GlyeKoqKIIqLobMdB
+Fz6qqkfngPn8E5n+Nenm3KZCCHMuTyU42NrGMfnfikvB928arp63ul3VVON
zWkqH1fSQpqJ0XRvjMayrO4T2Nu2TWHvOA6Fveu6FPae51HY+75PDf/Y90EQ
UMP/9n0YhhT2URRR2MdxTGGfJAmFfZqmFPZZllHY53lOYV8UBYV9WZYU9lVV
UdjXdU1h3zQNhX3bttSPvfiiF//af7OvyC4c7cQXOc/YKw==
                    "], 
                    "Byte", ColorSpace -> "RGB", Interleaving -> True]), {
                    Appearance -> {
                    "Palette", FrameStyle -> Automatic, 
                    ImagePadding -> {{1, 0}, {1, 1}}}, ImageSize -> 178, 
                    FrameMargins -> Automatic, ImageSize -> 200, Appearance -> 
                    "Palette", Appearance -> ActionMenu, Alignment -> 
                    Automatic, Background -> None, DefaultBaseStyle -> {}}], 
                   ActionMenu[
                    Button[
                    "", Null, 
                    Appearance -> {"Default" -> Image[CompressedData["
1:eJzt1r9qg0AcwPEjzZCxY4c69C26duya0gdIiA1dLJiq9DH88xwuPo0oiooi
ioiis70LTUh/zSWh/OzUg4+c8rvvqN4t3+YvE0LIZkYv84X2IMuLj6drevMs
bV7Xkrh6lN7FtSjfL6/ow1vqhpoS7hp+gbt0XR/GcNh3XRcV7Huehwr2fd9H
BftBEKCC/TAMUR30t/soilB99YddP45jVLCfJAkq2E/TFBXsZ1mGCvbzPP/B
tu1BEAQu3jkG9ouiOMowjKPvM0VRuGcY2C/Lkss0zW9tVVVPzjOwX1XVSZZl
bWc1TTs7y8B+XddnOY5z0RwD+03ToIL9tm1RwX7Xdahgv+97VH/YJyP2yX//
sv6Y/1e77zCi/foEAE8RLQ==
                    "], "Byte", ColorSpace -> "RGB", 
                    Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJzt1k1qg0AUwPEh7SLLLrsoQm/RbZfdpuQACbWhGwumoN5DvYcLD+QHfqKi
oi7tTKnFvDhJKM+uOvCTUd78l+r99n31uiCE7Jf0stooj7K80Z5v6M1a2r/t
JPHlSfoQd6L8sL2iD++oW+qacFf/C9xlmmY/h3HfcRxUsO+6LirY9zwPFez7
vo8K9oMgQDXqf+3DMET13e+HfhRFqGA/jmNUsJ8kCSrYT9MUFexnWXbEsqxe
EAQuXdcnzzGwn+f5JNaYep8pisI9w8B+URRchmEctFVVPTnPwH5ZlicN85qm
nZ0dzw/9qqrOsm37ojkG9uu6RgX7TdOggv22bVHBftd1qP6wT2bsk//+Zf05
/6+G7zCin/UJ16Ithg==
                    "], "Byte", ColorSpace -> "RGB", 
                    Interleaving -> True], "Pressed" -> Image[CompressedData["

1:eJzt1r8KgkAcwPGjGhobHVp6i9bGVqMHKPNPi4EFGQ6ib+AL+Bi6uLi4OAiC
IOi7XHdBUb+8ijgjoh98BOV331EdLTei0kEIbfvkIi72E8NYHGYDcjPXt2tV
l1dTfSersjFedsnDISEQPcQc/AbmuK6L23DdD4KAq3//a/q4xT7+lX4YhlzB
fhRFXMF+HMd3PM/DgiAwmabZeI6C/SRJGlmW1fg+kySJeYaC/TRNmWzbvmkr
ivJwn4L9LMsechzntKtp2tNdCvbzPH/K9/2X9ijYL4qCK9gvy5Ir2K+qiivY
r+uaqw/2UYt99O+/1m/z/+r8HeboMkf3O0vJ
                    "], "Byte", 
                    ColorSpace -> "RGB", Interleaving -> True], "Disabled" -> 
                    Image[CompressedData["
1:eJzt1r1qg1AUwPFL26Fjxw5d8hZdO3ZN6QMk1IYuFkyhdPIBnHwYdfZjdnES
RVFRRBFRdLbekJT0JCYhHDv1wE9Uzv2vOpm/T18vCCHL6/4ynX0+cNzs6+mm
f3hml28Llnl5ZD+YBcPdzy/7l3e9294VGZzuDIMjimI3hu2+bduoYN9xHFSw
77ouKtj3PA8V7Pu+j2qrv7oPggDVut9t+mEYooL9KIpQwX4cx6hgP0kSVLCf
pukO0zQ7QRAGqaq69xwF+1mW7aVpWsfz/A5JkgbPULCf5/kgXdd/tWVZPrhP
wX5RFAcZhrFqK4pydJeC/bIsj7Is66Q9CvarqkIF+3Vdo4L9pmlQwX7btqj+
sE9G7JP//mn9Mf+vNt9hRD/zDdI7LNg=
                    "], "Byte", ColorSpace -> 
                    "RGB", Interleaving -> True]}], {"Label" :> "Result"}, 
                    Appearance -> None, {}]}, {}], 
                 
                 FilterRules[{
                  Enabled -> Length[DocGenPalette`Private`$ProjectList] > 0, 
                   TrackedSymbols :> {DocGenPalette`Private`$ProjectList}}, 
                  Options[ActionMenu]], {1, 2, -1}], {"Label" :> "Result"} -> 
                Table[
                  
                  With[{DocGenPalette`Private`n = DocGenPalette`Private`n}, 
                   FileBaseName[DocGenPalette`Private`n] :> 
                   SystemOpen[DocGenPalette`Private`n]], {
                  DocGenPalette`Private`n, 
                   DocGenPalette`Private`$ProjectList}]], 
               
               FilterRules[{
                Enabled -> Length[DocGenPalette`Private`$ProjectList] > 0, 
                 TrackedSymbols :> {DocGenPalette`Private`$ProjectList}}, 
                Options[Button]], {1, 1, -1}], StandardForm], {
             Enabled -> True, 
              TrackedSymbols :> {DocGenPalette`Private`$ProjectList}},
             ImageSizeCache->{200., {8., 19.}}]},
           {
            PanelBox["\<\"\"\>",
             Appearance->Image[CompressedData["
1:eJyF0b0OgjAQB/BGHRx9BRMfwtXRFeMDQETiggmYGJ+rL9XS8lVoC12wJnLT
JVxyd7/7r7ePnsF9RQjJt34E4fuUZeHnsvPHNc0fSRrfzukrTuLsGK19ePD9
2xsCNQF8/e/JOQcex3HRwzCgttaCjTGotdao+74Hd12HWikFbtsWddM04Lqu
UVdVBS7LErWUErUQAlwUBWrO+aIZY7MJpRT+Mmdfqc/QmA==
               "], "Byte", 
               ColorSpace -> "RGB", Interleaving -> True],
             ImageSize->{200, 1}]},
           {
            DynamicBox[ToBoxes[
              ReplaceAll[
               Insert[
                Row[{
                  Button[
                   Dynamic[
                    Lookup[
                    Association["projects" -> "projects"], 
                    Key[DocGenPalette`Private`$CurrentProject], ""], (
                    DocGenPalette`Private`$CurrentProject = #; Null)& ], 
                   If[ReleaseHold[
                    Hold[
                    (SystemOpen[DocGenPalette`Private`$CurrentProject]& )[
                    First[
                    Dynamic[
                    DocGenPalette`Private`$CurrentProject, (
                    DocGenPalette`Private`$CurrentProject = #; Null)& ]]]]] === 
                    None, Null], 
                   Appearance -> {"Default" -> Image[CompressedData["
1:eJzd1LEOwiAQgGGiDg4OPoCLb+Hq6FrjA7QRGxdMqInxlXi8QiBAABmPxStO
jZf8JEe++fbdo7ktCCHDOj9N+zpy3r7P27xc2HDvGb2e2JP2lB+6Zf7c5Ta5
FSkmfakYIUSaEvRT5k98qvBprj7GiAZ9CAENeu89GvTOOTTorbVo0Btj0KDX
WqNBr5RCg15KiQb9OI5oP3pS4clcfc29Qm5hcRM/pA4MWg==
                    "], 
                    "Byte", ColorSpace -> "RGB", Interleaving -> True], 
                    "Hover" -> Image[CompressedData["
1:eJzd1LEOwiAQgGGiDg4OPoCLb+Hq6FrjA7QRGxdMqInxlXi8QiBAABmPxStO
jZf8JEe++fbdo7ktCCHDOj9N+zpy3r7P27xc2HDvGb2e2JP2lB+6Zf7c5Ta5
FSkmfakYIUSaEvRT5k98qvBprj7GiAZ9CAENeu89GvTOOTTorbVo0Btj0KDX
WqNBr5RCg15KiQb9OI5oP3pS4clcfc29Qm5hcRM/pA4MWg==
                    "], 
                    "Byte", ColorSpace -> "RGB", Interleaving -> True], 
                    "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAGiHmAmIUBBfzHg1HAzJkz/xODkdXfvHmTIB4m6v+ToP7/YFV/9+5dghhZ
/cOHDwliZPVPnz4liJHVv3z5kiBGVv/69WuCGFn9q1evCGJK3PP8+XOCGFn9
s2fPCGI6qWcgQT3DYFVPSnlFoCxEKRMB+xLGWw==
                    "], "Byte", 
                    ColorSpace -> "RGB", Interleaving -> True]}, {Appearance -> {
                    GrayLevel[1], FrameStyle -> Automatic, 
                    ImagePadding -> {{1, 0}, {1, 1}}}, ImageSize -> 178, 
                    FrameMargins -> Automatic, ImageSize -> 200, ImageSize -> 
                    Automatic, Appearance -> PopupMenu, Alignment -> 
                    Automatic, Background -> None, DefaultBaseStyle -> {}, 
                    Active -> True, DefaultTooltipStyle -> "TooltipLabel", 
                    Evaluator -> Automatic, Method -> "Preemptive", Tooltip -> 
                    None, TooltipDelay -> 0., TooltipStyle -> {}, Enabled -> 
                    True}], 
                  PopupMenu[
                   Dynamic[
                   DocGenPalette`Private`$CurrentProject, (
                    DocGenPalette`Private`$CurrentProject = #; Null)& ], {
                   "projects"}, 
                   "/Users/Mark/Library/Mathematica/ApplicationData/DocGen/\
Paclets/JSONTools", 
                   Button[
                   "", Null, Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAGiCWAmIUBJ/hPBsYJVP0b/tMCI5tvUXaAqhjD/PIDVMWY5h+kKsY0/xBV
MYb5FYeoipHMB7MtKw5TFUPN/w83v/IIVTGm+UepijHMrzpKVUxv92NLA1mz
Lv1/9u47Tty8+iah9IMwH0c+bF514z82MHv3A2LyL9x889J9OHHTyuuoZu+6
h1c9CGOYX7IHL25acRVs9qyddwmqBWF0882KdxHEGdNOE6UOhNHNNy3cQVWM
YX7BNqpidPNN8rdQFWOYn7eZqpiO5jPQ0HyGUfOJM5+W7StYPUxFDAcAm6yZ
0w==
                    "], "Byte", ColorSpace -> "RGB", Interleaving -> 
                    True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAGiCWAmIUBJ/hPBsYJHBI7/tMCI5ufMOkMVTGm+WepijHMn3yOqhjd/ESg
GDUxhvlTzlMVI5n/H2L+BapiqPn/YeYnTb1IVUx386ddoiqmt/uxpYHO9bf/
v/70Eyees+chofQDNx9XPpyz+8F/bGD9iWfE5F+4+fETT+PEs3fdRzP7KV71
IIxuflz/Sbx49s67YLPXHX9CUC0Io5sf23ecIG5bdZUodSCMbn5Mz1GqYnTz
o7sPURWjmx/VeYCqGN38yI79VMV0NJ+BhuYzjJpPnPm0bF/B6mEqYjgAAOES
Owo=
                    "], "Byte", ColorSpace -> "RGB", Interleaving -> 
                    True], "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAGiCWAmIUBJ/hPBsYJFN2L/9MCI5uvlzSfqnjU/EFj/n8amv9/2JifvICq
GN18/dQlVMXo5humr8DAKb37/j998wUnrltwEqs+EEY33yhrDVZcv+j0f2xg
xparOPWAMLr5xjkbcOKGJedQzJ659Tpe9SCMbr5J3ia8uGHJeYjZ224QVAvC
GO7P3UgQp006QpQ6EMYMn/VUxRjxm72OqhjT/LVUxcSmT3IxHc1noKH5DKPm
E2c+LdtXsHqYihgOABQHSaE=
                    "], "Byte", ColorSpace -> "RGB", 
                    Interleaving -> True]}, ImageMargins -> 0, {}], {}]}, {}],
                 Enabled -> Length[DocGenPalette`Private`$ProjectList] > 0, {
                1, 2, -1}], {{"projects"} -> RuleCondition[
                  Thread[
                  DocGenPalette`Private`$ProjectList -> 
                   Map[FileBaseName, DocGenPalette`Private`$ProjectList]], 
                  True], ("projects" -> "projects") -> RuleCondition[
                  Thread[
                  DocGenPalette`Private`$ProjectList -> 
                   Map[FileBaseName, DocGenPalette`Private`$ProjectList]], 
                  True]}], StandardForm],
             ImageSizeCache->{200., {9., 20.}},
             TrackedSymbols:>{DocGenPalette`Private`$ProjectList}]}
          },
          DefaultBaseStyle->"Column",
          GridBoxAlignment->{"Columns" -> {{Left}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Column"],
        ImageSize->{Automatic, 80}]},
      {
       FrameBox[
        TagBox[GridBox[{
           {
            TagBox[
             ButtonBox[
              StyleBox["\<\"Open Config\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[0.2],
               FrontFaceColor->GrayLevel[0.2],
               BackFaceColor->GrayLevel[0.2],
               GraphicsColor->GrayLevel[0.2],
               FontColor->GrayLevel[0.2]],
              Appearance->{"Default" -> Image[CompressedData["
1:eJzV1EEKgkAYhuGhWrQJOkCbbtG2ZduiAyhZtDGwIDqKRxNFUVFEEVF0bUMU
5NfiS1r1wzvMDDzbf66e1vuBEOI8lsdauS4NQ7ltpvKx1c/Hg67tVvpFO2jG
Qh3Kz5lsIhuJzrSkzpim2X7bu7Esi4bGtm0aGsdxaGhc16Wh8TyP9mYed9/3
aU/TvkwQBDQ0YRjS0ERRREMTxzENTZIkNDRpmtLQZFlGQ5PnOQ1NURQ0NGVZ
0tBUVUVDU9c1DU3TNLQfjehpxD+YnjuR7dyPHXwHy1co2w==
                  "], "Byte",
                   ColorSpace -> "RGB", Interleaving -> True], "Hover" -> 
                Image[CompressedData["
1:eJzV1E0KgkAYxvGhWrQJOkCbbtG2ZduiAyhZtDGwIDqKx/MDP1FRUZc2REE+
LZ6kVS/8h5mB3/adq6f1fiCEOI/lsVauS8NQbpupfGz18/Gga7uVftEOmrFQ
h/JzJpvIRqIzLakzpmm23/ZuLMuiobFtm4bGcRwaGtd1aWg8z6O9mcfd933a
07QvEwQBDU0YhjQ0URTR0MRxTEOTJAkNTZqmNDRZltHQ5HlOQ1MUBQ1NWZY0
NFVV0dDUdU1D0zQN7UcjehrxD6bnTmQ792MH3wFFhzOd
                  "], "Byte", 
                  ColorSpace -> "RGB", Interleaving -> True], "Pressed" -> 
                Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAGiHmBmIUBBfwngFHAzJkz/xOLkfVs27aNIB7Gev6TqOc/vfVs376dIEbX
s2fPHoIYXc/BgwcJYnQ9x44dI4jR9Zw+fZogRtdz/vx5ghhdz6VLlwhidD1X
r14liNH13LhxgyBG13P79m2CGF3PnTt3CGIK9TCQqIdhKOghsUwkVOZilMEA
mEXTyg==
                  "], "Byte", ColorSpace -> "RGB", Interleaving -> 
                  True], 
                Dynamic[
                 If[
                  TrueQ[
                   BTools`Private`UUIDActive[
                   "Button-5a617a80-71f1-4899-a946-d8a24a8a6309"]], "Pressed",
                   Automatic]]},
              ButtonFunction:>(CheckAll[Block[{$ContextPath = {"System`"}}, 
                   Needs[
                    StringJoin[DocGenPalette`Private`$AppName, "`"]]]; 
                 SystemOpen[
                   DocGenPalette`Private`exportDocInfo[
                   DocGenPalette`Private`$CurrentProject]], 
                 BTools`Private`UUIDActive[
                  "Button-5a617a80-71f1-4899-a946-d8a24a8a6309"] = False]; 
               BTools`Private`UUIDActive[
                 "Button-5a617a80-71f1-4899-a946-d8a24a8a6309"] = False),
              Evaluator->Automatic,
              FrameMargins->{{5, 5}, {2, 0}},
              ImageSize->200,
              Method->"Queued"],
             EventHandlerTag[{"MouseClicked" :> If[
                 TrueQ[
                  Replace[
                   Replace[Automatic, Pattern[BTools`Private`Package`d, 
                    Blank[Dynamic]] :> First[BTools`Private`Package`d]], 
                   Automatic -> True]], 
                 BTools`Private`UUIDActive[
                  "Button-5a617a80-71f1-4899-a946-d8a24a8a6309"] = True], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]]},
           {
            TagBox[
             ButtonBox[
              StyleBox["\<\"Open PacletInfo\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[0.2],
               FrontFaceColor->GrayLevel[0.2],
               BackFaceColor->GrayLevel[0.2],
               GraphicsColor->GrayLevel[0.2],
               FontColor->GrayLevel[0.2]],
              Appearance->{"Default" -> Image[CompressedData["
1:eJzV1EEKgkAYhuGhWrQJOkCbbtG2ZduiAyhZtDGwIDqKRxNFUVFEEVF0bUMU
5NfiS1r1wzvMDDzbf66e1vuBEOI8lsdauS4NQ7ltpvKx1c/Hg67tVvpFO2jG
Qh3Kz5lsIhuJzrSkzpim2X7bu7Esi4bGtm0aGsdxaGhc16Wh8TyP9mYed9/3
aU/TvkwQBDQ0YRjS0ERRREMTxzENTZIkNDRpmtLQZFlGQ5PnOQ1NURQ0NGVZ
0tBUVUVDU9c1DU3TNLQfjehpxD+YnjuR7dyPHXwHy1co2w==
                  "], "Byte",
                   ColorSpace -> "RGB", Interleaving -> True], "Hover" -> 
                Image[CompressedData["
1:eJzV1E0KgkAYxvGhWrQJOkCbbtG2ZduiAyhZtDGwIDqKx/MDP1FRUZc2REE+
LZ6kVS/8h5mB3/adq6f1fiCEOI/lsVauS8NQbpupfGz18/Gga7uVftEOmrFQ
h/JzJpvIRqIzLakzpmm23/ZuLMuiobFtm4bGcRwaGtd1aWg8z6O9mcfd933a
07QvEwQBDU0YhjQ0URTR0MRxTEOTJAkNTZqmNDRZltHQ5HlOQ1MUBQ1NWZY0
NFVV0dDUdU1D0zQN7UcjehrxD6bnTmQ792MH3wFFhzOd
                  "], "Byte", 
                  ColorSpace -> "RGB", Interleaving -> True], "Pressed" -> 
                Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAGiHmBmIUBBfwngFHAzJkz/xOLkfVs27aNIB7Gev6TqOc/vfVs376dIEbX
s2fPHoIYXc/BgwcJYnQ9x44dI4jR9Zw+fZogRtdz/vx5ghhdz6VLlwhidD1X
r14liNH13LhxgyBG13P79m2CGF3PnTt3CGIK9TCQqIdhKOghsUwkVOZilMEA
mEXTyg==
                  "], "Byte", ColorSpace -> "RGB", Interleaving -> 
                  True], 
                Dynamic[
                 If[
                  TrueQ[
                   BTools`Private`UUIDActive[
                   "Button-d9829f68-8868-42e3-99b5-d911266635d5"]], "Pressed",
                   Automatic]]},
              ButtonFunction:>(CheckAll[Block[{$ContextPath = {"System`"}}, 
                   Needs[
                    StringJoin[DocGenPalette`Private`$AppName, "`"]]]; 
                 With[{DocGenPalette`Private`f = 
                    FileNameJoin[{
                    DocGenPalette`Private`$CurrentProject, "PacletInfo.m"}]}, 
                   If[
                    Not[
                    FileExistsQ[DocGenPalette`Private`f]], 
                    BTools`PacletInfoGenerate[
                    DocGenPalette`Private`$CurrentProject, "Name" -> "", 
                    "Version" -> 0, 
                    "Kernel" -> {"Root" -> ".", "Context" -> {
                    StringJoin[
                    FileBaseName[DocGenPalette`Private`$CurrentProject], 
                    "`"]}}]]; SystemOpen[DocGenPalette`Private`f]], 
                 BTools`Private`UUIDActive[
                  "Button-d9829f68-8868-42e3-99b5-d911266635d5"] = False]; 
               BTools`Private`UUIDActive[
                 "Button-d9829f68-8868-42e3-99b5-d911266635d5"] = False),
              Evaluator->Automatic,
              FrameMargins->{{5, 5}, {2, 0}},
              ImageSize->200,
              Method->"Queued"],
             EventHandlerTag[{"MouseClicked" :> If[
                 TrueQ[
                  Replace[
                   Replace[Automatic, Pattern[BTools`Private`Package`d, 
                    Blank[Dynamic]] :> First[BTools`Private`Package`d]], 
                   Automatic -> True]], 
                 BTools`Private`UUIDActive[
                  "Button-d9829f68-8868-42e3-99b5-d911266635d5"] = True], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]]},
           {
            PanelBox["\<\"\"\>",
             Appearance->Image[CompressedData["
1:eJyF0b0OgjAQB/BGHRx9BRMfwtXRFeMDQETiggmYGJ+rL9XS8lVoC12wJnLT
JVxyd7/7r7ePnsF9RQjJt34E4fuUZeHnsvPHNc0fSRrfzukrTuLsGK19ePD9
2xsCNQF8/e/JOQcex3HRwzCgttaCjTGotdao+74Hd12HWikFbtsWddM04Lqu
UVdVBS7LErWUErUQAlwUBWrO+aIZY7MJpRT+Mmdfqc/QmA==
               "], "Byte", 
               ColorSpace -> "RGB", Interleaving -> True],
             ImageMargins->5,
             ImageSize->{190, 1}]},
           {
            DynamicBox[ToBoxes[
              Insert[
               ReplaceAll[
                Insert[
                 Row[{
                   Button[
                   "Open Ref Page", Null, 
                    Appearance -> ("Default" -> Image[CompressedData["
1:eJzN1LEKglAYhuFDNTQ0dAEt3UVrY6vRBRSZtBhoEF2GlyeKoqKIIqLobMdB
+Fz6qqkfngPn8E5n+Nenm3KZCCHMuTyU42NrGMfnfikvB928arp63ul3VVON
zWkqH1fSQpqJ0XRvjMayrO4T2Nu2TWHvOA6Fveu6FPae51HY+75PDf/Y90EQ
UMP/9n0YhhT2URRR2MdxTGGfJAmFfZqmFPZZllHY53lOYV8UBYV9WZYU9lVV
UdjXdU1h3zQNhX3bttSPvfiiF//af7OvyC4c7cQXOc/YKw==
                    "], 
                    "Byte", ColorSpace -> "RGB", Interleaving -> True]), {
                    Appearance -> {
                    "Palette", FrameStyle -> Automatic, 
                    ImagePadding -> {{1, 0}, {1, 1}}}, ImageSize -> 178, 
                    FrameMargins -> Automatic, ImageSize -> 200, Appearance -> 
                    "Palette", Appearance -> ActionMenu, Alignment -> 
                    Automatic, Background -> None, DefaultBaseStyle -> {}}], 
                   ActionMenu[
                    Button[
                    "", Null, 
                    Appearance -> {"Default" -> Image[CompressedData["
1:eJzt1r9qg0AcwPEjzZCxY4c69C26duya0gdIiA1dLJiq9DH88xwuPo0oiooi
ioiis70LTUh/zSWh/OzUg4+c8rvvqN4t3+YvE0LIZkYv84X2IMuLj6drevMs
bV7Xkrh6lN7FtSjfL6/ow1vqhpoS7hp+gbt0XR/GcNh3XRcV7Huehwr2fd9H
BftBEKCC/TAMUR30t/soilB99YddP45jVLCfJAkq2E/TFBXsZ1mGCvbzPP/B
tu1BEAQu3jkG9ouiOMowjKPvM0VRuGcY2C/Lkss0zW9tVVVPzjOwX1XVSZZl
bWc1TTs7y8B+XddnOY5z0RwD+03ToIL9tm1RwX7Xdahgv+97VH/YJyP2yX//
sv6Y/1e77zCi/foEAE8RLQ==
                    "], "Byte", ColorSpace -> "RGB", 
                    Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJzt1k1qg0AUwPEh7SLLLrsoQm/RbZfdpuQACbWhGwumoN5DvYcLD+QHfqKi
oi7tTKnFvDhJKM+uOvCTUd78l+r99n31uiCE7Jf0stooj7K80Z5v6M1a2r/t
JPHlSfoQd6L8sL2iD++oW+qacFf/C9xlmmY/h3HfcRxUsO+6LirY9zwPFez7
vo8K9oMgQDXqf+3DMET13e+HfhRFqGA/jmNUsJ8kCSrYT9MUFexnWXbEsqxe
EAQuXdcnzzGwn+f5JNaYep8pisI9w8B+URRchmEctFVVPTnPwH5ZlicN85qm
nZ0dzw/9qqrOsm37ojkG9uu6RgX7TdOggv22bVHBftd1qP6wT2bsk//+Zf05
/6+G7zCin/UJ16Ithg==
                    "], "Byte", ColorSpace -> "RGB", 
                    Interleaving -> True], "Pressed" -> Image[CompressedData["

1:eJzt1r8KgkAcwPGjGhobHVp6i9bGVqMHKPNPi4EFGQ6ib+AL+Bi6uLi4OAiC
IOi7XHdBUb+8ijgjoh98BOV331EdLTei0kEIbfvkIi72E8NYHGYDcjPXt2tV
l1dTfSersjFedsnDISEQPcQc/AbmuK6L23DdD4KAq3//a/q4xT7+lX4YhlzB
fhRFXMF+HMd3PM/DgiAwmabZeI6C/SRJGlmW1fg+kySJeYaC/TRNmWzbvmkr
ivJwn4L9LMsechzntKtp2tNdCvbzPH/K9/2X9ijYL4qCK9gvy5Ir2K+qiivY
r+uaqw/2UYt99O+/1m/z/+r8HeboMkf3O0vJ
                    "], "Byte", 
                    ColorSpace -> "RGB", Interleaving -> True], "Disabled" -> 
                    Image[CompressedData["
1:eJzt1r1qg1AUwPFL26Fjxw5d8hZdO3ZN6QMk1IYuFkyhdPIBnHwYdfZjdnES
RVFRRBFRdLbekJT0JCYhHDv1wE9Uzv2vOpm/T18vCCHL6/4ynX0+cNzs6+mm
f3hml28Llnl5ZD+YBcPdzy/7l3e9294VGZzuDIMjimI3hu2+bduoYN9xHFSw
77ouKtj3PA8V7Pu+j2qrv7oPggDVut9t+mEYooL9KIpQwX4cx6hgP0kSVLCf
pukO0zQ7QRAGqaq69xwF+1mW7aVpWsfz/A5JkgbPULCf5/kgXdd/tWVZPrhP
wX5RFAcZhrFqK4pydJeC/bIsj7Is66Q9CvarqkIF+3Vdo4L9pmlQwX7btqj+
sE9G7JP//mn9Mf+vNt9hRD/zDdI7LNg=
                    "], "Byte", ColorSpace -> 
                    "RGB", Interleaving -> True]}], {"Label" :> "Result"}, 
                    Appearance -> None, {}]}, {}], 
                 FilterRules[{Enabled -> Length[
                    Join[
                    FileNames["*.nb", 
                    FileNameJoin[
                    Flatten[{DocGenPalette`Private`$CurrentProject, 
                    DocGenPalette`Private`docsDirExt["Symbols"]}]]]]] > 0, 
                   TrackedSymbols :> {DocGenPalette`Private`$CurrentProject}}, 
                  Options[ActionMenu]], {1, 2, -1}], {"Label" :> "Result"} -> 
                Table[
                  With[{DocGenPalette`Private`n$ = DocGenPalette`Private`n}, 
                   If[
                   DocGenPalette`Private`n$ === Delimiter, 
                    DocGenPalette`Private`n$, (StringJoin[
                    Riffle[
                    FileNameSplit[#], 
                    "\[VeryThinSpace]\[RightGuillemet]\[VeryThinSpace]"]]& )[
                    FileNameDrop[
                    FileNameJoin[{
                    DirectoryName[DocGenPalette`Private`n$], 
                    FileBaseName[DocGenPalette`Private`n$]}], 
                    FileNameDepth[
                    FileNameJoin[
                    Flatten[{DocGenPalette`Private`$CurrentProject, 
                    DocGenPalette`Private`docsDirExt["Symbols"]}]]]]] :> 
                    SystemOpen[DocGenPalette`Private`n$]]], {
                  DocGenPalette`Private`n, 
                   DocGenPalette`Private`fileNamesGather["*.nb", 
                    DocGenPalette`Private`docsDirExt["Symbols"]]}]], 
               FilterRules[{Enabled -> Length[
                    Join[
                    FileNames["*.nb", 
                    FileNameJoin[
                    Flatten[{DocGenPalette`Private`$CurrentProject, 
                    DocGenPalette`Private`docsDirExt["Symbols"]}]]]]] > 0, 
                 TrackedSymbols :> {DocGenPalette`Private`$CurrentProject}}, 
                Options[Button]], {1, 1, -1}], StandardForm], {
             Enabled -> True, 
              TrackedSymbols :> {DocGenPalette`Private`$CurrentProject}},
             ImageSizeCache->{200., {8., 19.}}]},
           {
            DynamicBox[ToBoxes[
              Insert[
               ReplaceAll[
                Insert[
                 Row[{
                   Button[
                   "Open Guide Page", Null, 
                    Appearance -> ("Default" -> Image[CompressedData["
1:eJzN1LEKglAYhuFDNTQ0dAEt3UVrY6vRBRSZtBhoEF2GlyeKoqKIIqLobMdB
+Fz6qqkfngPn8E5n+Nenm3KZCCHMuTyU42NrGMfnfikvB928arp63ul3VVON
zWkqH1fSQpqJ0XRvjMayrO4T2Nu2TWHvOA6Fveu6FPae51HY+75PDf/Y90EQ
UMP/9n0YhhT2URRR2MdxTGGfJAmFfZqmFPZZllHY53lOYV8UBYV9WZYU9lVV
UdjXdU1h3zQNhX3bttSPvfiiF//af7OvyC4c7cQXOc/YKw==
                    "], 
                    "Byte", ColorSpace -> "RGB", Interleaving -> True]), {
                    Appearance -> {
                    "Palette", FrameStyle -> Automatic, 
                    ImagePadding -> {{1, 0}, {1, 1}}}, ImageSize -> 178, 
                    FrameMargins -> Automatic, ImageSize -> 200, Appearance -> 
                    "Palette", Appearance -> ActionMenu, Alignment -> 
                    Automatic, Background -> None, DefaultBaseStyle -> {}}], 
                   ActionMenu[
                    Button[
                    "", Null, 
                    Appearance -> {"Default" -> Image[CompressedData["
1:eJzt1r9qg0AcwPEjzZCxY4c69C26duya0gdIiA1dLJiq9DH88xwuPo0oiooi
ioiis70LTUh/zSWh/OzUg4+c8rvvqN4t3+YvE0LIZkYv84X2IMuLj6drevMs
bV7Xkrh6lN7FtSjfL6/ow1vqhpoS7hp+gbt0XR/GcNh3XRcV7Huehwr2fd9H
BftBEKCC/TAMUR30t/soilB99YddP45jVLCfJAkq2E/TFBXsZ1mGCvbzPP/B
tu1BEAQu3jkG9ouiOMowjKPvM0VRuGcY2C/Lkss0zW9tVVVPzjOwX1XVSZZl
bWc1TTs7y8B+XddnOY5z0RwD+03ToIL9tm1RwX7Xdahgv+97VH/YJyP2yX//
sv6Y/1e77zCi/foEAE8RLQ==
                    "], "Byte", ColorSpace -> "RGB", 
                    Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJzt1k1qg0AUwPEh7SLLLrsoQm/RbZfdpuQACbWhGwumoN5DvYcLD+QHfqKi
oi7tTKnFvDhJKM+uOvCTUd78l+r99n31uiCE7Jf0stooj7K80Z5v6M1a2r/t
JPHlSfoQd6L8sL2iD++oW+qacFf/C9xlmmY/h3HfcRxUsO+6LirY9zwPFez7
vo8K9oMgQDXqf+3DMET13e+HfhRFqGA/jmNUsJ8kCSrYT9MUFexnWXbEsqxe
EAQuXdcnzzGwn+f5JNaYep8pisI9w8B+URRchmEctFVVPTnPwH5ZlicN85qm
nZ0dzw/9qqrOsm37ojkG9uu6RgX7TdOggv22bVHBftd1qP6wT2bsk//+Zf05
/6+G7zCin/UJ16Ithg==
                    "], "Byte", ColorSpace -> "RGB", 
                    Interleaving -> True], "Pressed" -> Image[CompressedData["

1:eJzt1r8KgkAcwPGjGhobHVp6i9bGVqMHKPNPi4EFGQ6ib+AL+Bi6uLi4OAiC
IOi7XHdBUb+8ijgjoh98BOV331EdLTei0kEIbfvkIi72E8NYHGYDcjPXt2tV
l1dTfSersjFedsnDISEQPcQc/AbmuK6L23DdD4KAq3//a/q4xT7+lX4YhlzB
fhRFXMF+HMd3PM/DgiAwmabZeI6C/SRJGlmW1fg+kySJeYaC/TRNmWzbvmkr
ivJwn4L9LMsechzntKtp2tNdCvbzPH/K9/2X9ijYL4qCK9gvy5Ir2K+qiivY
r+uaqw/2UYt99O+/1m/z/+r8HeboMkf3O0vJ
                    "], "Byte", 
                    ColorSpace -> "RGB", Interleaving -> True], "Disabled" -> 
                    Image[CompressedData["
1:eJzt1r1qg1AUwPFL26Fjxw5d8hZdO3ZN6QMk1IYuFkyhdPIBnHwYdfZjdnES
RVFRRBFRdLbekJT0JCYhHDv1wE9Uzv2vOpm/T18vCCHL6/4ynX0+cNzs6+mm
f3hml28Llnl5ZD+YBcPdzy/7l3e9294VGZzuDIMjimI3hu2+bduoYN9xHFSw
77ouKtj3PA8V7Pu+j2qrv7oPggDVut9t+mEYooL9KIpQwX4cx6hgP0kSVLCf
pukO0zQ7QRAGqaq69xwF+1mW7aVpWsfz/A5JkgbPULCf5/kgXdd/tWVZPrhP
wX5RFAcZhrFqK4pydJeC/bIsj7Is66Q9CvarqkIF+3Vdo4L9pmlQwX7btqj+
sE9G7JP//mn9Mf+vNt9hRD/zDdI7LNg=
                    "], "Byte", ColorSpace -> 
                    "RGB", Interleaving -> True]}], {"Label" :> "Result"}, 
                    Appearance -> None, {}]}, {}], 
                 FilterRules[{Enabled -> Length[
                    Join[
                    FileNames["*.nb", 
                    FileNameJoin[
                    Flatten[{DocGenPalette`Private`$CurrentProject, 
                    DocGenPalette`Private`docsDirExt["Guides"]}]]]]] > 0, 
                   TrackedSymbols :> {DocGenPalette`Private`$CurrentProject}}, 
                  Options[ActionMenu]], {1, 2, -1}], {"Label" :> "Result"} -> 
                Table[
                  With[{DocGenPalette`Private`n$ = DocGenPalette`Private`n}, 
                   If[
                   DocGenPalette`Private`n$ === Delimiter, 
                    DocGenPalette`Private`n$, (StringJoin[
                    Riffle[
                    FileNameSplit[#], 
                    "\[VeryThinSpace]\[RightGuillemet]\[VeryThinSpace]"]]& )[
                    FileNameDrop[
                    FileNameJoin[{
                    DirectoryName[DocGenPalette`Private`n$], 
                    FileBaseName[DocGenPalette`Private`n$]}], 
                    FileNameDepth[
                    FileNameJoin[
                    Flatten[{DocGenPalette`Private`$CurrentProject, 
                    DocGenPalette`Private`docsDirExt["Guides"]}]]]]] :> 
                    SystemOpen[DocGenPalette`Private`n$]]], {
                  DocGenPalette`Private`n, 
                   DocGenPalette`Private`fileNamesGather["*.nb", 
                    DocGenPalette`Private`docsDirExt["Guides"]]}]], 
               FilterRules[{Enabled -> Length[
                    Join[
                    FileNames["*.nb", 
                    FileNameJoin[
                    Flatten[{DocGenPalette`Private`$CurrentProject, 
                    DocGenPalette`Private`docsDirExt["Guides"]}]]]]] > 0, 
                 TrackedSymbols :> {DocGenPalette`Private`$CurrentProject}}, 
                Options[Button]], {1, 1, -1}], StandardForm], {
             Enabled -> True, 
              TrackedSymbols :> {DocGenPalette`Private`$CurrentProject}},
             ImageSizeCache->{200., {8., 19.}}]},
           {
            DynamicBox[ToBoxes[
              Insert[
               ReplaceAll[
                Insert[
                 Row[{
                   Button[
                   "Open Tutorial Page", Null, 
                    Appearance -> ("Default" -> Image[CompressedData["
1:eJzN1LEKglAYhuFDNTQ0dAEt3UVrY6vRBRSZtBhoEF2GlyeKoqKIIqLobMdB
+Fz6qqkfngPn8E5n+Nenm3KZCCHMuTyU42NrGMfnfikvB928arp63ul3VVON
zWkqH1fSQpqJ0XRvjMayrO4T2Nu2TWHvOA6Fveu6FPae51HY+75PDf/Y90EQ
UMP/9n0YhhT2URRR2MdxTGGfJAmFfZqmFPZZllHY53lOYV8UBYV9WZYU9lVV
UdjXdU1h3zQNhX3bttSPvfiiF//af7OvyC4c7cQXOc/YKw==
                    "], 
                    "Byte", ColorSpace -> "RGB", Interleaving -> True]), {
                    Appearance -> {
                    "Palette", FrameStyle -> Automatic, 
                    ImagePadding -> {{1, 0}, {1, 1}}}, ImageSize -> 178, 
                    FrameMargins -> Automatic, ImageSize -> 200, Appearance -> 
                    "Palette", Appearance -> ActionMenu, Alignment -> 
                    Automatic, Background -> None, DefaultBaseStyle -> {}}], 
                   ActionMenu[
                    Button[
                    "", Null, 
                    Appearance -> {"Default" -> Image[CompressedData["
1:eJzt1r9qg0AcwPEjzZCxY4c69C26duya0gdIiA1dLJiq9DH88xwuPo0oiooi
ioiis70LTUh/zSWh/OzUg4+c8rvvqN4t3+YvE0LIZkYv84X2IMuLj6drevMs
bV7Xkrh6lN7FtSjfL6/ow1vqhpoS7hp+gbt0XR/GcNh3XRcV7Huehwr2fd9H
BftBEKCC/TAMUR30t/soilB99YddP45jVLCfJAkq2E/TFBXsZ1mGCvbzPP/B
tu1BEAQu3jkG9ouiOMowjKPvM0VRuGcY2C/Lkss0zW9tVVVPzjOwX1XVSZZl
bWc1TTs7y8B+XddnOY5z0RwD+03ToIL9tm1RwX7Xdahgv+97VH/YJyP2yX//
sv6Y/1e77zCi/foEAE8RLQ==
                    "], "Byte", ColorSpace -> "RGB", 
                    Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJzt1k1qg0AUwPEh7SLLLrsoQm/RbZfdpuQACbWhGwumoN5DvYcLD+QHfqKi
oi7tTKnFvDhJKM+uOvCTUd78l+r99n31uiCE7Jf0stooj7K80Z5v6M1a2r/t
JPHlSfoQd6L8sL2iD++oW+qacFf/C9xlmmY/h3HfcRxUsO+6LirY9zwPFez7
vo8K9oMgQDXqf+3DMET13e+HfhRFqGA/jmNUsJ8kCSrYT9MUFexnWXbEsqxe
EAQuXdcnzzGwn+f5JNaYep8pisI9w8B+URRchmEctFVVPTnPwH5ZlicN85qm
nZ0dzw/9qqrOsm37ojkG9uu6RgX7TdOggv22bVHBftd1qP6wT2bsk//+Zf05
/6+G7zCin/UJ16Ithg==
                    "], "Byte", ColorSpace -> "RGB", 
                    Interleaving -> True], "Pressed" -> Image[CompressedData["

1:eJzt1r8KgkAcwPGjGhobHVp6i9bGVqMHKPNPi4EFGQ6ib+AL+Bi6uLi4OAiC
IOi7XHdBUb+8ijgjoh98BOV331EdLTei0kEIbfvkIi72E8NYHGYDcjPXt2tV
l1dTfSersjFedsnDISEQPcQc/AbmuK6L23DdD4KAq3//a/q4xT7+lX4YhlzB
fhRFXMF+HMd3PM/DgiAwmabZeI6C/SRJGlmW1fg+kySJeYaC/TRNmWzbvmkr
ivJwn4L9LMsechzntKtp2tNdCvbzPH/K9/2X9ijYL4qCK9gvy5Ir2K+qiivY
r+uaqw/2UYt99O+/1m/z/+r8HeboMkf3O0vJ
                    "], "Byte", 
                    ColorSpace -> "RGB", Interleaving -> True], "Disabled" -> 
                    Image[CompressedData["
1:eJzt1r1qg1AUwPFL26Fjxw5d8hZdO3ZN6QMk1IYuFkyhdPIBnHwYdfZjdnES
RVFRRBFRdLbekJT0JCYhHDv1wE9Uzv2vOpm/T18vCCHL6/4ynX0+cNzs6+mm
f3hml28Llnl5ZD+YBcPdzy/7l3e9294VGZzuDIMjimI3hu2+bduoYN9xHFSw
77ouKtj3PA8V7Pu+j2qrv7oPggDVut9t+mEYooL9KIpQwX4cx6hgP0kSVLCf
pukO0zQ7QRAGqaq69xwF+1mW7aVpWsfz/A5JkgbPULCf5/kgXdd/tWVZPrhP
wX5RFAcZhrFqK4pydJeC/bIsj7Is66Q9CvarqkIF+3Vdo4L9pmlQwX7btqj+
sE9G7JP//mn9Mf+vNt9hRD/zDdI7LNg=
                    "], "Byte", ColorSpace -> 
                    "RGB", Interleaving -> True]}], {"Label" :> "Result"}, 
                    Appearance -> None, {}]}, {}], 
                 FilterRules[{Enabled -> Length[
                    Join[
                    FileNames["*.nb", 
                    FileNameJoin[
                    Flatten[{DocGenPalette`Private`$CurrentProject, 
                    DocGenPalette`Private`docsDirExt["Tutorial"]}]]]]] > 0, 
                   TrackedSymbols :> {DocGenPalette`Private`$CurrentProject}}, 
                  Options[ActionMenu]], {1, 2, -1}], {"Label" :> "Result"} -> 
                Table[
                  With[{DocGenPalette`Private`n$ = DocGenPalette`Private`n}, 
                   If[
                   DocGenPalette`Private`n$ === Delimiter, 
                    DocGenPalette`Private`n$, (StringJoin[
                    Riffle[
                    FileNameSplit[#], 
                    "\[VeryThinSpace]\[RightGuillemet]\[VeryThinSpace]"]]& )[
                    FileNameDrop[
                    FileNameJoin[{
                    DirectoryName[DocGenPalette`Private`n$], 
                    FileBaseName[DocGenPalette`Private`n$]}], 
                    FileNameDepth[
                    FileNameJoin[
                    Flatten[{DocGenPalette`Private`$CurrentProject, 
                    DocGenPalette`Private`docsDirExt["Tutorial"]}]]]]] :> 
                    SystemOpen[DocGenPalette`Private`n$]]], {
                  DocGenPalette`Private`n, 
                   DocGenPalette`Private`fileNamesGather["*.nb", 
                    DocGenPalette`Private`docsDirExt["Tutorial"]]}]], 
               FilterRules[{Enabled -> Length[
                    Join[
                    FileNames["*.nb", 
                    FileNameJoin[
                    Flatten[{DocGenPalette`Private`$CurrentProject, 
                    DocGenPalette`Private`docsDirExt["Tutorial"]}]]]]] > 0, 
                 TrackedSymbols :> {DocGenPalette`Private`$CurrentProject}}, 
                Options[Button]], {1, 1, -1}], StandardForm], {
             Enabled -> False, 
              TrackedSymbols :> {DocGenPalette`Private`$CurrentProject}},
             ImageSizeCache->{200., {8., 19.}}]},
           {
            PanelBox["\<\"\"\>",
             Appearance->Image[CompressedData["
1:eJyF0b0OgjAQB/BGHRx9BRMfwtXRFeMDQETiggmYGJ+rL9XS8lVoC12wJnLT
JVxyd7/7r7ePnsF9RQjJt34E4fuUZeHnsvPHNc0fSRrfzukrTuLsGK19ePD9
2xsCNQF8/e/JOQcex3HRwzCgttaCjTGotdao+74Hd12HWikFbtsWddM04Lqu
UVdVBS7LErWUErUQAlwUBWrO+aIZY7MJpRT+Mmdfqc/QmA==
               "], "Byte", 
               ColorSpace -> "RGB", Interleaving -> True],
             ImageMargins->5,
             ImageSize->{190, 1}]},
           {
            
            TemplateBox[{
             ButtonBox[
              "\"Make Template\"", ButtonFunction :> Null, 
               Appearance -> ("Default" -> Image[CompressedData["
1:eJzN1LEKglAYhuFDNTQ0dAEt3UVrY6vRBRSZtBhoEF2GlyeKoqKIIqLobMdB
+Fz6qqkfngPn8E5n+Nenm3KZCCHMuTyU42NrGMfnfikvB928arp63ul3VVON
zWkqH1fSQpqJ0XRvjMayrO4T2Nu2TWHvOA6Fveu6FPae51HY+75PDf/Y90EQ
UMP/9n0YhhT2URRR2MdxTGGfJAmFfZqmFPZZllHY53lOYV8UBYV9WZYU9lVV
UdjXdU1h3zQNhX3bttSPvfiiF//af7OvyC4c7cQXOc/YKw==
                  "], "Byte",
                   ColorSpace -> "RGB", Interleaving -> True]), 
               Appearance -> {
                "Palette", FrameStyle -> Automatic, 
                 ImagePadding -> {{1, 0}, {1, 1}}}, ImageSize -> 178, 
               FrameMargins -> Automatic, Method -> "Queued", ImageSize -> 
               200, Appearance -> "Palette", Appearance -> ActionMenu, 
               Alignment -> Automatic, Background -> None, 
               DefaultBaseStyle -> {}, Evaluator -> Automatic],ActionMenuBox[
               ButtonBox[
               "\"\"", ButtonFunction :> Null, 
                Appearance -> {"Default" -> Image[CompressedData["
1:eJzt1r9qg0AcwPEjzZCxY4c69C26duya0gdIiA1dLJiq9DH88xwuPo0oiooi
ioiis70LTUh/zSWh/OzUg4+c8rvvqN4t3+YvE0LIZkYv84X2IMuLj6drevMs
bV7Xkrh6lN7FtSjfL6/ow1vqhpoS7hp+gbt0XR/GcNh3XRcV7Huehwr2fd9H
BftBEKCC/TAMUR30t/soilB99YddP45jVLCfJAkq2E/TFBXsZ1mGCvbzPP/B
tu1BEAQu3jkG9ouiOMowjKPvM0VRuGcY2C/Lkss0zW9tVVVPzjOwX1XVSZZl
bWc1TTs7y8B+XddnOY5z0RwD+03ToIL9tm1RwX7Xdahgv+97VH/YJyP2yX//
sv6Y/1e77zCi/foEAE8RLQ==
                    "], "Byte", ColorSpace -> "RGB", 
                    Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJzt1k1qg0AUwPEh7SLLLrsoQm/RbZfdpuQACbWhGwumoN5DvYcLD+QHfqKi
oi7tTKnFvDhJKM+uOvCTUd78l+r99n31uiCE7Jf0stooj7K80Z5v6M1a2r/t
JPHlSfoQd6L8sL2iD++oW+qacFf/C9xlmmY/h3HfcRxUsO+6LirY9zwPFez7
vo8K9oMgQDXqf+3DMET13e+HfhRFqGA/jmNUsJ8kCSrYT9MUFexnWXbEsqxe
EAQuXdcnzzGwn+f5JNaYep8pisI9w8B+URRchmEctFVVPTnPwH5ZlicN85qm
nZ0dzw/9qqrOsm37ojkG9uu6RgX7TdOggv22bVHBftd1qP6wT2bsk//+Zf05
/6+G7zCin/UJ16Ithg==
                    "], "Byte", ColorSpace -> "RGB", 
                    Interleaving -> True], "Pressed" -> Image[CompressedData["

1:eJzt1r8KgkAcwPGjGhobHVp6i9bGVqMHKPNPi4EFGQ6ib+AL+Bi6uLi4OAiC
IOi7XHdBUb+8ijgjoh98BOV331EdLTei0kEIbfvkIi72E8NYHGYDcjPXt2tV
l1dTfSersjFedsnDISEQPcQc/AbmuK6L23DdD4KAq3//a/q4xT7+lX4YhlzB
fhRFXMF+HMd3PM/DgiAwmabZeI6C/SRJGlmW1fg+kySJeYaC/TRNmWzbvmkr
ivJwn4L9LMsechzntKtp2tNdCvbzPH/K9/2X9ijYL4qCK9gvy5Ir2K+qiivY
r+uaqw/2UYt99O+/1m/z/+r8HeboMkf3O0vJ
                    "], "Byte", 
                    ColorSpace -> "RGB", Interleaving -> True], "Disabled" -> 
                  Image[CompressedData["
1:eJzt1r1qg1AUwPFL26Fjxw5d8hZdO3ZN6QMk1IYuFkyhdPIBnHwYdfZjdnES
RVFRRBFRdLbekJT0JCYhHDv1wE9Uzv2vOpm/T18vCCHL6/4ynX0+cNzs6+mm
f3hml28Llnl5ZD+YBcPdzy/7l3e9294VGZzuDIMjimI3hu2+bduoYN9xHFSw
77ouKtj3PA8V7Pu+j2qrv7oPggDVut9t+mEYooL9KIpQwX4cx6hgP0kSVLCf
pukO0zQ7QRAGqaq69xwF+1mW7aVpWsfz/A5JkgbPULCf5/kgXdd/tWVZPrhP
wX5RFAcZhrFqK4pydJeC/bIsj7Is66Q9CvarqkIF+3Vdo4L9pmlQwX7btqj+
sE9G7JP//mn9Mf+vNt9hRD/zDdI7LNg=
                    "], "Byte", ColorSpace -> 
                    "RGB", Interleaving -> True]}, Evaluator -> Automatic, 
                Method -> "Preemptive"], {
               "\"Symbol Page\"" :> 
                With[{DocGenPalette`Private`s = NotebookRead[
                    InputNotebook[]]}, 
                  If[
                   MatchQ[DocGenPalette`Private`s, 
                    PatternTest[
                    Blank[String], StringMatchQ[#, 
                    Repeated[
                    Alternatives["$", "`", WordCharacter]]]& ]], 
                   CreateDocument[
                    DocGenPalette`Private`whichPacF[
                    "SymbolPageTemplate"][{DocGenPalette`Private`s}]], 
                   CreateDocument[
                    DocGenPalette`Private`whichPacF[
                    "SymbolPageTemplate"][{"Symbol"}]]]], "\"Guide Page\"" :> 
                With[{DocGenPalette`Private`s = NotebookRead[
                    InputNotebook[]]}, 
                  If[
                   MatchQ[DocGenPalette`Private`s, 
                    Blank[String]], 
                   CreateDocument[
                    DocGenPalette`Private`whichPacF[
                    "GuideTemplate"][{DocGenPalette`Private`s}]], 
                   CreateDocument[
                    DocGenPalette`Private`whichPacF[
                    "GuideTemplate"][{"Guide"}]]]], "\"Tutorial Page\"" :> 
                With[{DocGenPalette`Private`s = NotebookRead[
                    InputNotebook[]]}, 
                  If[
                   MatchQ[DocGenPalette`Private`s, 
                    Blank[String]], 
                   CreateDocument[
                    DocGenPalette`Private`whichPacF[
                    "TutorialTemplate"][{DocGenPalette`Private`s}]], 
                   CreateDocument[
                    DocGenPalette`Private`whichPacF[
                    "TutorialTemplate"][{"Tutorial"}]]]]}, Appearance -> 
               None, {Method -> "Queued"}]},
             "RowDefault"]},
           {
            
            TemplateBox[{
             ButtonBox[
              "\"Generate from Notebook\"", ButtonFunction :> Null, 
               Appearance -> ("Default" -> Image[CompressedData["
1:eJzN1LEKglAYhuFDNTQ0dAEt3UVrY6vRBRSZtBhoEF2GlyeKoqKIIqLobMdB
+Fz6qqkfngPn8E5n+Nenm3KZCCHMuTyU42NrGMfnfikvB928arp63ul3VVON
zWkqH1fSQpqJ0XRvjMayrO4T2Nu2TWHvOA6Fveu6FPae51HY+75PDf/Y90EQ
UMP/9n0YhhT2URRR2MdxTGGfJAmFfZqmFPZZllHY53lOYV8UBYV9WZYU9lVV
UdjXdU1h3zQNhX3bttSPvfiiF//af7OvyC4c7cQXOc/YKw==
                  "], "Byte",
                   ColorSpace -> "RGB", Interleaving -> True]), 
               Appearance -> {
                "Palette", FrameStyle -> Automatic, 
                 ImagePadding -> {{1, 0}, {1, 1}}}, ImageSize -> 178, 
               FrameMargins -> Automatic, Method -> "Queued", ImageSize -> 
               200, Appearance -> "Palette", Appearance -> ActionMenu, 
               Alignment -> Automatic, Background -> None, 
               DefaultBaseStyle -> {}, Evaluator -> Automatic],ActionMenuBox[
               ButtonBox[
               "\"\"", ButtonFunction :> Null, 
                Appearance -> {"Default" -> Image[CompressedData["
1:eJzt1r9qg0AcwPEjzZCxY4c69C26duya0gdIiA1dLJiq9DH88xwuPo0oiooi
ioiis70LTUh/zSWh/OzUg4+c8rvvqN4t3+YvE0LIZkYv84X2IMuLj6drevMs
bV7Xkrh6lN7FtSjfL6/ow1vqhpoS7hp+gbt0XR/GcNh3XRcV7Huehwr2fd9H
BftBEKCC/TAMUR30t/soilB99YddP45jVLCfJAkq2E/TFBXsZ1mGCvbzPP/B
tu1BEAQu3jkG9ouiOMowjKPvM0VRuGcY2C/Lkss0zW9tVVVPzjOwX1XVSZZl
bWc1TTs7y8B+XddnOY5z0RwD+03ToIL9tm1RwX7Xdahgv+97VH/YJyP2yX//
sv6Y/1e77zCi/foEAE8RLQ==
                    "], "Byte", ColorSpace -> "RGB", 
                    Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJzt1k1qg0AUwPEh7SLLLrsoQm/RbZfdpuQACbWhGwumoN5DvYcLD+QHfqKi
oi7tTKnFvDhJKM+uOvCTUd78l+r99n31uiCE7Jf0stooj7K80Z5v6M1a2r/t
JPHlSfoQd6L8sL2iD++oW+qacFf/C9xlmmY/h3HfcRxUsO+6LirY9zwPFez7
vo8K9oMgQDXqf+3DMET13e+HfhRFqGA/jmNUsJ8kCSrYT9MUFexnWXbEsqxe
EAQuXdcnzzGwn+f5JNaYep8pisI9w8B+URRchmEctFVVPTnPwH5ZlicN85qm
nZ0dzw/9qqrOsm37ojkG9uu6RgX7TdOggv22bVHBftd1qP6wT2bsk//+Zf05
/6+G7zCin/UJ16Ithg==
                    "], "Byte", ColorSpace -> "RGB", 
                    Interleaving -> True], "Pressed" -> Image[CompressedData["

1:eJzt1r8KgkAcwPGjGhobHVp6i9bGVqMHKPNPi4EFGQ6ib+AL+Bi6uLi4OAiC
IOi7XHdBUb+8ijgjoh98BOV331EdLTei0kEIbfvkIi72E8NYHGYDcjPXt2tV
l1dTfSersjFedsnDISEQPcQc/AbmuK6L23DdD4KAq3//a/q4xT7+lX4YhlzB
fhRFXMF+HMd3PM/DgiAwmabZeI6C/SRJGlmW1fg+kySJeYaC/TRNmWzbvmkr
ivJwn4L9LMsechzntKtp2tNdCvbzPH/K9/2X9ijYL4qCK9gvy5Ir2K+qiivY
r+uaqw/2UYt99O+/1m/z/+r8HeboMkf3O0vJ
                    "], "Byte", 
                    ColorSpace -> "RGB", Interleaving -> True], "Disabled" -> 
                  Image[CompressedData["
1:eJzt1r1qg1AUwPFL26Fjxw5d8hZdO3ZN6QMk1IYuFkyhdPIBnHwYdfZjdnES
RVFRRBFRdLbekJT0JCYhHDv1wE9Uzv2vOpm/T18vCCHL6/4ynX0+cNzs6+mm
f3hml28Llnl5ZD+YBcPdzy/7l3e9294VGZzuDIMjimI3hu2+bduoYN9xHFSw
77ouKtj3PA8V7Pu+j2qrv7oPggDVut9t+mEYooL9KIpQwX4cx6hgP0kSVLCf
pukO0zQ7QRAGqaq69xwF+1mW7aVpWsfz/A5JkgbPULCf5/kgXdd/tWVZPrhP
wX5RFAcZhrFqK4pydJeC/bIsj7Is66Q9CvarqkIF+3Vdo4L9pmlQwX7btqj+
sE9G7JP//mn9Mf+vNt9hRD/zDdI7LNg=
                    "], "Byte", ColorSpace -> 
                    "RGB", Interleaving -> True]}, Evaluator -> Automatic, 
                Method -> "Preemptive"], {
               "\"Symbol Pages\"" :> 
                With[{DocGenPalette`Private`nb = InputNotebook[]}, 
                  DocGenPalette`Private`paletteDialog[
                   
                   With[{DocGenPalette`Private`s = 
                    NotebookRead[DocGenPalette`Private`nb]}, 
                    If[
                    MatchQ[DocGenPalette`Private`s, 
                    PatternTest[
                    Blank[String], StringMatchQ[#, 
                    Alternatives["$", "`", 
                    Repeated[WordCharacter]]]& ]], 
                    
                    Block[{BTools`$DocGenActive = 
                    DocGenPalette`Private`$CurrentProject}, 
                    ToExpression[DocGenPalette`Private`s, StandardForm, 
                    DocGenPalette`Private`whichPacF[
                    "DocGenGenerateSymbolPages"]]], 
                    
                    Block[{BTools`$DocGenActive = 
                    DocGenPalette`Private`$CurrentProject}, 
                    DocGenPalette`Private`whichPacF[
                    "DocGenGenerateSymbolPages"][DocGenPalette`Private`nb]]]],
                    "Generating symbol pages"]], "\"Guide Pages\"" :> 
                With[{DocGenPalette`Private`nb = InputNotebook[]}, 
                  DocGenPalette`Private`paletteDialog[
                   
                   Block[{BTools`$DocGenActive = 
                    DocGenPalette`Private`$CurrentProject}, 
                    DocGenPalette`Private`whichPacF["DocGenGenerateGuide"][
                    DocGenPalette`Private`nb]], "Generating guide pages"]], 
                "\"Tutorial Pages\"" :> 
                With[{DocGenPalette`Private`nb = InputNotebook[]}, 
                  DocGenPalette`Private`paletteDialog[
                   
                   Block[{BTools`$DocGenActive = 
                    DocGenPalette`Private`$CurrentProject}, 
                    DocGenPalette`Private`whichPacF["DocGenGenerateTutorial"][
                    DocGenPalette`Private`nb]], 
                   "Generating tutorial pages"]]}, Appearance -> None, {
               Method -> "Queued"}]},
             "RowDefault"]},
           {
            
            TemplateBox[{
             ButtonBox[
              "\"Generate and Save\"", ButtonFunction :> Null, 
               Appearance -> ("Default" -> Image[CompressedData["
1:eJzN1LEKglAYhuFDNTQ0dAEt3UVrY6vRBRSZtBhoEF2GlyeKoqKIIqLobMdB
+Fz6qqkfngPn8E5n+Nenm3KZCCHMuTyU42NrGMfnfikvB928arp63ul3VVON
zWkqH1fSQpqJ0XRvjMayrO4T2Nu2TWHvOA6Fveu6FPae51HY+75PDf/Y90EQ
UMP/9n0YhhT2URRR2MdxTGGfJAmFfZqmFPZZllHY53lOYV8UBYV9WZYU9lVV
UdjXdU1h3zQNhX3bttSPvfiiF//af7OvyC4c7cQXOc/YKw==
                  "], "Byte",
                   ColorSpace -> "RGB", Interleaving -> True]), 
               Appearance -> {
                "Palette", FrameStyle -> Automatic, 
                 ImagePadding -> {{1, 0}, {1, 1}}}, ImageSize -> 178, 
               FrameMargins -> Automatic, Method -> "Queued", ImageSize -> 
               200, Appearance -> "Palette", Appearance -> ActionMenu, 
               Alignment -> Automatic, Background -> None, 
               DefaultBaseStyle -> {}, Evaluator -> Automatic],ActionMenuBox[
               ButtonBox[
               "\"\"", ButtonFunction :> Null, 
                Appearance -> {"Default" -> Image[CompressedData["
1:eJzt1r9qg0AcwPEjzZCxY4c69C26duya0gdIiA1dLJiq9DH88xwuPo0oiooi
ioiis70LTUh/zSWh/OzUg4+c8rvvqN4t3+YvE0LIZkYv84X2IMuLj6drevMs
bV7Xkrh6lN7FtSjfL6/ow1vqhpoS7hp+gbt0XR/GcNh3XRcV7Huehwr2fd9H
BftBEKCC/TAMUR30t/soilB99YddP45jVLCfJAkq2E/TFBXsZ1mGCvbzPP/B
tu1BEAQu3jkG9ouiOMowjKPvM0VRuGcY2C/Lkss0zW9tVVVPzjOwX1XVSZZl
bWc1TTs7y8B+XddnOY5z0RwD+03ToIL9tm1RwX7Xdahgv+97VH/YJyP2yX//
sv6Y/1e77zCi/foEAE8RLQ==
                    "], "Byte", ColorSpace -> "RGB", 
                    Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJzt1k1qg0AUwPEh7SLLLrsoQm/RbZfdpuQACbWhGwumoN5DvYcLD+QHfqKi
oi7tTKnFvDhJKM+uOvCTUd78l+r99n31uiCE7Jf0stooj7K80Z5v6M1a2r/t
JPHlSfoQd6L8sL2iD++oW+qacFf/C9xlmmY/h3HfcRxUsO+6LirY9zwPFez7
vo8K9oMgQDXqf+3DMET13e+HfhRFqGA/jmNUsJ8kCSrYT9MUFexnWXbEsqxe
EAQuXdcnzzGwn+f5JNaYep8pisI9w8B+URRchmEctFVVPTnPwH5ZlicN85qm
nZ0dzw/9qqrOsm37ojkG9uu6RgX7TdOggv22bVHBftd1qP6wT2bsk//+Zf05
/6+G7zCin/UJ16Ithg==
                    "], "Byte", ColorSpace -> "RGB", 
                    Interleaving -> True], "Pressed" -> Image[CompressedData["

1:eJzt1r8KgkAcwPGjGhobHVp6i9bGVqMHKPNPi4EFGQ6ib+AL+Bi6uLi4OAiC
IOi7XHdBUb+8ijgjoh98BOV331EdLTei0kEIbfvkIi72E8NYHGYDcjPXt2tV
l1dTfSersjFedsnDISEQPcQc/AbmuK6L23DdD4KAq3//a/q4xT7+lX4YhlzB
fhRFXMF+HMd3PM/DgiAwmabZeI6C/SRJGlmW1fg+kySJeYaC/TRNmWzbvmkr
ivJwn4L9LMsechzntKtp2tNdCvbzPH/K9/2X9ijYL4qCK9gvy5Ir2K+qiivY
r+uaqw/2UYt99O+/1m/z/+r8HeboMkf3O0vJ
                    "], "Byte", 
                    ColorSpace -> "RGB", Interleaving -> True], "Disabled" -> 
                  Image[CompressedData["
1:eJzt1r1qg1AUwPFL26Fjxw5d8hZdO3ZN6QMk1IYuFkyhdPIBnHwYdfZjdnES
RVFRRBFRdLbekJT0JCYhHDv1wE9Uzv2vOpm/T18vCCHL6/4ynX0+cNzs6+mm
f3hml28Llnl5ZD+YBcPdzy/7l3e9294VGZzuDIMjimI3hu2+bduoYN9xHFSw
77ouKtj3PA8V7Pu+j2qrv7oPggDVut9t+mEYooL9KIpQwX4cx6hgP0kSVLCf
pukO0zQ7QRAGqaq69xwF+1mW7aVpWsfz/A5JkgbPULCf5/kgXdd/tWVZPrhP
wX5RFAcZhrFqK4pydJeC/bIsj7Is66Q9CvarqkIF+3Vdo4L9pmlQwX7btqj+
sE9G7JP//mn9Mf+vNt9hRD/zDdI7LNg=
                    "], "Byte", ColorSpace -> 
                    "RGB", Interleaving -> True]}, Evaluator -> Automatic, 
                Method -> "Preemptive"], {
               "\"Symbol Pages\"" :> 
                With[{DocGenPalette`Private`nb = InputNotebook[]}, 
                  DocGenPalette`Private`paletteDialog[
                   
                   Block[{BTools`$DocGenActive = 
                    DocGenPalette`Private`$CurrentProject}, Quiet[
                    CreateDirectory[
                    FileNameJoin[{
                    DocGenPalette`Private`docsDirExt["Symbols"]}], 
                    CreateIntermediateDirectories -> True]]; 
                    DocGenPalette`Private`whichPacF["DocGenSaveSymbolPages"][
                    DocGenPalette`Private`nb, 
                    DocGenPalette`Private`docsDir["Symbols"], False]], 
                   "Generating symbol pages"]], "\"Guide Pages\"" :> 
                With[{DocGenPalette`Private`nb = InputNotebook[]}, 
                  DocGenPalette`Private`paletteDialog[
                   
                   Block[{BTools`$DocGenActive = 
                    DocGenPalette`Private`$CurrentProject}, Quiet[
                    CreateDirectory[
                    DocGenPalette`Private`docsDir["Guides"], 
                    CreateIntermediateDirectories -> True]]; 
                    DocGenPalette`Private`whichPacF["DocGenSaveGuide"][
                    DocGenPalette`Private`nb, 
                    DocGenPalette`Private`docsDir["Guides"], False]], 
                   "Generating guide pages"]], "\"Tutorial Pages\"" :> 
                With[{DocGenPalette`Private`nb = InputNotebook[]}, 
                  DocGenPalette`Private`paletteDialog[
                   
                   Block[{BTools`$DocGenActive = 
                    DocGenPalette`Private`$CurrentProject}, 
                    DocGenPalette`Private`whichPacF["DocGenGenerateTutorial"][
                    DocGenPalette`Private`nb, 
                    DocGenPalette`Private`docsDir["Tutorials"], False]], 
                   "Generating tutorial pages"]], Delimiter, 
                "\"Symbol Web Pages\"" :> 
                With[{DocGenPalette`Private`nb = InputNotebook[]}, 
                  DocGenPalette`Private`paletteDialog[
                   SystemOpen[
                    First[
                    Flatten[{
                    
                    With[{DocGenPalette`Private`s = 
                    NotebookRead[DocGenPalette`Private`nb]}, 
                    If[
                    MatchQ[DocGenPalette`Private`s, 
                    PatternTest[
                    Blank[String], StringMatchQ[#, 
                    Alternatives["$", "`", 
                    Repeated[WordCharacter]]]& ]], 
                    
                    Block[{BTools`$DocGenActive = 
                    DocGenPalette`Private`$CurrentProject}, 
                    ToExpression[
                    DocGenPalette`Private`s, StandardForm, 
                    DocGenPalette`Private`whichPacF[
                    "DocGenGenerateSymbolPages"][#, Visible -> False, 
                    "PostFunction" -> Function[DocGenPalette`Private`page, 
                    ((NotebookClose[DocGenPalette`Private`page]; #)& )[
                    DocGenPalette`Private`whichPacF[
                    "GenerateHTMLDocumentation"][
                    DocGenPalette`Private`page, CloudDeploy -> True, 
                    "CopyAssets" -> False]]]]& ]], 
                    
                    Block[{BTools`$DocGenActive = 
                    DocGenPalette`Private`$CurrentProject}, 
                    DocGenPalette`Private`whichPacF[
                    "DocGenGenerateSymbolPages"][
                    DocGenPalette`Private`nb, Visible -> False, 
                    "PostFunction" -> Function[DocGenPalette`Private`page, 
                    ((NotebookClose[DocGenPalette`Private`page]; #)& )[
                    DocGenPalette`Private`whichPacF[
                    "GenerateHTMLDocumentation"][
                    DocGenPalette`Private`page, CloudDeploy -> True, 
                    "CopyAssets" -> False]]]]]]]}]]], 
                   "Generating symbol web pages"]], "\"Guide Web Pages\"" :> 
                With[{DocGenPalette`Private`nb = InputNotebook[]}, 
                  DocGenPalette`Private`paletteDialog[
                   
                   Block[{BTools`$DocGenActive = 
                    DocGenPalette`Private`$CurrentProject, 
                    DocGenPalette`Private`notebooks}, SystemOpen[
                    First[
                    Flatten[{
                    DocGenPalette`Private`whichPacF["DocGenGenerateGuide"][
                    DocGenPalette`Private`nb, Visible -> False, 
                    "PostFunction" -> Function[DocGenPalette`Private`page, 
                    ((NotebookClose[DocGenPalette`Private`page]; #)& )[
                    DocGenPalette`Private`whichPacF[
                    "GenerateHTMLDocumentation"][
                    DocGenPalette`Private`page, CloudDeploy -> True, 
                    "CopyAssets" -> False]]]]}]]]; Null], 
                   "Generating guide web pages"]], "\"Tutorial Web Pages\"" :> 
                With[{DocGenPalette`Private`nb = InputNotebook[]}, 
                  DocGenPalette`Private`paletteDialog[
                   
                   Block[{BTools`$DocGenActive = 
                    DocGenPalette`Private`$CurrentProject, 
                    DocGenPalette`Private`notebooks}, 
                    DocGenPalette`Private`notebooks = 
                    DocGenPalette`Private`whichPacF["DocGenGenerateTutorial"][
                    DocGenPalette`Private`nb, 
                    DocGenPalette`Private`docsDir["Tutorials"], False, 
                    Visible -> False]; ((Map[NotebookClose, 
                    Flatten[{DocGenPalette`Private`notebooks}]]; SystemOpen[
                    First[
                    Flatten[{#}]]])& )[
                    DocGenPalette`Private`whichPacF[
                    "GenerateHTMLDocumentation"][
                    DocGenPalette`Private`notebooks, CloudDeploy -> True, 
                    "CopyAssets" -> False]]], "Generating tutorial pages"]]}, 
               Appearance -> None, {Method -> "Queued"}]},
             "RowDefault"]},
           {
            PanelBox["\<\"\"\>",
             Appearance->Image[CompressedData["
1:eJyF0b0OgjAQB/BGHRx9BRMfwtXRFeMDQETiggmYGJ+rL9XS8lVoC12wJnLT
JVxyd7/7r7ePnsF9RQjJt34E4fuUZeHnsvPHNc0fSRrfzukrTuLsGK19ePD9
2xsCNQF8/e/JOQcex3HRwzCgttaCjTGotdao+74Hd12HWikFbtsWddM04Lqu
UVdVBS7LErWUErUQAlwUBWrO+aIZY7MJpRT+Mmdfqc/QmA==
               "], "Byte", 
               ColorSpace -> "RGB", Interleaving -> True],
             ImageMargins->5,
             ImageSize->{190, 1}]},
           {
            
            TemplateBox[{
             ButtonBox[
              "\"Generate from Selection\"", ButtonFunction :> Null, 
               Appearance -> ("Default" -> Image[CompressedData["
1:eJzN1LEKglAYhuFDNTQ0dAEt3UVrY6vRBRSZtBhoEF2GlyeKoqKIIqLobMdB
+Fz6qqkfngPn8E5n+Nenm3KZCCHMuTyU42NrGMfnfikvB928arp63ul3VVON
zWkqH1fSQpqJ0XRvjMayrO4T2Nu2TWHvOA6Fveu6FPae51HY+75PDf/Y90EQ
UMP/9n0YhhT2URRR2MdxTGGfJAmFfZqmFPZZllHY53lOYV8UBYV9WZYU9lVV
UdjXdU1h3zQNhX3bttSPvfiiF//af7OvyC4c7cQXOc/YKw==
                  "], "Byte",
                   ColorSpace -> "RGB", Interleaving -> True]), 
               Appearance -> {
                "Palette", FrameStyle -> Automatic, 
                 ImagePadding -> {{1, 0}, {1, 1}}}, ImageSize -> 178, 
               FrameMargins -> Automatic, ImageSize -> 200, Appearance -> 
               "Palette", Appearance -> ActionMenu, Alignment -> Automatic, 
               Background -> None, DefaultBaseStyle -> {}, Evaluator -> 
               Automatic, Method -> "Preemptive"],ActionMenuBox[
               ButtonBox[
               "\"\"", ButtonFunction :> Null, 
                Appearance -> {"Default" -> Image[CompressedData["
1:eJzt1r9qg0AcwPEjzZCxY4c69C26duya0gdIiA1dLJiq9DH88xwuPo0oiooi
ioiis70LTUh/zSWh/OzUg4+c8rvvqN4t3+YvE0LIZkYv84X2IMuLj6drevMs
bV7Xkrh6lN7FtSjfL6/ow1vqhpoS7hp+gbt0XR/GcNh3XRcV7Huehwr2fd9H
BftBEKCC/TAMUR30t/soilB99YddP45jVLCfJAkq2E/TFBXsZ1mGCvbzPP/B
tu1BEAQu3jkG9ouiOMowjKPvM0VRuGcY2C/Lkss0zW9tVVVPzjOwX1XVSZZl
bWc1TTs7y8B+XddnOY5z0RwD+03ToIL9tm1RwX7Xdahgv+97VH/YJyP2yX//
sv6Y/1e77zCi/foEAE8RLQ==
                    "], "Byte", ColorSpace -> "RGB", 
                    Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJzt1k1qg0AUwPEh7SLLLrsoQm/RbZfdpuQACbWhGwumoN5DvYcLD+QHfqKi
oi7tTKnFvDhJKM+uOvCTUd78l+r99n31uiCE7Jf0stooj7K80Z5v6M1a2r/t
JPHlSfoQd6L8sL2iD++oW+qacFf/C9xlmmY/h3HfcRxUsO+6LirY9zwPFez7
vo8K9oMgQDXqf+3DMET13e+HfhRFqGA/jmNUsJ8kCSrYT9MUFexnWXbEsqxe
EAQuXdcnzzGwn+f5JNaYep8pisI9w8B+URRchmEctFVVPTnPwH5ZlicN85qm
nZ0dzw/9qqrOsm37ojkG9uu6RgX7TdOggv22bVHBftd1qP6wT2bsk//+Zf05
/6+G7zCin/UJ16Ithg==
                    "], "Byte", ColorSpace -> "RGB", 
                    Interleaving -> True], "Pressed" -> Image[CompressedData["

1:eJzt1r8KgkAcwPGjGhobHVp6i9bGVqMHKPNPi4EFGQ6ib+AL+Bi6uLi4OAiC
IOi7XHdBUb+8ijgjoh98BOV331EdLTei0kEIbfvkIi72E8NYHGYDcjPXt2tV
l1dTfSersjFedsnDISEQPcQc/AbmuK6L23DdD4KAq3//a/q4xT7+lX4YhlzB
fhRFXMF+HMd3PM/DgiAwmabZeI6C/SRJGlmW1fg+kySJeYaC/TRNmWzbvmkr
ivJwn4L9LMsechzntKtp2tNdCvbzPH/K9/2X9ijYL4qCK9gvy5Ir2K+qiivY
r+uaqw/2UYt99O+/1m/z/+r8HeboMkf3O0vJ
                    "], "Byte", 
                    ColorSpace -> "RGB", Interleaving -> True], "Disabled" -> 
                  Image[CompressedData["
1:eJzt1r1qg1AUwPFL26Fjxw5d8hZdO3ZN6QMk1IYuFkyhdPIBnHwYdfZjdnES
RVFRRBFRdLbekJT0JCYhHDv1wE9Uzv2vOpm/T18vCCHL6/4ynX0+cNzs6+mm
f3hml28Llnl5ZD+YBcPdzy/7l3e9294VGZzuDIMjimI3hu2+bduoYN9xHFSw
77ouKtj3PA8V7Pu+j2qrv7oPggDVut9t+mEYooL9KIpQwX4cx6hgP0kSVLCf
pukO0zQ7QRAGqaq69xwF+1mW7aVpWsfz/A5JkgbPULCf5/kgXdd/tWVZPrhP
wX5RFAcZhrFqK4pydJeC/bIsj7Is66Q9CvarqkIF+3Vdo4L9pmlQwX7btqj+
sE9G7JP//mn9Mf+vNt9hRD/zDdI7LNg=
                    "], "Byte", ColorSpace -> 
                    "RGB", Interleaving -> True]}, Evaluator -> Automatic, 
                Method -> "Preemptive"], {"\"Ref Page\"" :> Replace[
                  NotebookRead[
                   InputNotebook[]], {Pattern[DocGenPalette`Private`s, 
                    Blank[String]] :> If[
                    StringEndsQ[DocGenPalette`Private`s, "`"], 
                    DocGenPalette`Private`whichPacF[
                    "DocGenGenerateSymbolPages"][DocGenPalette`Private`s], 
                    ToExpression[DocGenPalette`Private`s, StandardForm, 
                    DocGenPalette`Private`whichPacF[
                    "DocGenGenerateSymbolPages"]]]}], "\"Guide Page\"" :> 
                Replace[
                  NotebookRead[
                   InputNotebook[]], {Pattern[DocGenPalette`Private`s, 
                    Blank[String]] :> 
                   DocGenPalette`Private`whichPacF["DocGenGenerateGuide"][
                    DocGenPalette`Private`s], {} :> 
                   DocGenPalette`Private`whichPacF["DocGenGenerateGuide"][
                    StringJoin[
                    FileBaseName[DocGenPalette`Private`$CurrentProject], 
                    "`"]]}], "\"Docs Paclet\"" :> Replace[
                  NotebookRead[
                   InputNotebook[]], {Pattern[DocGenPalette`Private`s, 
                    Blank[String]] :> 
                   DocGenPalette`Private`whichPacF[
                    "DocGenGenerateDocumentation"][
                    DocGenPalette`Private`s], {} :> 
                   DocGenPalette`Private`whichPacF[
                    "DocGenGenerateDocumentation"][
                    StringJoin[
                    FileBaseName[DocGenPalette`Private`$CurrentProject], 
                    "`"]]}], Delimiter, "\"Ref Page HTML\"" :> Replace[
                  NotebookRead[
                   InputNotebook[]], Pattern[DocGenPalette`Private`s, 
                    Blank[String]] :> With[{DocGenPalette`Private`pages = If[
                    StringEndsQ[DocGenPalette`Private`s, "`"], 
                    DocGenPalette`Private`whichPacF[
                    "DocGenGenerateSymbolPages"][
                    DocGenPalette`Private`s, Visible -> False], 
                    ToExpression[DocGenPalette`Private`s, StandardForm, 
                    Function[Null, 
                    DocGenPalette`Private`whichPacF[
                    "DocGenGenerateSymbolPages"][#, Visible -> False], 
                    HoldFirst]]]}, 
                    SystemOpen[
                    First[
                    Flatten[{
                    DocGenPalette`Private`whichPacF[
                    "GenerateHTMLDocumentation"][
                    DocGenPalette`Private`s, CloudDeploy -> True, 
                    "CopyAssets" -> False]}]]]]], "\"Paclet HTML\"" :> Replace[
                  NotebookRead[
                   InputNotebook[]], Pattern[DocGenPalette`Private`s, 
                    Blank[String]] :> Replace[
                    Lookup[
                    DocGenPalette`Private`whichPacF[
                    "DocGenGenerateDocumentation"][
                    DocGenPalette`Private`s, False, CloudDeploy -> 
                    TrueQ[DocGenPalette`Private`$cloudDeployFlag], 
                    "CopyAssets" -> 
                    TrueQ[DocGenPalette`Private`$deployAssestsFlag]], 
                    "HTML"], {
                    BlankNullSequence[], 
                    Pattern[DocGenPalette`Private`c, 
                    Blank[CloudObject]], 
                    BlankNullSequence[]} :> 
                    SystemOpen[DocGenPalette`Private`c]]]}, Appearance -> 
               None, {}]},
             "RowDefault"]},
           {
            DynamicBox[ToBoxes[
              Insert[
               ReplaceAll[
                Insert[
                 Row[{
                   Button[
                   "Context Guides", Null, 
                    Appearance -> ("Default" -> Image[CompressedData["
1:eJzN1LEKglAYhuFDNTQ0dAEt3UVrY6vRBRSZtBhoEF2GlyeKoqKIIqLobMdB
+Fz6qqkfngPn8E5n+Nenm3KZCCHMuTyU42NrGMfnfikvB928arp63ul3VVON
zWkqH1fSQpqJ0XRvjMayrO4T2Nu2TWHvOA6Fveu6FPae51HY+75PDf/Y90EQ
UMP/9n0YhhT2URRR2MdxTGGfJAmFfZqmFPZZllHY53lOYV8UBYV9WZYU9lVV
UdjXdU1h3zQNhX3bttSPvfiiF//af7OvyC4c7cQXOc/YKw==
                    "], 
                    "Byte", ColorSpace -> "RGB", Interleaving -> True]), {
                    Appearance -> {
                    "Palette", FrameStyle -> Automatic, 
                    ImagePadding -> {{1, 0}, {1, 1}}}, ImageSize -> 178, 
                    FrameMargins -> Automatic, ImageSize -> 200, Appearance -> 
                    "Palette", Appearance -> ActionMenu, Alignment -> 
                    Automatic, Background -> None, DefaultBaseStyle -> {}}], 
                   ActionMenu[
                    Button[
                    "", Null, 
                    Appearance -> {"Default" -> Image[CompressedData["
1:eJzt1r9qg0AcwPEjzZCxY4c69C26duya0gdIiA1dLJiq9DH88xwuPo0oiooi
ioiis70LTUh/zSWh/OzUg4+c8rvvqN4t3+YvE0LIZkYv84X2IMuLj6drevMs
bV7Xkrh6lN7FtSjfL6/ow1vqhpoS7hp+gbt0XR/GcNh3XRcV7Huehwr2fd9H
BftBEKCC/TAMUR30t/soilB99YddP45jVLCfJAkq2E/TFBXsZ1mGCvbzPP/B
tu1BEAQu3jkG9ouiOMowjKPvM0VRuGcY2C/Lkss0zW9tVVVPzjOwX1XVSZZl
bWc1TTs7y8B+XddnOY5z0RwD+03ToIL9tm1RwX7Xdahgv+97VH/YJyP2yX//
sv6Y/1e77zCi/foEAE8RLQ==
                    "], "Byte", ColorSpace -> "RGB", 
                    Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJzt1k1qg0AUwPEh7SLLLrsoQm/RbZfdpuQACbWhGwumoN5DvYcLD+QHfqKi
oi7tTKnFvDhJKM+uOvCTUd78l+r99n31uiCE7Jf0stooj7K80Z5v6M1a2r/t
JPHlSfoQd6L8sL2iD++oW+qacFf/C9xlmmY/h3HfcRxUsO+6LirY9zwPFez7
vo8K9oMgQDXqf+3DMET13e+HfhRFqGA/jmNUsJ8kCSrYT9MUFexnWXbEsqxe
EAQuXdcnzzGwn+f5JNaYep8pisI9w8B+URRchmEctFVVPTnPwH5ZlicN85qm
nZ0dzw/9qqrOsm37ojkG9uu6RgX7TdOggv22bVHBftd1qP6wT2bsk//+Zf05
/6+G7zCin/UJ16Ithg==
                    "], "Byte", ColorSpace -> "RGB", 
                    Interleaving -> True], "Pressed" -> Image[CompressedData["

1:eJzt1r8KgkAcwPGjGhobHVp6i9bGVqMHKPNPi4EFGQ6ib+AL+Bi6uLi4OAiC
IOi7XHdBUb+8ijgjoh98BOV331EdLTei0kEIbfvkIi72E8NYHGYDcjPXt2tV
l1dTfSersjFedsnDISEQPcQc/AbmuK6L23DdD4KAq3//a/q4xT7+lX4YhlzB
fhRFXMF+HMd3PM/DgiAwmabZeI6C/SRJGlmW1fg+kySJeYaC/TRNmWzbvmkr
ivJwn4L9LMsechzntKtp2tNdCvbzPH/K9/2X9ijYL4qCK9gvy5Ir2K+qiivY
r+uaqw/2UYt99O+/1m/z/+r8HeboMkf3O0vJ
                    "], "Byte", 
                    ColorSpace -> "RGB", Interleaving -> True], "Disabled" -> 
                    Image[CompressedData["
1:eJzt1r1qg1AUwPFL26Fjxw5d8hZdO3ZN6QMk1IYuFkyhdPIBnHwYdfZjdnES
RVFRRBFRdLbekJT0JCYhHDv1wE9Uzv2vOpm/T18vCCHL6/4ynX0+cNzs6+mm
f3hml28Llnl5ZD+YBcPdzy/7l3e9294VGZzuDIMjimI3hu2+bduoYN9xHFSw
77ouKtj3PA8V7Pu+j2qrv7oPggDVut9t+mEYooL9KIpQwX4cx6hgP0kSVLCf
pukO0zQ7QRAGqaq69xwF+1mW7aVpWsfz/A5JkgbPULCf5/kgXdd/tWVZPrhP
wX5RFAcZhrFqK4pydJeC/bIsj7Is66Q9CvarqkIF+3Vdo4L9pmlQwX7btqj+
sE9G7JP//mn9Mf+vNt9hRD/zDdI7LNg=
                    "], "Byte", ColorSpace -> 
                    "RGB", Interleaving -> True]}], {"Label" :> "Result"}, 
                    Appearance -> None, {}]}, {}], 
                 
                 FilterRules[{
                  Method -> "Queued", 
                   TrackedSymbols :> {DocGenPalette`Private`$CurrentProject}}, 
                  Options[ActionMenu]], {1, 2, -1}], {
                 "Label" :> "Result"} -> {
                 "Guide Template" :> DocGenPalette`Private`paletteDialog[
                    
                    With[{DocGenPalette`Private`docs = 
                    DocGenPalette`Private`whichPacF["GuideContextTemplate"][
                    DocGenPalette`Private`docsPackageContexts[
                    DocGenPalette`Private`$CurrentProject]]}, 
                    CreateDocument[DocGenPalette`Private`docs]], 
                    "Creating guide template"], Delimiter, "Save Guide" :> 
                  DocGenPalette`Private`paletteDialog[
                    With[{DocGenPalette`Private`nb = CreateDocument[
                    DocGenPalette`Private`whichPacF["GuideContextTemplate"][
                    DocGenPalette`Private`docsPackageContexts[
                    DocGenPalette`Private`$CurrentProject]], Visible -> 
                    False]}, 
                    DocGenPalette`Private`whichPacF["DocGenSaveGuide"][
                    DocGenPalette`Private`nb, 
                    DocGenPalette`Private`docsDir["Guides"], False]; 
                    NotebookClose[DocGenPalette`Private`nb]], 
                    "Creating guide page"]}], 
               
               FilterRules[{
                Method -> "Queued", 
                 TrackedSymbols :> {DocGenPalette`Private`$CurrentProject}}, 
                Options[Button]], {1, 1, -1}], StandardForm], {
             TrackedSymbols :> {DocGenPalette`Private`$CurrentProject}},
             ImageSizeCache->{200., {8., 19.}}]},
           {
            TagBox[GridBox[{
               {
                
                CheckboxBox[Dynamic[
                 DocGenPalette`Private`$cloudDeployFlag = CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "CloudDeployDocs"}, 
                    True], (
                  DocGenPalette`Private`$cloudDeployFlag = (CurrentValue[
                    EvaluationNotebook[], {
                    TaggingRules, "CloudDeployDocs"}] = #))& ]], 
                StyleBox["\<\"Cloud Deploy\"\>",
                 StripOnInput->False,
                 LineColor->GrayLevel[0.5],
                 FrontFaceColor->GrayLevel[0.5],
                 BackFaceColor->GrayLevel[0.5],
                 GraphicsColor->GrayLevel[0.5],
                 FontColor->GrayLevel[0.5]]},
               {
                
                CheckboxBox[Dynamic[
                 DocGenPalette`Private`$deployAssestsFlag = CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "CloudDeployAssets"},
                     False], (
                  DocGenPalette`Private`$deployAssestsFlag = (CurrentValue[
                    EvaluationNotebook[], {
                    TaggingRules, "CloudDeployAssets"}] = #))& ]], 
                StyleBox["\<\"Deploy Assets\"\>",
                 StripOnInput->False,
                 LineColor->GrayLevel[0.5],
                 FrontFaceColor->GrayLevel[0.5],
                 BackFaceColor->GrayLevel[0.5],
                 GraphicsColor->GrayLevel[0.5],
                 FontColor->GrayLevel[0.5]]}
              },
              AutoDelete->False,
              GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Bottom}}},
              
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
             "Grid"]},
           {
            PanelBox["\<\"\"\>",
             Appearance->Image[CompressedData["
1:eJyF0b0OgjAQB/BGHRx9BRMfwtXRFeMDQETiggmYGJ+rL9XS8lVoC12wJnLT
JVxyd7/7r7ePnsF9RQjJt34E4fuUZeHnsvPHNc0fSRrfzukrTuLsGK19ePD9
2xsCNQF8/e/JOQcex3HRwzCgttaCjTGotdao+74Hd12HWikFbtsWddM04Lqu
UVdVBS7LErWUErUQAlwUBWrO+aIZY7MJpRT+Mmdfqc/QmA==
               "], "Byte", 
               ColorSpace -> "RGB", Interleaving -> True],
             ImageMargins->5,
             ImageSize->{190, 1}]},
           {
            TagBox[
             ButtonBox[
              StyleBox["\<\"Index Documentation\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[0.2],
               FrontFaceColor->GrayLevel[0.2],
               BackFaceColor->GrayLevel[0.2],
               GraphicsColor->GrayLevel[0.2],
               FontColor->GrayLevel[0.2]],
              Appearance->{"Default" -> Image[CompressedData["
1:eJzV1EEKgkAYhuGhWrQJOkCbbtG2ZduiAyhZtDGwIDqKRxNFUVFEEVF0bUMU
5NfiS1r1wzvMDDzbf66e1vuBEOI8lsdauS4NQ7ltpvKx1c/Hg67tVvpFO2jG
Qh3Kz5lsIhuJzrSkzpim2X7bu7Esi4bGtm0aGsdxaGhc16Wh8TyP9mYed9/3
aU/TvkwQBDQ0YRjS0ERRREMTxzENTZIkNDRpmtLQZFlGQ5PnOQ1NURQ0NGVZ
0tBUVUVDU9c1DU3TNLQfjehpxD+YnjuR7dyPHXwHy1co2w==
                  "], "Byte",
                   ColorSpace -> "RGB", Interleaving -> True], "Hover" -> 
                Image[CompressedData["
1:eJzV1E0KgkAYxvGhWrQJOkCbbtG2ZduiAyhZtDGwIDqKx/MDP1FRUZc2REE+
LZ6kVS/8h5mB3/adq6f1fiCEOI/lsVauS8NQbpupfGz18/Gga7uVftEOmrFQ
h/JzJpvIRqIzLakzpmm23/ZuLMuiobFtm4bGcRwaGtd1aWg8z6O9mcfd933a
07QvEwQBDU0YhjQ0URTR0MRxTEOTJAkNTZqmNDRZltHQ5HlOQ1MUBQ1NWZY0
NFVV0dDUdU1D0zQN7UcjehrxD6bnTmQ792MH3wFFhzOd
                  "], "Byte", 
                  ColorSpace -> "RGB", Interleaving -> True], "Pressed" -> 
                Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAGiHmBmIUBBfwngFHAzJkz/xOLkfVs27aNIB7Gev6TqOc/vfVs376dIEbX
s2fPHoIYXc/BgwcJYnQ9x44dI4jR9Zw+fZogRtdz/vx5ghhdz6VLlwhidD1X
r14liNH13LhxgyBG13P79m2CGF3PnTt3CGIK9TCQqIdhKOghsUwkVOZilMEA
mEXTyg==
                  "], "Byte", ColorSpace -> "RGB", Interleaving -> 
                  True], 
                Dynamic[
                 If[
                  TrueQ[
                   BTools`Private`UUIDActive[
                   "Button-2d535cd3-37b3-4b97-9b6a-e94c20c2c059"]], "Pressed",
                   Automatic]]},
              ButtonFunction:>(CheckAll[Block[{$ContextPath = {"System`"}}, 
                   Needs[
                    StringJoin[DocGenPalette`Private`$AppName, "`"]]]; 
                 DocGenPalette`Private`paletteDialog[
                   DocGenPalette`Private`whichPacF[
                   "DocGenIndexDocumentation"][
                   DocGenPalette`Private`$CurrentProject], 
                   "Indexing documentation"], 
                 BTools`Private`UUIDActive[
                  "Button-2d535cd3-37b3-4b97-9b6a-e94c20c2c059"] = False]; 
               BTools`Private`UUIDActive[
                 "Button-2d535cd3-37b3-4b97-9b6a-e94c20c2c059"] = False),
              Evaluator->Automatic,
              FrameMargins->{{5, 5}, {2, 0}},
              ImageSize->200,
              Method->"Queued"],
             EventHandlerTag[{"MouseClicked" :> If[
                 TrueQ[
                  Replace[
                   Replace[Automatic, Pattern[BTools`Private`Package`d, 
                    Blank[Dynamic]] :> First[BTools`Private`Package`d]], 
                   Automatic -> True]], 
                 BTools`Private`UUIDActive[
                  "Button-2d535cd3-37b3-4b97-9b6a-e94c20c2c059"] = True], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]]}
          },
          DefaultBaseStyle->"Column",
          GridBoxAlignment->{"Columns" -> {{Left}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{0}}}],
         "Column"],
        Alignment->{Left, Top},
        Background->GrayLevel[0.9],
        FrameMargins->{{None, None}, {None, 5}},
        FrameStyle->GrayLevel[0.8],
        ImageSize->{Automatic, 
          Dynamic[
           (Part[#, 2, 2] - Part[#, 2, 1] - (80 + 48 + 30)& )[
            CurrentValue[ScreenRectangle]]]},
        StripOnInput->False]},
      {
       PaneBox[
        TagBox[GridBox[{
           {
            PanelBox["\<\"\"\>",
             Appearance->Image[CompressedData["
1:eJyF0b0OgjAQB/BGHRx9BRMfwtXRFeMDQETiggmYGJ+rL9XS8lVoC12wJnLT
JVxyd7/7r7ePnsF9RQjJt34E4fuUZeHnsvPHNc0fSRrfzukrTuLsGK19ePD9
2xsCNQF8/e/JOQcex3HRwzCgttaCjTGotdao+74Hd12HWikFbtsWddM04Lqu
UVdVBS7LErWUErUQAlwUBWrO+aIZY7MJpRT+Mmdfqc/QmA==
               "], "Byte", 
               ColorSpace -> "RGB", Interleaving -> True],
             ImageSize->{200, 1}]},
           {
            TagBox[
             ButtonBox[
              StyleBox["\<\"New Paclet\"\>",
               StripOnInput->False,
               LineColor->GrayLevel[0.2],
               FrontFaceColor->GrayLevel[0.2],
               BackFaceColor->GrayLevel[0.2],
               GraphicsColor->GrayLevel[0.2],
               FontColor->GrayLevel[0.2]],
              Appearance->{"Default" -> Image[CompressedData["
1:eJzV1EEKgkAYhuGhWrQJOkCbbtG2ZduiAyhZtDGwIDqKRxNFUVFEEVF0bUMU
5NfiS1r1wzvMDDzbf66e1vuBEOI8lsdauS4NQ7ltpvKx1c/Hg67tVvpFO2jG
Qh3Kz5lsIhuJzrSkzpim2X7bu7Esi4bGtm0aGsdxaGhc16Wh8TyP9mYed9/3
aU/TvkwQBDQ0YRjS0ERRREMTxzENTZIkNDRpmtLQZFlGQ5PnOQ1NURQ0NGVZ
0tBUVUVDU9c1DU3TNLQfjehpxD+YnjuR7dyPHXwHy1co2w==
                  "], "Byte",
                   ColorSpace -> "RGB", Interleaving -> True], "Hover" -> 
                Image[CompressedData["
1:eJzV1E0KgkAYxvGhWrQJOkCbbtG2ZduiAyhZtDGwIDqKx/MDP1FRUZc2REE+
LZ6kVS/8h5mB3/adq6f1fiCEOI/lsVauS8NQbpupfGz18/Gga7uVftEOmrFQ
h/JzJpvIRqIzLakzpmm23/ZuLMuiobFtm4bGcRwaGtd1aWg8z6O9mcfd933a
07QvEwQBDU0YhjQ0URTR0MRxTEOTJAkNTZqmNDRZltHQ5HlOQ1MUBQ1NWZY0
NFVV0dDUdU1D0zQN7UcjehrxD6bnTmQ792MH3wFFhzOd
                  "], "Byte", 
                  ColorSpace -> "RGB", Interleaving -> True], "Pressed" -> 
                Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAGiHmBmIUBBfwngFHAzJkz/xOLkfVs27aNIB7Gev6TqOc/vfVs376dIEbX
s2fPHoIYXc/BgwcJYnQ9x44dI4jR9Zw+fZogRtdz/vx5ghhdz6VLlwhidD1X
r14liNH13LhxgyBG13P79m2CGF3PnTt3CGIK9TCQqIdhKOghsUwkVOZilMEA
mEXTyg==
                  "], "Byte", ColorSpace -> "RGB", Interleaving -> 
                  True], 
                Dynamic[
                 If[
                  TrueQ[
                   BTools`Private`UUIDActive[
                   "Button-cccaaa8a-0920-4735-8f05-b765c5f301ca"]], "Pressed",
                   Automatic]]},
              ButtonFunction:>(CheckAll[Block[{$ContextPath = {"System`"}}, 
                   Needs[
                    StringJoin[DocGenPalette`Private`$AppName, "`"]]]; Replace[
                   DialogInput[{DocGenPalette`Private`name}, 
                    Column[{"Provide a name for the paclet:", 
                    InputField[
                    Dynamic[DocGenPalette`Private`name], String, BoxID -> 
                    "paclet-name"], 
                    Row[{
                    DefaultButton["OK", 
                    DialogReturn[DocGenPalette`Private`name]], 
                    CancelButton[]}]}], NotebookDynamicExpression :> Refresh[
                    FrontEnd`MoveCursorToInputField[
                    EvaluationNotebook[], "paclet-name"], None]], 
                   PatternTest[
                    Pattern[DocGenPalette`Private`s, 
                    Blank[String]], StringLength[#] > 0& ] :> 
                   With[{DocGenPalette`Private`d = FileNameJoin[{
                    DocGenPalette`Private`GetProjectDirectory[], 
                    StringDelete[DocGenPalette`Private`s, 
                    Except[
                    Alternatives[WordCharacter, "`"]]]}]}, If[
                    Not[
                    DirectoryQ[DocGenPalette`Private`d]], 
                    CreateDirectory[DocGenPalette`Private`d]; 
                    DocGenPalette`Private`exportPacletInfo[
                    DocGenPalette`Private`d]; 
                    DocGenPalette`Private`exportDocInfo[
                    DocGenPalette`Private`d]]; 
                    DocGenPalette`Private`GetProjectList[]]], 
                 BTools`Private`UUIDActive[
                  "Button-cccaaa8a-0920-4735-8f05-b765c5f301ca"] = False]; 
               BTools`Private`UUIDActive[
                 "Button-cccaaa8a-0920-4735-8f05-b765c5f301ca"] = False),
              Evaluator->Automatic,
              FrameMargins->{{5, 5}, {2, 0}},
              ImageSize->200,
              Method->"Queued"],
             EventHandlerTag[{"MouseClicked" :> If[
                 TrueQ[
                  Replace[
                   Replace[Automatic, Pattern[BTools`Private`Package`d, 
                    Blank[Dynamic]] :> First[BTools`Private`Package`d]], 
                   Automatic -> True]], 
                 BTools`Private`UUIDActive[
                  "Button-cccaaa8a-0920-4735-8f05-b765c5f301ca"] = True], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]]}
          },
          DefaultBaseStyle->"Column",
          GridBoxAlignment->{"Columns" -> {{Center}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{0}}}],
         "Column"],
        Alignment->{Center, Top},
        ImageSize->{Automatic, 48}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {Left}, "Rows" -> {Top, Bottom}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
     GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{0}}}],
    "Column"],
   ImageSize->{Automatic, 
     Scaled[1]}], {
  If[DownValues[DocGenPalette`Private`GetAppName] == {}, 
     DownValues[DocGenPalette`Private`GetAppName] = {HoldPattern[
         DocGenPalette`Private`GetAppName[]] :> (
        DocGenPalette`Private`$AppName = 
        With[{DocGenPalette`Private`dir = NotebookDirectory[]}, 
          Replace[
           FileNameSplit[DocGenPalette`Private`dir], {{
              BlankNullSequence[], 
              Pattern[DocGenPalette`Private`d, 
               Blank[]], "FrontEnd", "Palettes", 
              BlankNullSequence[]} :> First[
              StringSplit[DocGenPalette`Private`d, "-", 2]], {
              BlankNullSequence[], 
              Pattern[DocGenPalette`Private`d, 
               Blank[]], "Private", "Misc", 
              BlankNullSequence[]} :> First[
              StringSplit[DocGenPalette`Private`d, "-", 2]], 
            Blank[] :> (Needs["BTools`"]; 
             BTools`AppFromFile[Automatic])}]])}]; If[
     Not[
      StringQ[DocGenPalette`Private`$AppName]], 
     DocGenPalette`Private`GetAppName[]]; 
   Block[{$ContextPath = {"System`"}}, 
     Needs[
      StringJoin[DocGenPalette`Private`$AppName, "`"]]]; 
   If[DownValues[DocGenPalette`Private`GetProjectDirectory] == {}, 
     DownValues[DocGenPalette`Private`GetProjectDirectory] = {HoldPattern[
         DocGenPalette`Private`GetProjectDirectory[]] :> (
        DocGenPalette`Private`$ProjectDirectory = 
         DocGenPalette`Private`whichPacF["$DocGenDirectory"]; If[
          Not[
           DirectoryQ[DocGenPalette`Private`$ProjectDirectory]], 
          CreateDirectory[DocGenPalette`Private`$ProjectDirectory]]; 
        DocGenPalette`Private`$ProjectDirectory)}]; 
   DocGenPalette`Private`GetProjectDirectory[]; 
   If[DownValues[DocGenPalette`Private`GetProjectList] == {}, 
     DownValues[DocGenPalette`Private`GetProjectList] = {HoldPattern[
         DocGenPalette`Private`GetProjectList[]] :> (
        DocGenPalette`Private`$ProjectList = Select[
           FileNames[DocGenPalette`Private`$FileNamesPattern, 
            DocGenPalette`Private`GetProjectDirectory[]], 
           DocGenPalette`Private`$FileNamesSelector]; If[
          Not[
           StringQ[DocGenPalette`Private`$CurrentProject]], 
          DocGenPalette`Private`$CurrentProject = 
          First[DocGenPalette`Private`$ProjectList]]; 
        DocGenPalette`Private`$ProjectList)}]; 
   DocGenPalette`Private`GetProjectList[]; 
   DownValues[DocGenPalette`Private`whichPacF] = {HoldPattern[
        DocGenPalette`Private`whichPacF[
         Pattern[DocGenPalette`Private`s, 
          Blank[]], 
         Optional[
          Pattern[DocGenPalette`Private`h, 
           Blank[]], Identity]]] :> Which[Length[
          DownValues[BTools`Private`Package`PackageFilePath]] > 0, 
        DocGenPalette`Private`undefF[
        DocGenPalette`Private`s, DocGenPalette`Private`h, "BTools"], Length[
          DownValues[
           Evaluate[
            ToExpression[
             StringJoin[
             DocGenPalette`Private`$AppName, 
              "`Private`Package`PackageFilePath"]]]]] > 0, 
        DocGenPalette`Private`undefF[
        DocGenPalette`Private`s, DocGenPalette`Private`h, 
         DocGenPalette`Private`$AppName], True, 
        DocGenPalette`Private`undefF[
        DocGenPalette`Private`s, DocGenPalette`Private`h]]}; 
   DownValues[DocGenPalette`Private`undefF] = {HoldPattern[
        DocGenPalette`Private`undefF[
         Pattern[DocGenPalette`Private`s, 
          Blank[]], 
         Optional[
          Pattern[DocGenPalette`Private`h, 
           Blank[]], Identity], 
         Optional[
          Pattern[DocGenPalette`Private`c, 
           Blank[]], "*"]]] :> Replace[
        Join[
         Names[
          StringJoin[DocGenPalette`Private`c, "`", DocGenPalette`Private`s]], 
         
         Names[
          StringJoin[
          DocGenPalette`Private`c, "`*`", DocGenPalette`Private`s]], 
         Names[
          StringJoin[
          DocGenPalette`Private`c, "`*`*`", DocGenPalette`Private`s]]], 
        Pattern[DocGenPalette`Private`f, {
           BlankNullSequence[]}] :> ToExpression[
          SelectFirst[DocGenPalette`Private`f, ToExpression[#, StandardForm, 
            Function[Null, Length[
               Join[
                OwnValues[#], 
                DownValues[#], 
                UpValues[#], 
                SubValues[#]]] > 0, HoldAllComplete]]& , 
           Part[DocGenPalette`Private`f, 1]], StandardForm, 
          DocGenPalette`Private`h]]}; 
   DownValues[DocGenPalette`Private`sysOpen] = {}; 
   DownValues[DocGenPalette`Private`fileNamesGather] = {HoldPattern[
        DocGenPalette`Private`fileNamesGather[
         Pattern[DocGenPalette`Private`pat, 
          Blank[]], {
          Pattern[DocGenPalette`Private`pathSpec, 
           BlankNullSequence[]]}]] :> 
      With[{DocGenPalette`Private`path = {DocGenPalette`Private`pathSpec}, 
         DocGenPalette`Private`dir = DocGenPalette`Private`$CurrentProject}, 
        Flatten[
         Riffle[
          (GatherBy[#, FileNameTake[
            FileNameDrop[
             FileNameDrop[#, 
              FileNameDepth[DocGenPalette`Private`dir]]], 1]& ]& )[
           SortBy[FileNameDepth[#] + 30 Boole[
               StringContainsQ[#, 
                StringExpression["__", 
                 Repeated[
                  Alternatives[WordCharacter, " ", "$"]], "__"]]]& ][
            Select[Or[
              StringContainsQ[
               StringTrim[#, DocGenPalette`Private`dir], "__Future__"], 
              Not[
               StringContainsQ[
                StringTrim[#, DocGenPalette`Private`dir], 
                StringExpression["__", 
                 Repeated[
                  Alternatives[WordCharacter, " ", "$"]], "__"]]]]& ][
             FileNames[
              Alternatives["*.nb", "*.m", "*.wl"], 
              
              FileNameJoin[{
               DocGenPalette`Private`$CurrentProject, 
                DocGenPalette`Private`pathSpec}], Infinity]]]], Delimiter]]]}; 
   DownValues[DocGenPalette`Private`docsDir] = {HoldPattern[
        DocGenPalette`Private`docsDir[
         Pattern[DocGenPalette`Private`p, 
          Blank[]]]] :> FileNameJoin[
        Flatten[{DocGenPalette`Private`$CurrentProject, 
          DocGenPalette`Private`docsDirExt[DocGenPalette`Private`p]}]]}; 
   DownValues[DocGenPalette`Private`docsDirExt] = {HoldPattern[
        DocGenPalette`Private`docsDirExt[
         Pattern[DocGenPalette`Private`p, 
          Blank[]]]] :> Flatten[{"Documentation", $Language, 
         Replace[
         DocGenPalette`Private`p, {
          "Symbols" -> {"ReferencePages", "Symbols"}, 
           "Messages" -> {"ReferencePages", "Messages"}}]}]}; 
   DownValues[DocGenPalette`Private`docsPackageContext] = {}; 
   DownValues[DocGenPalette`Private`docsOptions] = {HoldPattern[
        DocGenPalette`Private`docsOptions[]] :> 
      With[{DocGenPalette`Private`f = 
         FileNameJoin[{DocGenPalette`Private`$CurrentProject, "DocInfo.wl"}]}, 
        If[
         FileExistsQ[DocGenPalette`Private`f], 
         Replace[
          Normal[
           Import[DocGenPalette`Private`f]], Except[
            PatternTest[
             Blank[], OptionQ]] :> {}], {}]]}; 
   DownValues[DocGenPalette`Private`exportDocInfo] = {HoldPattern[
        DocGenPalette`Private`exportDocInfo[
         Pattern[DocGenPalette`Private`d, 
          Blank[]]]] :> 
      With[{DocGenPalette`Private`f = 
         FileNameJoin[{DocGenPalette`Private`d, "DocInfo.wl"}]}, If[
          Not[
           FileExistsQ[DocGenPalette`Private`f]], 
          Export[
          DocGenPalette`Private`f, {
           "Usage" -> Automatic, "Functions" -> Automatic, "Details" -> 
            Automatic, "Examples" -> Defer, "RelatedLinks" -> None, 
            "GuideOptions" -> {}, "TutorialOptions" -> {}, 
            "DeployOptions" -> {CloudConnect -> "DocumentationAccount"}}]]; 
        DocGenPalette`Private`f]}; 
   DownValues[DocGenPalette`Private`exportPacletInfo] = {HoldPattern[
        DocGenPalette`Private`exportPacletInfo[
         Pattern[DocGenPalette`Private`d, 
          Blank[]]]] :> 
      With[{DocGenPalette`Private`f = 
         FileNameJoin[{DocGenPalette`Private`d, "PacletInfo.m"}]}, If[
          Not[
           FileExistsQ[DocGenPalette`Private`f]], 
          BTools`PacletInfoGenerate[
          DocGenPalette`Private`d, "Name" -> "", "Version" -> 0, 
           "Kernel" -> {"Root" -> ".", "Context" -> {
               StringJoin[
                StringDelete[
                 FileBaseName[DocGenPalette`Private`d], 
                 Except[
                  Alternatives[WordCharacter, "`"]]], "`"]}}]]; 
        SystemOpen[DocGenPalette`Private`f]]}},
  ImageSizeCache->{220., {430., 436.}}]],
 CellMargins->{{0, 0}, {0, 0}},
 CellBracketOptions->{"Color"->RGBColor[0.269993, 0.308507, 0.6]},
 CellHorizontalScrolling->True,
 PageBreakAbove->True,
 PageBreakWithin->False,
 ShowAutoStyles->True,
 LineSpacing->{1.25, 0},
 AutoItalicWords->{},
 ScriptMinSize->9,
 ShowStringCharacters->False,
 FontFamily:>CurrentValue["PanelFontFamily"],
 FontSize:>CurrentValue[
  "PanelFontSize"],ExpressionUUID->"47125e08-fea7-45c8-bc6d-03781ebe8912"]
},
WindowSize->{All, 
  Scaled[1]},
WindowMargins->{{Automatic, 0}, {0, 0}},
WindowElements->{"StatusArea"},
WindowTitle->"Doc Gen",
TaggingRules->{"CloudDeployDocs" -> True, "CloudDeployAssets" -> False},
FrontEndVersion->"11.2 for Mac OS X x86 (32-bit, 64-bit Kernel) (September \
10, 2017)",
StyleDefinitions->"Palette.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[580, 21, 88014, 1750, 868, InheritFromParent,ExpressionUUID->"47125e08-fea7-45c8-bc6d-03781ebe8912",
 PageBreakAbove->True,
 PageBreakWithin->False]
}
]
*)

(* End of internal cache information *)

