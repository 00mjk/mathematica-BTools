(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



$SyntaxHighlightingStyles::usage="List of styles that can be used";


$SHPunctuation::usage="List of punctuation to color";
$SHFormattingHeads::usage="List of formatting heads to color";
$SHConstants::usage="List of constants to color";
$SHTypes::usage="List of types to color";
$SHCommands::usage="List of commands to color";
$SHFunctions::usage="List of functions to color";
$SHContextStyling::usage="List of contexts and styles to apply";


SHApplyStyling::usage=
	"Applies syntax coloring to a cell or cell style";
SHClearStyling::usage=
	"Removes syntax coloring from a cell or cell style";
SHStylesheet::usage=
	"Uses SSTemplate to make a template for stylesheet editing";


Begin["`Private`"];


$SyntaxHighlightingStyles={
	"CodeStyle","CommandStyle","TypeStyle",
	"FormattingHeadStyle","ConstantStyle","FunctionStyle",
	"StringStyle","CommentStyle","UndefinedSymbolStyle",
	"SystemStyle","GlobalStyle","PrivateStyle","OperatorStyle",
	"UnstyledStyle","EmphasizedSyntaxErrorStyle","ExcessArgumentStyle",
	"FormattingErrorStyle","GlobalToLocalScopeConflictStyle",
	"GraphicsCompatibilityProblemStyle","LocalScopeConflictStyle",
	"LocalVariableStyle","FunctionLocalVariableStyle","MissingArgumentStyle",
	"MissingArgumentTemplateStyle","SyntaxErrorStyle","MisspelledWordStyle",
	"NoKernelPresentStyle","PatternVariableStyle","SymbolShadowingStyle",
	"OrderOfEvaluationConflictStyle","UnknownOptionStyle",
	"UnwantedAssignmentStyle"
	};


SHStylesheet[notebookArg:None|_Notebook:None]:=
	SSTemplate[notebookArg,
		DefaultStyle[
			FrontEnd`FileName[Evaluate@{`Package`$PackageName},
				"SyntaxHighlighting.nb"]
			],
		Sequence@@$SyntaxStyles,
		Directive["Input","ColoredInput"]
		];


Clear/@{
"$SHPunctuation",
"$SHFormattingHeads",
"$SHConstants",
"$SHTypes",
"$SHCommands",
"$SHFunctions",
"$SHContextStyling"};


$SHStringSepDefault={"\""};
$SHStringSep=$SHStringSepDefault;


$SHPunctuationDefault={
"@","//","~",";",
",","-","+",
"/","*","(",")",
"[","]","{","}",
"[[","]]","<",">",
":","::",
".","..","...",
"_","__","___",
"?","&","&&",
"~~","\[RuleDelayed]","->",":>",
"|",":=","^:=",
"/:","/;"
};
$SHPunctuation=$SHPunctuationDefault;


$SHFormattingHeadsDefault={
"Graphics","Graphics3D",
"Point","Line",
"Disk","Sphere",
"Tube","Arrow"
};
$SHFormattingHeads=$SHFormattingHeadsDefault;


$SHConstantsDefault={
"$Failed","False","True","$Canceled",
"All"
};
$SHConstants=$SHConstantsDefault;


$SHTypesDefault={
	"Entity","Quantity",
	"ChannelObject","CloudObject",
	"CloudExpression","CellObject",
	"Notebook","Cell",
	"ResourceObject","LocalObject",
	"FormObject"};
$SHTypes=$SHTypesDefault;


$SHCommandsDefault={
"Return","Break","DialogReturn",
"Goto","Throw","Catch",
"Message","Print",
"Assert",
"Begin","BeginPackage",
"End","EndPackage"
};
$SHCommands=$SHCommandsDefault;


$SHFunctionsDefault={
	"With","Module","Block",
	"If","Switch","Which",
	"Do","Table",
	"For","While",
	"Replace","ReplaceAll",
	"ReplaceRepeated","ReplacePart",
	"Map","MapIndexed","MapThread"
	};
$SHFunctions=$SHFunctionsDefault;


$SHContextStylingDefault={
	"System`"->"SystemStyle",
	"Global`"->"GlobalStyle",
	Automatic->"UndefinedStyle"
	};
$SHContextStyling=$SHContextStylingDefault;


Map[
	Replace[#,{
		Hold[s_]:>
			(s/:HoldPattern[(h:Set|SetDelayed)[s,v_]]/;!TrueQ@$SHApplyingSyntaxStyling:=
				Block[{$SHApplyingSyntaxStyling=True},
					h[s,v];
					Block[{$SHForceCells=False},SHApplyStyling[]];
					If[h==Set,v];
					])
		}]&,
	Thread@Hold@{
		$SHPunctuation,
		$SHFormattingHeads,
		$SHContextStyling,
		$SHTypes,
		$SHFunctions,
		$SHConstants,
		$SHCommands,
		$SHContextStyling
		}
	];


MapThread[
	Replace[#,{
		Hold[s_]:>
			(s/:HoldPattern[Unset[s]]:=Block[{$SHForceCells=False},s=#2])
		}]&,{
		Thread@Hold@{
			$SHPunctuation,
			$SHFormattingHeads,
			$SHContextStyling,
			$SHTypes,
			$SHFunctions,
			$SHConstants,
			$SHCommands,
			$SHContextStyling
			},
		{
			$SHPunctuationDefault,
			$SHFormattingHeadsDefault,
			$SHContextStylingDefault,
			$SHTypesDefault,
			$SHFunctionsDefault,
			$SHConstantsDefault,
			$SHCommandsDefault,
			$SHContextStylingDefault
			}
		}]


$SHForceCells=True;


SHSetHighlightingStyle[nb_,override:True|False:True]:=
	Block[{$SHForceCells=False},
		NotebookDelete@
			SSCells[nb,
				DefaultStyle[
					Except@
						FrontEnd`FileName[
							Evaluate@{`Package`$PackageName},
							"SyntaxHighlighting.nb"
							]
					]
				];
		SSCells[
			DefaultStyle[
				FrontEnd`FileName[Evaluate@{`Package`$PackageName},
				"SyntaxHighlighting.nb"]
				],
			True
			]
		];


Options[SHConfigureSyntaxColoring]={
	"Punctuation"->Automatic,
	"Commands"->Automatic,
	"Functions"->Automatic,
	"Types"->Automatic,
	"Constants"->Automatic,
	"Contexts"->Automatic
	};
SHConfigureSyntaxColoring[
	objs:Except[_?OptionQ]..,
	ops:OptionsPattern[]
	]:=
	SSEdit[objs,{
		AutoStyleWords->
			Join[
				Thread[
					Replace[
						OptionValue["Punctuation"],
							Except[_List]:>$SHPunctuation
						]->"OperatorStyle"
						],
				Thread[$SHStringSep->"StringStyle"],
				Thread[
					Replace[
						OptionValue["Commands"],
							Except[_List]:>$SHCommands
						]->"CommandStyle"
						],
				Thread[
					Replace[
						OptionValue["Functions"],
							Except[_List]:>$SHFunctions
						]->"FunctionStyle"
					],
				Thread[
					Replace[
						OptionValue["Types"],
							Except[_List]:>$SHTypes
						]->"TypeStyle"
					],
				Thread[
					Replace[
						OptionValue["Constants"],
							Except[_List]:>$SHConstants
						]->"ConstantStyle"
					]
				],
		AutoStyleOptions->{
			"UndefinedSymbolStyle"->
				"UndefinedSymbolStyle",
			"CommentStyle"->
				"CommentStyle",
			"StringStyle"->
				"StringStyle",
			"SymbolContextStyles"->
				Replace[OptionValue@"Contexts",
					Except[_List]->$SHContextStyling
					],
			"EmphasizedSyntaxErrorStyle"->
				"EmphasizedSyntaxErrorStyle",
			"ExcessArgumentStyle"->
				"ExcessArgumentStyle",
			"FormattingErrorStyle"->
				"FormattingErrorStyle",
			"FunctionLocalVariableStyle"->
				"FunctionLocalVariableStyle",
			"GlobalToLocalScopeConflictStyle"->
				"GlobalToLocalScopeConflictStyle",
			"GraphicsCompatibilityProblemStyle"->
				"GraphicsCompatibilityProblemStyle",
			"LocalScopeConflictStyle"->
				"LocalScopeConflictStyle",
			"LocalVariableStyle"->
				"LocalVariableStyle",
			"MissingArgumentStyle"->
				"MissingArgumentStyle",
			"MissingArgumentTemplateStyle"->
				"MissingArgumentTemplateStyle",
			"MisspelledWordStyle"->
				"MisspelledWordStyle",
			"NoKernelPresentStyle"->
				"NoKernelPresentStyle",
			"OrderOfEvaluationConflictStyle"->
				"OrderOfEvaluationConflictStyle",
			"PatternVariableStyle"->
				"PatternVariableStyle",
			"SymbolContextStyles"->
				"SymbolContextStyles",
			"SymbolShadowingStyle"->
				"SymbolShadowingStyle",
			"SyntaxErrorStyle"->
				"SyntaxErrorStyle",
			"UndefinedSymbolStyle"->
				"UndefinedSymbolStyle",
			"UnknownOptionStyle"->
				"UnknownOptionStyle",
			"UnwantedAssignmentStyle"->
				"UnwantedAssignmentStyle"
				}
			}];


SHRemoveSyntaxColoring[objs_]:=
	SSEdit[objs,
		AutoStyleWords->
			Inherited,
		AutoStyleOptions->
			{
				"UndefinedSymbolStyle"->Inherited,
				"CommentStyle"->Inherited,
				"StringStyle"->Inherited,
				"SymbolContextStyles"->Inherited,
				"EmphasizedSyntaxErrorStyle"->Inherited,
				"ExcessArgumentStyle"->Inherited,
				"FormattingErrorStyle"->Inherited,
				"FunctionLocalVariableStyle"->Inherited,
				"GlobalToLocalScopeConflictStyle"->Inherited,
				"GraphicsCompatibilityProblemStyle"->Inherited,
				"LocalScopeConflictStyle"->Inherited,
				"LocalVariableStyle"->Inherited,
				"MissingArgumentStyle"->Inherited,
				"MissingArgumentTemplateStyle"->Inherited,
				"MisspelledWordStyle"->Inherited,
				"NoKernelPresentStyle"->Inherited,
				"OrderOfEvaluationConflictStyle"->Inherited,
				"PatternVariableStyle"->Inherited,
				"SymbolContextStyles"->Inherited,
				"SymbolShadowingStyle"->Inherited,
				"SyntaxErrorStyle"->Inherited,
				"UndefinedSymbolStyle"->Inherited,
				"UnknownOptionStyle"->Inherited,
				"UnwantedAssignmentStyle"->Inherited
				}
		];


Clear@SHApplyStyling;
Options[SHApplyStyling]=
	Options@SHConfigureSyntaxColoring;
SHApplyStyling[cell:_CellObject|{__CellObject},ops:OptionsPattern[]]:=
	SHConfigureSyntaxColoring[cell,ops];
SHApplyStyling[
	nb:_NotebookObject|Automatic:Automatic,
	style_:All,
	ops:OptionsPattern[]
	]:=
	(
		SHSetHighlightingStyle[nb,$SHForceCells];
		With[{s=
			Replace[SSCells[nb,style,$SHForceCells],{
				{}:>
					If[TrueQ@$SHForceCells,
						SSCells[nb,style,$SHForceCells],
						{}
						]
				}]
			},
			SHConfigureSyntaxColoring[s,ops]
			]
		);


SHClearStyling[cell:_CellObject|{__CellObject}]:=
	SHRemoveSyntaxColoring[cell];
SHClearStyling[
	nb:_NotebookObject|Automatic:Automatic,
	style_:All
	]:=
	With[{s=SSCells[nb,style]},
		If[Length@s>0,
			SHClearStyling[s]
			]
		]


End[];



